{"version":3,"sources":["webpack:///./src/pages/Daily.js"],"names":["location","currentUser","loggedUser","useState","userData","setUserData","mlsID","alreadyPlayed","setAlreadyPlayed","previousScore","setPreviousScore","houseData","setHouse","pics","setPictures","category","text","feats","setFeats","assessment","total","year","taxAss","setTaxAss","readTax","setReadTax","taxModalShow","setTaxModalShow","trendModalShow","setTrendModalShow","median","trend","setTrend","readTrend","setReadTrend","listItems","priceSub","setPriceSub","priceComma","setPriceComma","hideInput","setHideInput","ogGuess","setOgGuess","priceDiff","setPriceDiff","percentageScore","setPercentageScore","modalShow","setModalShow","dark","useContext","ThemeContext","rerendering","setRerender","mapModalShow","setMapModalShow","houseSize","houseUnits","housePrice","houseCity","houseState","houseLine","houseZip","shareOutput","setShareOutput","dailyHouseVars","setDailyHouseVars","dailyList","getStateMLS","mlsParam","stateParam","todaysDate","Date","startDate","diffTime","getTime","choice","Math","trunc","length","dailyParams","String","divider","search","substring","ret","GetHouseData","localUserData","a","altReturn","houseVars","stateID","console","log","window","dailyStorage","JSON","parse","localStorage","getItem","timeStored","parseInt","time","keyName","key","localeCompare","points","results","percent","dailyAccuracy","parseFloat","dailyPoints","sc","floor","dayID","indexOf","push","i","tempShareOutput","join","firebase","firestore","collection","doc","get","then","exists","data","catch","error","loadPageData","pageData","tempPic","photos","forEach","element","str","href","better","concat","src","features","tax_history","propData","by_prop_type","useEffect","userStorage","uid","setItem","stringify","URLSearchParams","getHouse","undefined","price","building_size","size","units","address","city","state","line","postal_code","lat","lon","SubmitPrice","evt","preventDefault","mlsChosen","stateChosen","abs","pointsEarned","round","pow","todaysEpoch","dailyData","userID","previousData","thumbNail","trim","betterThumbNail","accuracy","toFixed","badgeKey","completed","baths","beds","set","num","random","setTimeout","LoadWithState","searchParams","LoadStateHouse","LoadWithRandom","LoadRandomHouse","Comma","Num","x","replace","split","x1","x2","rgx","test","sharePopover","id","Body","NewScoreModal","props","aria-labelledby","centered","className","Header","style","backgroundColor","color","Title","display","fontWeight","SocialButtons","onClick","onHide","variant","sec","taxRead","trendRead","original","askLogIn","pBar","striped","bordered","hover","width","fontSize","height","now","to","learnMore","textAlign","Footer","textShadow","TaxModal","TrendModal","margin","Object","entries","map","item","ind","listing_price","txt","charAt","toUpperCase","substr","toLowerCase","toTitleCase","parceInp","BigMap","useCallback","center","zoom","setmap","flyTo","attributionControl","zoomControl","whenCreated","scrollWheelZoom","url","pathOptions","radius","SmallMap","MapModal","rel","class","encodeURIComponent","title","target","trigger","placement","overlay","navigator","clipboard","writeText","integrity","crossorigin","e","val","value","valClean","Text","borderColor","type","onChange","onKeyPress","placeholder","show","images","transitionDurationMax","hasMediaButton","hasIndexBoard","borderTop","year_built","position","opacity","border","bottom","zIndex","stroke","fill","preserveAspectRatio","role","viewBox","xmlns","d","description","Item","eventKey","borderWidth","Button","f","index"],"mappings":"+4BA2Be,sBAAgB,EAAdA,SAAe,IAE1BC,EAAcC,cAFW,EAKGC,mBAAS,IAAlCC,EALsB,KAKZC,EALY,OAOLF,mBAAS,IAA3BG,EAPuB,aASYH,sBAAlCI,EATsB,KASRC,EATQ,OAUYL,mBAAS,GAA3CM,EAVsB,KAURC,EAVQ,OAWAP,mBAAS,IAA/BQ,EAXsB,KAWZC,EAXY,OAYDT,mBAAS,IAA9BU,EAZsB,KAYhBC,EAZgB,OAaHX,mBAAS,CAAC,CAACY,SAAS,SAASC,KAAK,CAAC,SAAU,aAAhEC,EAbsB,KAafC,EAbe,OAeDf,mBAAS,CAAC,CAACgB,WAAW,CAACC,MAAM,UAAUC,KAAK,YAAjEC,EAfsB,KAedC,EAfc,OAgBCpB,oBAAS,GAAhCqB,EAhBsB,KAgBbC,EAhBa,OAiBWtB,oBAAS,GAA1CuB,GAjBsB,KAiBRC,GAjBQ,QAmBexB,oBAAS,GAA9CyB,GAnBsB,MAmBNC,GAnBM,SAoBH1B,mBAAS,CAAC2B,OAAO,WAApCC,GApBsB,MAoBfC,GApBe,SAqBK7B,oBAAS,GAApC8B,GArBsB,MAqBXC,GArBW,SAuBK/B,mBAAS,MAApCgC,GAvBsB,gBAyBGhC,mBAAS,IAAlCiC,GAzBsB,MAyBZC,GAzBY,SA0BOlC,qBAA7BmC,GA1BsB,MA0BVC,GA1BU,SA2BKpC,oBAAS,GAApCqC,GA3BsB,MA2BXC,GA3BW,SA6BCtC,mBAAS,GAAhCuC,GA7BsB,MA6BbC,GA7Ba,SA8BKxC,mBAAS,GAApCyC,GA9BsB,MA8BXC,GA9BW,SA+BiB1C,mBAAS,GAAhD2C,GA/BsB,MA+BLC,GA/BK,SAgCK5C,oBAAS,GAApC6C,GAhCsB,MAgCXC,GAhCW,MAiCrBC,GAASC,qBAAWC,KAApBF,KAjCqB,GAoCM/C,mBAAS,GAArCkD,GApCsB,MAoCTC,GApCS,SAqCWnD,oBAAS,GAA1CoD,GArCsB,MAqCRC,GArCQ,MAuCzBC,GAAY,EACZC,GAAa,GACbC,GAAa,EACbC,GAAY,GACZC,GAAa,GACbC,GAAY,GACZC,GAAW,GA7Cc,GAiDS5D,mBAAS,IAAxC6D,GAjDsB,MAiDTC,GAjDS,SAmDc9D,mBAAS,IAA7C+D,GAnDsB,MAmDPC,GAnDO,MAqDzBC,GAAY,CAAE,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAElB,SAASC,KAGP,IASIC,EAAUC,EARVC,EAAa,IAAIC,KACjBC,EAAY,IAAID,KAFR,cAGRE,EAAWH,EAAWI,UAAYF,EAAUE,UAI5CC,EAHWC,KAAKC,MAAMJ,EAAQ,OAGXP,GAAUY,OAG7BC,EAAcC,OAAOd,GAAUS,IACnC,GAAII,EAAYD,OAAS,EACzB,CACE,IAAIG,EAAUF,EAAYG,OAAO,KACjCd,EAAWW,EAAYI,UAAU,EAAEF,GACnCZ,EAAaU,EAAYI,UAAWF,EAAQ,GAE9C,IAAIG,EAAM,CAAC,MAAQhB,EAAS,QAAUC,GAItC,OAFAJ,GAAkBmB,GAEXA,EAKT,IAAMC,GAAY,6BAAG,WAAMC,GAAN,iDAAAC,EAAA,sDAiBnB,GAZIC,EAAY,GAEZC,EAAYtB,KACZC,EAAWqB,EAAUrF,MACrBiE,EAAaoB,EAAUC,QAE3BC,QAAQC,IAAIxB,EAASC,GAGC,oBAAXwB,SACTC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAE9B,MAAhBJ,EAgB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","file":"component---src-pages-daily-js-c648d8425d47e84183ef.js","sourcesContent":["import React, {useState, useContext, useEffect, memo, useCallback } from \"react\"\r\nimport ThemeContext from \"../utils/theme\"\r\nimport { PageLayout } from \"../components\"\r\nimport { SEO } from \"../utils\"\r\nimport { Container, Image, InputGroup, FormControl, Form, Button, Modal, CloseButton, ProgressBar, OverlayTrigger, Popover, Table} from \"react-bootstrap\"\r\nimport { Accordion } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport firebase from \"../components/firebase\"\r\n\r\nimport { MapContainer, TileLayer, Marker, Popup, Circle,useMap } from 'react-leaflet'\r\n\r\nimport { UserData }  from  \"../components/UserData\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css'; // or include from a CDN\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\n\r\nimport Carousel from 'react-gallery-carousel';\r\nimport 'react-gallery-carousel/dist/index.css';\r\nimport './grid.css';\r\n\r\n\r\nimport { loggedUser, printing } from  \"../components/FirebaseAuth\"\r\nimport { LoadStateHouse, LoadRandomHouse } from  \"../components/LoadStateHouse\"\r\nimport { Link } from \"@reach/router\"\r\n\r\n\r\nexport default ({location}) => {\r\n\r\n  let currentUser = loggedUser()\r\n\r\n  //let userData = UserData()\r\n  const [userData, setUserData] = useState({})\r\n\r\n  const[mlsID,setmlsID] = useState(\"\")\r\n\r\n  const [alreadyPlayed,setAlreadyPlayed] = useState();\r\n  const [previousScore,setPreviousScore] = useState(0);\r\n  const [houseData,setHouse] = useState({});\r\n  const [pics, setPictures] = useState([]);\r\n  const [feats, setFeats] = useState([{category:\"filler\",text:[\"filler\", \"filler\"]}]);\r\n  \r\n  const [taxAss, setTaxAss] = useState([{assessment:{total:\"filler\"},year:\"filler\"}]);\r\n  const [readTax, setReadTax] = useState(false)\r\n  const [taxModalShow, setTaxModalShow] = useState(false);\r\n\r\n  const [trendModalShow, setTrendModalShow] = useState(false);\r\n  const [trend, setTrend] = useState({median:\"filler\"});\r\n  const [readTrend, setReadTrend] = useState(false)\r\n\r\n  const [listItems, setListItems] = useState(null)\r\n\r\n  const [priceSub, setPriceSub] = useState(0);\r\n  const [priceComma, setPriceComma] = useState();\r\n  const [hideInput, setHideInput] = useState(false);\r\n\r\n  const [ogGuess, setOgGuess] = useState(0);\r\n  const [priceDiff, setPriceDiff] = useState(0);\r\n  const [percentageScore, setPercentageScore] = useState(0);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const { dark } = useContext(ThemeContext)\r\n  \r\n\r\n  const [rerendering, setRerender] = useState(0.0)\r\n  const [mapModalShow, setMapModalShow] = useState(false);\r\n\r\n  let houseSize = 0\r\n  let houseUnits = \"\"\r\n  let housePrice = 0\r\n  let houseCity = \"\"\r\n  let houseState = \"\"\r\n  let houseLine = \"\"\r\n  let houseZip = \"\"\r\n  let houseLat = 0\r\n  let houseLon = 0\r\n\r\n  const [shareOutput, setShareOutput] = useState('');\r\n \r\n  const [dailyHouseVars,setDailyHouseVars] = useState({});  \r\n  \r\n  let dailyList = [ \"M9170056565_RI\",\r\n                    \"M8686638647_LA\",\r\n                    \"M7830179733_LA\",\r\n                    \"M9564664712_ID\",\r\n                    \"M9077088995_ID\",\r\n                    \"M5991137119_NJ\",\r\n                    \"M1966510292_ID\",\r\n                    \"M9239855212_TX\",\r\n                    \"M4195415168_MI\",\r\n                    \"M7575594712_MS\",\r\n                    \"M7748332780_MS\",\r\n                    \"M9138171415_MT\",\r\n                    \"M7397671359_MT\",\r\n                    \"M7012230511_IA\",\r\n                    \"M8520035029_IA\",\r\n                    \"M5154480603_SC\",\r\n                    \"M5084680822_SC\",\r\n                    \"M6488382672_SC\",\r\n                    \"M9644614968_NJ\",\r\n                    \"M8665237938_AR\",\r\n                    \"M7875890587_AR\",\r\n                    \"M8104221646_AR\",\r\n                    \"M1927703851_ID\",\r\n                    \"M9120926058_NM\",\r\n                    \"M8187403385_AK\",\r\n                    \"M9518084456_MT\",\r\n                    \"M5477443741_DE\",\r\n                    \"M8628995755_LA\",\r\n                    \"M7838859429_LA\",\r\n                    \"M4721900943_NY\",\r\n                    \"M4785320056_NY\",\r\n                    \"M4335688852_NY\",\r\n                    \"M3623478575_CT\",\r\n                    \"M4385419535_CT\",\r\n                    \"M3424272028_CT\",\r\n                    \"M4970060479_CT\",\r\n                    \"M6604904318_MD\",\r\n                    \"M6866287639_MD\",\r\n                    \"M6848027327_MD\",\r\n                    \"M6085938803_MD\",\r\n                    \"M4317786525_PA\",\r\n                    \"M4750877307_PA\",\r\n                    \"M3472201440_PA\",\r\n                    \"M3434309865_PA\",\r\n                    \"M4111182365_PA\",\r\n                    \"M3110062414_PA\",\r\n                    \"M4199380152_NH\",\r\n                    \"M4872801626_NH\",\r\n                    \"M2925702696_CA\",\r\n                    \"M1191532887_CA\",\r\n                    \"M2887983051_CA\",\r\n                    \"M2901684994_CA\",\r\n                    \"M2962802303_CA\",\r\n                    \"M1728490516_CA\",\r\n                    \"M8524835765_NE\",\r\n                    \"M7956885132_NE\",\r\n                    \"M7079925302_NE\",\r\n                    \"M7666240525_NE\",\r\n                    \"M7599402575_NE\",\r\n                    \"M8319829518_NE\",\r\n                    \"M7855237398_AK\",\r\n                    \"M8342280581_AK\",\r\n                    \"M3559163092_MI\",\r\n                    \"M4342738688_MI\",\r\n                    \"M4370505087_MI\",\r\n                    \"M2602550906_NM\",\r\n                    \"M1575703879_NM\",\r\n                    \"M2004480528_NM\",\r\n                    \"M1380894990_NM\",\r\n                    \"M7074547359_OK\",\r\n                    \"M9535943353_OK\",\r\n                    \"M8914616978_OK\",\r\n                    \"M8263363117_OK\",\r\n                    \"M8176974546_OK\",\r\n                    \"M8264476020_OK\",\r\n                    \"M2348502253_AZ\",\r\n                    \"M2429798166_AZ\",\r\n                    \"M1733563118_AZ\",\r\n                    \"M1410334076_AZ\",\r\n                    \"M5665826413_FL\",\r\n                    \"M5199462188_FL\",\r\n                    \"M6373270654_FL\",\r\n                    \"M6865107387_FL\",\r\n                    \"M5545424677_FL\",\r\n                    \"M6444862166_FL\",\r\n                    \"M3429476908_ME\",\r\n                    \"M3807604276_ME\",\r\n                    \"M9043353765_ME\",\r\n                    \"M3371975558_ME\",\r\n                    \"M3682336934_ME\",\r\n                    \"M4851397677_VT\",\r\n                    \"M4671962164_VT\",\r\n                    \"M9636159244_VT\",\r\n                    \"M4247179058_VT\",\r\n                    \"M3220913980_MA\",\r\n                    \"M3639254450_MA\",\r\n                    \"M3787774271_KY\",\r\n                    \"M3826083660_KY\",\r\n                    \"M4088544513_KY\",\r\n                    \"M4619168032_KY\",\r\n                    \"M4126294913_KY\",]\r\n  \r\n  function getStateMLS()\r\n  {\r\n\r\n    let start = \"03/02/2022\"   \r\n    let todaysDate = new Date()\r\n    let startDate = new Date(start)\r\n    let diffTime = todaysDate.getTime() - startDate.getTime()\r\n    let diffDays = Math.trunc(diffTime / (1000 * 3600 * 24) )\r\n\r\n\r\n    let choice = diffDays%(dailyList.length)\r\n\r\n    let mlsParam, stateParam\r\n    let dailyParams = String(dailyList[choice]) \r\n    if (dailyParams.length > 0)\r\n    {\r\n      let divider = dailyParams.search(\"_\")\r\n      mlsParam = dailyParams.substring(0,divider)\r\n      stateParam = dailyParams.substring((divider+1))\r\n    }\r\n    let ret = {\"mlsID\":mlsParam,\"stateID\":stateParam}\r\n\r\n    setDailyHouseVars(ret)\r\n\r\n    return ret\r\n\r\n  }\r\n\r\n\r\n  const GetHouseData = async(localUserData) =>\r\n  {\r\n\r\n    \r\n    //console.log(\"------- CALLED GET HOUSE DATA\")\r\n    let altReturn = {}\r\n\r\n    let houseVars = getStateMLS()\r\n    let mlsParam = houseVars.mlsID \r\n    let stateParam = houseVars.stateID\r\n\r\n    console.log(mlsParam,stateParam)\r\n\r\n    let dailyStorage\r\n    if (typeof window !== 'undefined') \r\n    { dailyStorage = JSON.parse(localStorage.getItem('daily')) }\r\n\r\n    if(dailyStorage != null)\r\n    {\r\n\r\n      let timeStored = (new Date(parseInt(dailyStorage.time))).getTime()\r\n      //timeStored = 1645851600000\r\n\r\n      let todaysDate = new Date()\r\n      let diffTime = todaysDate.getTime() - timeStored\r\n      let diffDays = Math.trunc(diffTime / (1000 * 3600 * 24) )\r\n\r\n      //console.log(\"it has been\",diffDays,\"since daily was updated\", new Date(\"2/26/2022\").getTime())\r\n\r\n      \r\n      let played = false\r\n\r\n\r\n      if (dailyStorage != null)\r\n      {\r\n\r\n        //if(diffDays == 0)\r\n        //{\r\n          \r\n          let keyName = `${mlsParam}_${stateParam}`\r\n          //console.log(\"keyName:\", keyName, \"|\", dailyStorage.key, (String(dailyStorage.key)).localeCompare(String(keyName)));\r\n          if( (String(dailyStorage.key)).localeCompare(String(keyName)) == 0 )\r\n          {\r\n            //console.log(\"has already played this map\")\r\n            //played = true\r\n            let ret = {\"played\":true, \"points\":dailyStorage.points}\r\n\r\n            altReturn = ret\r\n\r\n            let results = []\r\n            let percent \r\n            let dailyAccuracy\r\n            if(dailyStorage.percent == null)\r\n            {\r\n              dailyAccuracy = parseInt(dailyStorage.points)/500\r\n            }\r\n            else\r\n            {\r\n              percent = parseFloat(dailyStorage.percent)\r\n              dailyAccuracy = (1-percent)\r\n            }\r\n\r\n            if (dailyAccuracy < 0)\r\n            { dailyAccuracy = 0} \r\n\r\n            let dailyPoints = dailyStorage.points\r\n            let maxBox = 8\r\n            let sc = Math.floor(dailyAccuracy*maxBox)\r\n\r\n            //let dayEpoch = new Date()\r\n            //console.log((String(dayEpoch.getMonth()+1)).padStart(2, '0'))\r\n            //let dayID = (String(dayEpoch.getMonth()+1)).padStart(2, '0').concat((String(dayEpoch.getDate())).padStart(2, '0'))\r\n            //let dayIDYear = String(String(dayEpoch.getFullYear())).concat(dayID)\r\n            \r\n            let dayID = dailyList.indexOf(keyName) + 1\r\n            results.push(`#Appraisir #Appraisir${dayID}\\n`)\r\n            results.push(`📈${Math.floor(dailyAccuracy*100)}% ✨${dailyPoints}\\n`)\r\n\r\n            //results.push(\"🏘️🌳🏘️🌳🏘️🌳🏘️🌳 \\n\")\r\n            //results.push(`💲${dailyDiff}🔺 \\n`)\r\n            for (let i = 0; i < maxBox; i++) \r\n            {\r\n              if(i < sc)\r\n              { results.push('🟩') }\r\n              else\r\n              { results.push('🟥') }\r\n            }\r\n            results.push('\\n')\r\n            results.push(\"https://Appraisir.com/Daily \\n\")\r\n            let tempShareOutput = String(results.join(\"\"))\r\n\r\n            setShareOutput(tempShareOutput)\r\n\r\n\r\n            //console.log(\"return\",ret)\r\n          }\r\n        //}\r\n      }\r\n      else\r\n      {\r\n        console.log(\"user DATA is null\")\r\n      }\r\n    }\r\n\r\n\r\n    //console.log(\"RUNNING States FIREBASE CALL\")\r\n    return firebase.firestore().collection('States').doc(String(stateParam)).collection('buffer').doc(mlsParam).get()\r\n    .then((doc) => {\r\n      if (doc.exists) \r\n      {\r\n          //console.log(\"Document data:\", doc.data());\r\n          altReturn[\"house\"] = doc.data()\r\n          return altReturn\r\n      } \r\n      else \r\n      {\r\n          // doc.data() will be undefined in this case\r\n          console.log(\"No such document!\");\r\n      }\r\n    }).catch((error) => {\r\n        console.log(\"Error getting document:\", error);\r\n    });\r\n  }\r\n\r\n  const loadPageData = (pageData) =>\r\n  {\r\n    setAlreadyPlayed(false)\r\n    setHouse(pageData)\r\n    let tempPic = []\r\n    pageData.photos.forEach(element => {\r\n      let str = element.href\r\n      let trim = str.substring(0, (str.length-5))\r\n      let better = trim.concat(\"od-w1024_h768_x2.webp\")\r\n      tempPic.push({src:better})\r\n    });\r\n\r\n    setFeats(pageData.features)\r\n    setTaxAss(pageData.tax_history)\r\n    setPictures(tempPic)\r\n\r\n    \r\n    if(pageData.trend && pageData.trend.median)\r\n    {\r\n\r\n      let propData = pageData.trend.median.by_prop_type\r\n      //console.log(\"trend Data\",propData)\r\n      setTrend(propData)\r\n    }\r\n    else\r\n    {\r\n      let propData = {median:'none'}\r\n      setTrend(propData)\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => \r\n  {\r\n    \r\n    (async () =>\r\n    { \r\n      houseLat = 0\r\n      houseLon = 0\r\n      let userStorage = JSON.parse(localStorage.getItem('userData'))\r\n      if (userStorage == null)\r\n      {\r\n        if(currentUser && currentUser.uid)\r\n        {\r\n          //console.log(\"RUNNING Users FIREBASE CALL\")\r\n          await firebase.firestore().collection('Users').doc(String(currentUser.uid)).get()\r\n          .then((doc) => {\r\n            if (doc.exists) \r\n            {\r\n                //console.log(\"Document data:\", doc.data());\r\n                //doc.data()\r\n                setUserData(doc.data())\r\n                localStorage.setItem('userData', JSON.stringify(doc.data()) )\r\n            } \r\n            else \r\n            {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such user!\");\r\n            }\r\n          }).catch((error) => \r\n          {\r\n              console.log(\"Error getting user:\", error);\r\n          });\r\n        }\r\n      }\r\n      else \r\n      {\r\n        setUserData(userStorage)\r\n        //console.log(\"didnt run firebase call because data is in local storage\", userStorage)\r\n      }\r\n      \r\n\r\n      let searchParams\r\n      if (typeof window !== 'undefined') \r\n      { searchParams = new URLSearchParams(window.location.search); }\r\n\r\n\r\n      //console.log(\"there was no houseinfo\")\r\n      let getHouse\r\n      if (userStorage != null)\r\n      {  \r\n        getHouse = await GetHouseData(userStorage) \r\n        //console.log(\"ran with userStorage\",userStorage)\r\n      }\r\n      else\r\n      { \r\n        getHouse = await GetHouseData(userData)  \r\n        //console.log(\"ran with userdata\",userData)\r\n      }\r\n      if(getHouse[\"played\"] == undefined)\r\n      {\r\n        loadPageData(getHouse[\"house\"])\r\n      }\r\n      else\r\n      {\r\n        loadPageData(getHouse[\"house\"])\r\n        setPreviousScore(getHouse[\"points\"])\r\n        setAlreadyPlayed(true)\r\n      }\r\n\r\n    })()\r\n  }, [mlsID, rerendering])\r\n\r\n  if(houseData)\r\n  {\r\n    housePrice = houseData.price\r\n    \r\n    if(houseData.building_size)\r\n    {\r\n      houseSize = houseData.building_size.size\r\n      houseUnits = houseData.building_size.units\r\n    }\r\n    if(houseData.address)\r\n    {\r\n      houseCity = houseData.address.city\r\n      houseState = houseData.address.state\r\n      houseLine = houseData.address.line\r\n      houseZip = houseData.address.postal_code\r\n      houseLat = houseData.address.lat\r\n      houseLon = houseData.address.lon\r\n      //setLatLongPoint([parseFloat(houseLat), parseFloat(houseLon)])\r\n\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  const SubmitPrice = async (evt) => \r\n  {\r\n    if(evt)\r\n    { \r\n      evt.preventDefault(); \r\n    }\r\n    \r\n\r\n    let houseVars = {...dailyHouseVars}\r\n    let mlsChosen = houseVars.mlsID \r\n    let stateChosen = houseVars.stateID\r\n\r\n\r\n\r\n    //let pointsEarned = Math.floor( 100*Math.pow(0.999969,(Math.abs(priceSub-housePrice)) ) )\r\n    let percent = (Math.abs(priceSub-housePrice) / housePrice)\r\n    let pointsEarned = Math.round( 500*(1-2*(Math.pow(percent,2)) ))\r\n\r\n    if (pointsEarned < 0)\r\n    {\r\n      setOgGuess(0)\r\n    }\r\n    else\r\n    {\r\n      setOgGuess(pointsEarned)\r\n    }\r\n\r\n    if(readTax == true)\r\n    {\r\n      pointsEarned = (pointsEarned - (500*(0.1)))\r\n    }\r\n\r\n    if(readTrend == true)\r\n    {\r\n      pointsEarned = (pointsEarned - (500*(0.2)))\r\n    }\r\n\r\n    setPercentageScore(percent)\r\n    if (pointsEarned < 0)\r\n    {\r\n      pointsEarned = 0\r\n    }\r\n\r\n    let showScore  = pointsEarned + 1\r\n\r\n    \r\n    setPriceDiff(showScore)  \r\n\r\n    \r\n    // let entry =\r\n    // {\r\n    //  \"state\":`${stateChosen}`, \r\n    //  \"mls\": `${mlsChosen}`,\r\n    //  \"points\": `${pointsEarned}`       \r\n    // }\r\n    let todaysDate = new Date()\r\n    let todaysEpoch = String(todaysDate.getTime())\r\n    \r\n    let dailyData = \r\n    {\r\n      'time':`${todaysEpoch}`,\r\n      'key':`${mlsChosen}_${stateChosen}`,\r\n      'points':`${pointsEarned}`,\r\n      'percent':`${percent}`\r\n    }\r\n    localStorage.setItem('daily', JSON.stringify(dailyData) )\r\n\r\n\r\n    let keyName = `daily:${todaysEpoch}.${mlsChosen}.${stateChosen}`\r\n    let entry = { [keyName]:`${pointsEarned}` }\r\n    if(currentUser && currentUser.uid)\r\n    {\r\n      let userID = `${currentUser.uid}`\r\n      let previousData = {}\r\n\r\n      let userStorage = JSON.parse(localStorage.getItem('userData'))\r\n\r\n      if (userStorage == null)\r\n      {\r\n        //console.log(\"RUNNING Users FIREBASE CALL\")\r\n        await firebase.firestore().collection('Users').doc(String(currentUser.uid)).get()\r\n        .then((doc) => {\r\n          if (doc.exists) \r\n          {\r\n              //console.log(\"Document data:\", doc.data());\r\n              //doc.data()\r\n              previousData = doc.data()\r\n              localStorage.setItem('userData', JSON.stringify(doc.data()) )\r\n          } \r\n          else \r\n          {\r\n              // doc.data() will be undefined in this case\r\n              console.log(\"No such user!\");\r\n          }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting user:\", error);\r\n        });\r\n      }\r\n      else \r\n      {\r\n        previousData = userStorage\r\n        //console.log(\"didnt run Submit Price Users firebase read because data is in local storage\", userStorage)\r\n      }\r\n\r\n      if (previousData)\r\n      {\r\n        //console.log(\"User data:\", previousData);\r\n        let userData = previousData\r\n        let prevKey = `${mlsChosen}_${stateChosen}`\r\n\r\n        if (userData[prevKey])\r\n        {\r\n          //console.log(\"has already played this map\")\r\n          keyName = `daily:${todaysEpoch}.${mlsChosen}.${stateChosen}`\r\n        }\r\n        else \r\n        {\r\n          keyName = `${mlsChosen}_${stateChosen}`\r\n        }\r\n      }\r\n\r\n\r\n      \r\n\r\n      let addr = `${houseLine}, ${houseCity}, ${houseState}, ${houseZip}`\r\n\r\n      let thumbNail = houseData.photos[0].href\r\n      let trim = thumbNail.substring(0, (thumbNail.length-5))\r\n      let betterThumbNail = trim.concat(\"od-w1024_h768_x2.webp\")\r\n\r\n      previousData[keyName] = [pointsEarned,betterThumbNail]\r\n\r\n      let accuracy = ((1-percent)*100).toFixed(2)\r\n      if (accuracy < 0)\r\n      { accuracy = 0} \r\n      //console.log(\"accuracy is \", accuracy)\r\n\r\n      if(houseData.price > 1000000 && accuracy > 90.0)\r\n      {\r\n        let badgeKey = \"badge:Millionaire.Club\"\r\n        let pointsVar = 0\r\n        let completed \r\n        if(previousData[badgeKey])\r\n        { \r\n          completed = parseInt(previousData[badgeKey][2]) \r\n        }\r\n        if(completed)\r\n        { \r\n          completed += 1 \r\n        }\r\n        else\r\n        { \r\n          completed = 1\r\n        }\r\n        let goal = 10\r\n        let des = \"Score over 90% on houses greater than $1,000,000\"\r\n        let icon = \"MillionairClub.svg\"\r\n        previousData[badgeKey] = [pointsVar,des,completed,goal,icon]\r\n\r\n      }\r\n\r\n      if(houseSize > 3000 && accuracy > 80.0)\r\n      {\r\n        let badgeKey = \"badge:Mansion.Master\"\r\n        let pointsVar = 0\r\n        let completed \r\n        if(previousData[badgeKey])\r\n        { \r\n          completed = parseInt(previousData[badgeKey][2]) \r\n        }\r\n        if(completed)\r\n        { \r\n          completed += 1 \r\n        }\r\n        else\r\n        { \r\n          completed = 1\r\n        }\r\n        let goal = 20\r\n        let des = \"Score over 80% on houses larger than 3000 sqft\"\r\n        let icon = \"Mansion.svg\"\r\n        previousData[badgeKey] = [pointsVar,des,completed,goal,icon]\r\n\r\n      }\r\n      if(houseData.baths > houseData.beds)\r\n      {\r\n        let badgeKey = \"badge:Oval.Office\"\r\n        let pointsVar = 0\r\n        let completed \r\n        if(previousData[badgeKey])\r\n        { \r\n          completed = parseInt(previousData[badgeKey][2]) \r\n        }\r\n        if(completed)\r\n        { \r\n          completed += 1 \r\n        }\r\n        else\r\n        {  \r\n          completed = 1\r\n        }\r\n        let goal = 50\r\n        let des = \"Complete 50 houses that have more bathrooms than bedrooms\"\r\n        let icon = \"OvalOffice.svg\"\r\n        previousData[badgeKey] = [pointsVar,des,completed,goal,icon]\r\n\r\n      }\r\n\r\n      //console.log(\"entry would be\", previousData,\"user is\", userID)\r\n\r\n      //console.log(\"SETTING USERS FIREBASE CALL\")\r\n      firebase.firestore().collection('Users').doc(String(userID)).set(previousData)\r\n      \r\n      localStorage.setItem('userData', JSON.stringify(previousData) )\r\n      //console.log(\"updated userData in localstorage\", localStorage)\r\n    }\r\n\r\n    let results = []\r\n      \r\n    let dailyAccuracy = (1-percent)\r\n    if (dailyAccuracy < 0)\r\n    { dailyAccuracy = 0} \r\n    let dailyPoints = pointsEarned\r\n    let maxBox = 8\r\n    let sc = Math.floor(dailyAccuracy*maxBox)\r\n\r\n    //let dayEpoch = new Date()\r\n    //let dayID = (String(dayEpoch.getMonth()+1)).padStart(2, '0').concat((String(dayEpoch.getDate())).padStart(2, '0'))\r\n    //let dayIDYear = String(String(dayEpoch.getFullYear())).concat(dayID)\r\n\r\n    let dayID = dailyList.indexOf(`${mlsChosen}_${stateChosen}`) + 1\r\n    results.push(`#Appraisir #Appraisir${dayID}\\n`)\r\n    results.push(`📈${Math.floor(dailyAccuracy*100)}% ✨${dailyPoints}\\n`)\r\n\r\n    //results.push(\"🏘️🌳🏘️🌳🏘️🌳🏘️🌳 \\n\")\r\n    //results.push(`💲${dailyDiff}🔺 \\n`)\r\n    for (let i = 0; i < maxBox; i++) \r\n    {\r\n      if(i < sc)\r\n      { results.push('🟩') }\r\n      else\r\n      { results.push('🟥') }\r\n    }\r\n    results.push('\\n')\r\n    results.push(\"https://Appraisir.com/Daily \\n\")\r\n    let tempShareOutput = String(results.join(\"\"))\r\n\r\n    setShareOutput(tempShareOutput)\r\n\r\n    console.log(tempShareOutput)\r\n\r\n    setPriceComma(\"\")\r\n    \r\n    let num = Math.random() + Math.random() + Math.random()\r\n    setRerender(num)\r\n    //console.log(\"rerender was just called\")\r\n\r\n    setTimeout(() => \r\n    {  \r\n      setModalShow(true)\r\n      if(!currentUser)\r\n      {\r\n        setHideInput(true)\r\n        setTrend({median:'filler'})\r\n      }\r\n    }, 600);\r\n\r\n  }\r\n\r\n  const LoadWithState = async (evt) => \r\n  {\r\n    let searchParams\r\n    if (typeof window !== 'undefined') \r\n    { searchParams = new URLSearchParams(window.location.search); }\r\n\r\n    let stateChosen\r\n    if(searchParams)\r\n    {\r\n      stateChosen = String(searchParams.get('state'))\r\n    }\r\n\r\n    let houseVars = {...dailyHouseVars}\r\n    stateChosen = houseVars.stateID\r\n\r\n    LoadStateHouse(stateChosen,userData)\r\n\r\n    setTimeout(() => \r\n    {  \r\n      let num = Math.random() + Math.random() + Math.random()\r\n      setHideInput(false)\r\n      setRerender(num)\r\n      setReadTax(false)\r\n      setReadTrend(false)\r\n      setTrend({})\r\n      //console.log(\"Called rerender\")\r\n    }, 600);\r\n  \r\n  }\r\n  const LoadWithRandom = async (evt) => \r\n  {\r\n    if(evt)\r\n    { evt.preventDefault(); }\r\n    LoadRandomHouse(userData)\r\n\r\n    setTimeout(() => \r\n    {  \r\n      let num = Math.random() + Math.random() + Math.random()\r\n      setHideInput(false)\r\n      setRerender(num)\r\n      setReadTax(false)\r\n      setReadTrend(false)\r\n      setTrend({})\r\n      //console.log(\"Called rerender\")\r\n    }, 600);\r\n  }\r\n\r\n  function Comma(Num) \r\n  { //function to add commas to textboxes\r\n    if (Num == null)\r\n    {\r\n      Num = ''\r\n    }\r\n    Num += '';\r\n    Num = Num.replace(',', ''); Num = Num.replace(',', ''); Num = Num.replace(',', '');\r\n    Num = Num.replace(',', ''); Num = Num.replace(',', ''); Num = Num.replace(',', '');\r\n    let x = Num.split('.');\r\n    let x1 = x[0];\r\n    let x2 = x.length > 1 ? '.' + x[1] : '';\r\n    let rgx = /(\\d+)(\\d{3})/;\r\n    while (rgx.test(x1))\r\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\r\n    return x1 + x2;\r\n  }\r\n\r\n  const sharePopover = (\r\n    \r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Body>\r\n        Copied to Clipboard!\r\n      </Popover.Body>\r\n    </Popover>\r\n  );\r\n\r\n\r\n  function NewScoreModal(props) \r\n  {\r\n    let searchParams\r\n    if (typeof window !== 'undefined') \r\n    { searchParams = new URLSearchParams(window.location.search); }\r\n\r\n    let stateChosen\r\n    let mlsChosen\r\n    if(searchParams)\r\n    {\r\n      stateChosen = searchParams.get('state')\r\n      mlsChosen = searchParams.get('mls')\r\n    }\r\n\r\n    let accuracy = ((1-percentageScore)*100).toFixed(2)\r\n    if (accuracy < 0)\r\n    { accuracy = 0} \r\n    return (\r\n      \r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className = \"my-modal\"\r\n      >\r\n        <Modal.Header style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Modal.Title  id=\"contained-modal-title-vcenter\">\r\n            <div style={{display:\"inline\"}}>\r\n              You scored <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>{priceDiff - 1}</span> points (Max score 500). <SocialButtons/>\r\n            </div>\r\n            {/*<OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={sharePopover}>\r\n              <Button onClick={() => {navigator.clipboard.writeText(shareOutput)}} style = {{color: \"white\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}} title=\"Share Results\"  className=\"alignText\">\r\n                Share!\r\n              </Button > \r\n            </OverlayTrigger>\r\n            */}\r\n          </Modal.Title>\r\n          <CloseButton onClick={props.onHide} variant = {`${dark ? 'white' : ''}`} />\r\n        </Modal.Header>\r\n        <Modal.Body style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n\r\n          <p>\r\n\r\n            \r\n            {( () =>\r\n              {\r\n                \r\n                let sec, taxRead, trendRead, original \r\n\r\n                let labelText = ( () => { return (<>Actual list price is <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice).replace(/\\D/g,''))}</span></>) } )()\r\n\r\n                let pBar = ( () => { return (\r\n                <>\r\n                  <Table striped bordered hover variant={`${dark ? 'dark' : ''}`} style={{ width:'100%'}}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Your Guess</th>\r\n                        <th>List Price</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>\r\n                          <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(priceSub).replace(/\\D/g,''))}</span>\r\n                        </td>\r\n                        <td>\r\n                          <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice).replace(/\\D/g,''))}</span>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </Table>\r\n                  \r\n                  You were <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>{accuracy}%</span> accurate.\r\n                  <ProgressBar style={{backgroundColor:'#00dd00 !important', width:'100%',fontSize:'15px',height:'20px'}} now={accuracy} /> \r\n                  \r\n                </> \r\n                ) } )()\r\n\r\n                if ((ogGuess) <= 0)\r\n                { \r\n                  //console.log(\"IN HERE\")\r\n                  sec = ( () => { return (<><br/> You need to be within <span style={{color:\"#00DD00\",fontWeight:\"700\"}}>30%</span> accuracy to score points. <br/></>) } )()\r\n                  \r\n                }\r\n                else\r\n                {\r\n                  if (readTax)\r\n                  {\r\n                    original = ( () => { return (<><br/>Base score: <span style={{fontWeight:\"900\"}}>{ogGuess}</span></>) } )()\r\n                    taxRead = ( () => { return (<><br/><span style={{color:\"#DD2222\",fontWeight:\"900\"}}>-50</span> for using Tax Assessed Value.</>) } )()\r\n                  }\r\n                  if (readTrend)\r\n                  {\r\n                    original = ( () => { return (<><br/>Base score: <span style={{fontWeight:\"900\"}}>{ogGuess}</span></>) } )()\r\n                    trendRead = ( () => { return (<><br/><span style={{color:\"#DD2222\",fontWeight:\"900\"}}>-100</span> for using Average Home Price.</>) } )()\r\n                  }\r\n                }\r\n                let askLogIn\r\n                if (!currentUser)\r\n                {\r\n                  askLogIn = ( () =>\r\n                  {\r\n                    return(\r\n                      <>\r\n                        &#9702;&nbsp;<Link to=\"/Signup\" style={{ color:\"#00DD00\",fontSize:\"1.1rem\",fontWeight:\"800\"}}>Make an account</Link> to track your score!\r\n                      </>\r\n                    )\r\n                  })()\r\n                }\r\n                let learnMore = ( () => { return (\r\n                <><br/><Link to=\"/About\" style={{ color:\"#00DD00\",fontSize:\"1.1rem\",fontWeight:\"800\"}}>Learn more</Link> about how the score is calculated </>) } )()\r\n\r\n                return (\r\n                <> \r\n                  {pBar} {sec} {original}{taxRead} {trendRead} <br/> \r\n                  <div style={{textAlign:'left'}}>\r\n                    {learnMore} {askLogIn}  \r\n                  </div>    \r\n                </>)\r\n\r\n              }\r\n            )()}\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <div className=\"scoreBottomButton-grid\">\r\n              \r\n            <div className=\"scoreBottomButtonBoxes\">\r\n              <Button style={{fontWeight:\"800\",height: 'inherit', textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}} \r\n              onClick = { () => \r\n              {\r\n                LoadWithRandom() \r\n                props.onHide()\r\n              } }>\r\n                New Random Home\r\n              </Button>\r\n            </div>\r\n            <div className=\"scoreBottomButtonBoxes\">\r\n              <Button style={{fontWeight:\"800\",height: 'inherit', textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}}\r\n              onClick = { () => \r\n              {\r\n                LoadWithState() \r\n                props.onHide()\r\n              } }>\r\n                New {houseState} Home\r\n              </Button>\r\n            </div>\r\n            <div className=\"scoreBottomButtonBoxes\">\r\n              <Button style={{height: 'inherit'}} variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n            </div>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  function TaxModal(props) \r\n  {\r\n    return (\r\n      \r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className = \"my-modal\"\r\n      >\r\n        <Modal.Header style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Modal.Title  id=\"contained-modal-title-vcenter\">\r\n            Tax Assessed Value\r\n          </Modal.Title>\r\n          <CloseButton onClick={props.onHide} variant = {`${dark ? 'white' : ''}`} />\r\n        </Modal.Header>\r\n        <Modal.Body style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <p>\r\n            The tax assessed value takes into account the property condition, square footage, and sales of similar homes.\r\n            The actual sale price can be much greater or lower than the tax assesed value.\r\n          </p>\r\n          <p className=\"thicc\">\r\n            Unlocking the tax assessed value will lower your score by 50.\r\n          </p>\r\n          <br/>\r\n          <Button onClick={()=>{\r\n            setReadTax(true) \r\n            setTaxModalShow(false)\r\n          }} style={{ fontSize:\"1.5rem\",fontWeight:\"500\",color:\"white\"}} variant=\"primary\">\r\n            Show Taxes?\r\n          </Button>\r\n        \r\n        </Modal.Body>\r\n        <Modal.Footer style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Button variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n  \r\n  function TrendModal(props) \r\n  {\r\n    return (\r\n      \r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className = \"my-modal\"\r\n      >\r\n        <Modal.Header style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Modal.Title  id=\"contained-modal-title-vcenter\">\r\n            Average House Price\r\n          </Modal.Title>\r\n          <CloseButton onClick={props.onHide} variant = {`${dark ? 'white' : ''}`} />\r\n        </Modal.Header>\r\n        <Modal.Body style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          { (() => {\r\n            //console.log(\"trend\",trend)\r\n\r\n\r\n            function toTitleCase(str) \r\n            {\r\n              return str.replace(\r\n                /\\w\\S*/g,\r\n                function(txt) \r\n                {\r\n                  return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n                }\r\n              );\r\n            }\r\n\r\n            function modString(str)\r\n            {\r\n              if( str == 'home')\r\n              {\r\n                str = 'Average Property'\r\n              }\r\n              str = str.replace(/_/g, ' ');\r\n              return toTitleCase(str)\r\n            }\r\n\r\n            if( readTrend )\r\n            {\r\n              return(\r\n                <>\r\n                  <Table striped bordered hover variant={`${dark ? 'dark' : ''}`} style={{ width:'100%', margin:'auto'}}>\r\n                    <tbody>\r\n                      \r\n                        {\r\n                          Object.entries(trend).map((item,ind) =>\r\n                          {\r\n                            //console.log(\"prop\",item[1])\r\n                            if(item[1] && item[1].listing_price)\r\n                            {\r\n                              //console.log(\"int here\")\r\n                              return (\r\n                              <>  \r\n                              <tr>\r\n                                <td style={{color:\"#00DD00\",fontWeight:\"800\"}}>\r\n                                  ${Comma(String(item[1].listing_price).replace(/\\D/g,''))}\r\n                                </td>\r\n                                <td key={`trend-${ind}`} >\r\n                                  {modString(item[0])}\r\n                                </td>\r\n                              </tr>\r\n                              </>\r\n                              )\r\n                            }\r\n                          })\r\n                        }\r\n                    </tbody>\r\n                  </Table>\r\n                  \r\n                </>\r\n              )\r\n            }\r\n            else\r\n            {\r\n              return(\r\n                <>\r\n                  <p className=\"thicc\">\r\n                    This will show the average house price in the area by house type.  <br/>             \r\n                  </p>\r\n                  <p className=\"thicc\">\r\n                    Unlocking this will lower your Final Score by 100.\r\n                  </p>\r\n                  <br/>\r\n                  <Button onClick={ ()=>\r\n                  {\r\n                    setReadTrend(true) \r\n                    //setTrendModalShow(false)\r\n                  }} \r\n                  style={{ fontSize:\"1.5rem\",fontWeight:\"500\",color:\"white\"}} variant=\"primary\">\r\n\r\n                    Show Average Price\r\n\r\n                  </Button>\r\n                </>\r\n              )\r\n            }\r\n          })()\r\n          }\r\n        \r\n        </Modal.Body>\r\n        <Modal.Footer style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Button variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n\r\n  const BigMap = useCallback(({ center, zoom }) => {\r\n    const [map, setmap] = useState(null);\r\n    if (map) {\r\n      map.flyTo(center);\r\n    }\r\n    //console.log(\"center is\",center,\"zoom is\",zoom)\r\n    return (\r\n      <>\r\n        <MapContainer style={{width:'100%',height:'350px'}}\r\n          center={center}\r\n          zoom={zoom}\r\n          attributionControl={false}\r\n          zoomControl={false}\r\n          whenCreated={setmap}\r\n          scrollWheelZoom={true}\r\n        >\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          ></TileLayer>\r\n          <Circle center={center} pathOptions={{color: '#00DD00'}} radius={400}></Circle>\r\n          {/*\r\n            <Marker position={center}>\r\n            </Marker>\r\n          */}\r\n        </MapContainer>\r\n      </>\r\n    );\r\n  }, [houseData])\r\n\r\n  const SmallMap = useCallback(({ center, zoom }) => {\r\n    const [map, setmap] = useState(null);\r\n\r\n    useEffect(() => {\r\n      if (map) {\r\n        map.flyTo(center);\r\n      }\r\n    }, [])\r\n    //console.log(\"center is\",center,\"zoom is\",zoom)\r\n    return (\r\n      <>\r\n        <MapContainer style={{width:'100%',height:'150px'}}\r\n          center={center}\r\n          zoom={zoom}\r\n          attributionControl={false}\r\n          zoomControl={false}\r\n          whenCreated={setmap}\r\n          scrollWheelZoom={true}\r\n        >\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          ></TileLayer>\r\n          <Circle center={center} pathOptions={{color: '#00DD00'}} radius={400}></Circle>\r\n          {/*\r\n            <Marker position={center}>\r\n            </Marker>\r\n          */}\r\n        </MapContainer>\r\n      </>\r\n    );\r\n  }, [houseData])\r\n\r\n  function MapModal(props) \r\n  {\r\n    return (\r\n      \r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className = \"my-modal\"\r\n      >\r\n        <Modal.Header style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Modal.Title  id=\"contained-modal-title-vcenter\">\r\n            Full Map\r\n          </Modal.Title>\r\n          <CloseButton onClick={props.onHide} variant = {`${dark ? 'white' : ''}`} />\r\n        </Modal.Header>\r\n        <Modal.Body style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          \r\n          <BigMap center={[parseFloat(houseData.address.lat),parseFloat(houseData.address.lon)]} zoom={13}/>\r\n        \r\n        </Modal.Body>\r\n        <Modal.Footer style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Button variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  function SocialButtons ()\r\n  {\r\n    return(\r\n      <>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\"\r\n        />\r\n        <div class=\"share-btn-container\">\r\n          Share:&nbsp;\r\n          <a  href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(shareOutput)}&via=appraisir`} title=\"Tweet Score\" class=\"twitter-btn\" target=\"_blank\">\r\n            <i class=\"fab fa-twitter\"></i>\r\n          </a>\r\n          \r\n          <a href={`https://api.whatsapp.com/send?text=${encodeURIComponent(shareOutput)}`} title=\"Send on WhatsApp\" class=\"whatsapp-btn\" target=\"_blank\">\r\n            <i class=\"fab fa-whatsapp\"></i>\r\n          </a>\r\n\r\n          <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={sharePopover}>\r\n            <a  onClick={() => {navigator.clipboard.writeText(shareOutput)}} title=\"Copy to Clipboard\"  className=\"alignText\">\r\n              <i class=\"fa-solid fa-clipboard-list\"></i>\r\n            </a > \r\n          </OverlayTrigger>\r\n\r\n        {/*\r\n          <a href={`https://www.facebook.com/sharer.php?u=https://appraisir.com/Daily`} class=\"facebook-btn\" target=\"_blank\">\r\n            <i class=\"fab fa-facebook\"></i>\r\n          </a>\r\n\r\n          <a href={`https://pinterest.com/pin/create/bookmarklet/?media=${houseData.photos[0].href}&url=https://appraisir.com/Daily&description=${encodeURIComponent(shareOutput)}`} class=\"pinterest-btn\" target=\"_blank\">\r\n            <i class=\"fab fa-pinterest\"></i>\r\n          </a>\r\n\r\n          <a href={`https://www.linkedin.com/shareArticle?url=https://appraisir.com/Daily&title=${encodeURIComponent(shareOutput)}`} class=\"linkedin-btn\" target=\"_blank\">\r\n            <i class=\"fab fa-linkedin\"></i>\r\n          </a>\r\n        */\r\n        }\r\n        </div>\r\n      \r\n      </>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <PageLayout>\r\n       <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\"\r\n              integrity=\"sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==\" crossorigin=\"\"/>\r\n      <SEO title=\"Daily Home\" />\r\n\r\n      {(()=>\r\n        {\r\n          if (listItems == null)\r\n          {\r\n            return( \r\n            <>\r\n              <h3>The Daily Home is the same for everyone (next one loads at 12AM).</h3>\r\n              <br/>\r\n              <table style={{margin:'auto'}}>\r\n                <tr>\r\n                  <td>\r\n                    <Button style={{fontWeight:\"900\", width:\"100%\", textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}} \r\n                    onClick={LoadWithRandom}>\r\n                      New Random Home\r\n                    </Button> \r\n                  </td>\r\n                  <td>&nbsp;</td>\r\n                  <td>\r\n                    <Button style={{fontWeight:\"900\",width:\"100%\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}}\r\n                    onClick={LoadWithState}>\r\n                      New {houseState} Home\r\n                    </Button> \r\n                  </td>\r\n                </tr>\r\n              </table>\r\n              <br/>\r\n            </>)\r\n          }\r\n        }\r\n        )()\r\n      }\r\n      \r\n      <div>\r\n\r\n          \r\n        {(()=>\r\n          {\r\n            if (alreadyPlayed == false && trend.median != \"filler\") // if user has not played house\r\n            {\r\n              if (trend.median == \"none\") // if no trend data\r\n              {\r\n                return( \r\n                <h3> \r\n                  Guess the price! \r\n                </h3>  )\r\n              }\r\n              else\r\n              {\r\n                return( \r\n                  <h3> \r\n                    Guess the price! &nbsp; \r\n                    <Button onClick={()=>{setTrendModalShow(true)}} style={{fontWeight:\"700\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}} variant=\"primary\"> \r\n                      Hint? \r\n                    </Button> \r\n                  </h3>  )\r\n              }\r\n            }\r\n            else if (alreadyPlayed == false && trend.median == \"filler\") //if user is not logged in and just submitted a price\r\n            {\r\n              return( \r\n              <>\r\n                <h3>You Scored {priceDiff - 1}! <SocialButtons/>\r\n                  {/*\r\n                  <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={sharePopover}>\r\n                    <Button onClick={() => {navigator.clipboard.writeText(shareOutput)}} style = {{color: \"white\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}} title=\"Share Results\"  className=\"alignText\">\r\n                      Share!\r\n                    </Button > \r\n                  </OverlayTrigger>\r\n                  */}\r\n                </h3>\r\n              </>)\r\n            }\r\n            else //if user is logged in and has a previously submitted price (aka alreadyPlayed = true)\r\n            {\r\n              return( \r\n              <>\r\n                <h3>You Scored {previousScore}! <SocialButtons/>\r\n                {/*\r\n                  <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={sharePopover}>\r\n                    <Button onClick={() => {navigator.clipboard.writeText(shareOutput)}} style = {{color: \"white\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}} title=\"Share Results\"  className=\"alignText\">\r\n                      Share!\r\n                    </Button > \r\n                  </OverlayTrigger>\r\n                */}\r\n                  \r\n                </h3>\r\n              </>)\r\n            }\r\n          }\r\n          )()\r\n        }\r\n        \r\n      </div>\r\n\r\n      \r\n        \r\n      {(()=>\r\n          {\r\n            const parceInp = useCallback((e) =>\r\n            {\r\n              let val = e.target.value\r\n              val = String(val).replace(/\\D/g,'');\r\n              let ret = Comma(val)\r\n              setPriceComma(ret)\r\n              let valClean = String(val).replace(',','')\r\n              setPriceSub(valClean) \r\n            },[setPriceComma])\r\n\r\n            if (alreadyPlayed == false && hideInput == false)\r\n            {\r\n              return(\r\n              <div className=\"inputPrice\">\r\n                <InputGroup >\r\n                  <InputGroup.Text style={{backgroundColor:\"#00BB00\",borderColor:\"#00BB00\",color:\"white\", fontSize:\"1.5rem\",fontWeight:\"900\"}}>$</InputGroup.Text>\r\n                  <FormControl size=\"lg\" variant=\"success\" type=\"text\" value={priceComma} onChange={(e) => {parceInp(e)}} \r\n                    onKeyPress = { (e) =>\r\n                    {\r\n                      //console.log(e.key)\r\n                      if(e.key === 'Enter')\r\n                      {\r\n                        SubmitPrice()\r\n                      }\r\n                    }} placeholder=\"Input a price\" />\r\n                  <Button onClick={SubmitPrice} style={{ fontSize:\"1.5rem\",fontWeight:\"500\", backgroundColor:\"#00BB00\",borderColor:\"#00BB00\"}} variant=\"success\" value=\"Submit\">Submit</Button>\r\n                </InputGroup>\r\n              </div>\r\n              )\r\n            }\r\n            else if (alreadyPlayed == false && hideInput == true)\r\n            {\r\n              return( \r\n              <>\r\n                <h3> The house price is ${Comma(String(housePrice).replace(/\\D/g,''))}</h3> \r\n                <h4><Link to=\"/Signup\" style={{ color:\"#00DD00\",fontWeight:\"800\"}}>Make an account</Link> to track your score!</h4>\r\n              </>)\r\n            }\r\n            else \r\n            {\r\n              return( <h3> The house price is <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice).replace(/\\D/g,''))}</span></h3> )\r\n            }\r\n          }\r\n          )()\r\n        }\r\n        \r\n      <br/>\r\n\r\n      \r\n      <div className=\"pageMargin pt-6 mt-6 text-color\">\r\n        <div className=\"basic-grid\">\r\n          \r\n          <div className=\"boxes pics-grid \">\r\n            \r\n            {priceDiff ?  <NewScoreModal\r\n                            show={modalShow}\r\n                            onHide={() => setModalShow(false)}\r\n                          /> : ` `}\r\n\r\n            \r\n            {taxModalShow ?  <TaxModal\r\n                            show={taxModalShow}\r\n                            onHide={() => setTaxModalShow(false)}\r\n                          /> : ` `}\r\n            \r\n            {trendModalShow ?  <TrendModal\r\n                            show={trendModalShow}\r\n                            onHide={() => setTrendModalShow(false)}\r\n                          /> : ` `}\r\n\r\n            {mapModalShow ?  <MapModal\r\n                            show={mapModalShow}\r\n                            onHide={() => setMapModalShow(false)}\r\n                          /> : ` `}\r\n\r\n            <div className=\"picSize\">\r\n              <Carousel images={pics} transitionDurationMax={40} style={{ height: 400, backgroundColor:'transparent' }} hasMediaButton={false} hasIndexBoard={false} />\r\n            </div>\r\n            \r\n          </div>\r\n          <div className=\"boxes text-left thicc \" >\r\n            <hr style={{ borderTop:`1px solid ${dark ? 'white' : 'black'}`}}/>\r\n              \r\n            <div className=\"addrMap-grid\">\r\n              <div className=\"addrMapBoxes\">\r\n                {(() => \r\n                  {\r\n                    if (alreadyPlayed == false && hideInput == false)\r\n                    {\r\n                      return(\r\n                        <>\r\n                          {houseCity}, {houseState}, {houseZip} <br/>\r\n                        </>\r\n                      )\r\n                    }\r\n                    else\r\n                    {\r\n                      return( \r\n                        <>\r\n                          {houseLine}, {houseCity}, {houseState}, {houseZip} <br/>\r\n                        </>\r\n                        )\r\n                    }\r\n                  }\r\n                  )()\r\n                }\r\n                    \r\n                {houseData.beds} <div className=\"thin\">Beds</div> {houseData.baths} <div className=\"thin\">Baths</div>&nbsp; \r\n                {houseSize} <div className=\"thin\">{houseUnits}</div> {houseData.style} <br/>\r\n\r\n                {houseData.year_built   ?   () => { return(<> {houseData.year_built} <div className=\"thin\">Year Built</div> <br/> </>)}   :    \"\"}\r\n              </div>\r\n              <div className=\"addrMapBoxes\">\r\n                {(() => \r\n                  {\r\n                    if(houseData && houseData.address)\r\n                    {\r\n                      return(\r\n                        <div style={{position:'relative'}}>\r\n                          <SmallMap center={[parseFloat(houseData.address.lat),parseFloat(houseData.address.lon)]} zoom={12}/>\r\n                          <button onClick={()=>{setMapModalShow(true)}} style={{opacity:'0.75',backgroundColor:'transparent',border:'none', position:'absolute',bottom:'5px',zIndex:'900'}}> \r\n                            \r\n                            <svg style={{stroke:'#555',fill:'#fff'}} height=\"30\" preserveAspectRatio=\"xMidYMid meet\" role=\"img\" viewBox=\"0 0 30 30\" width=\"30\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <title>Full Map</title>\r\n                              <path d=\"m1 1v10h5v-5h5v-5zm18 0v5h5v5h5v-10zm-18 18v10h10v-5h-5v-5zm18 5v5h10v-10h-5v5z\"></path>\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                      )\r\n                    }\r\n                  })()\r\n                }  \r\n              </div>\r\n            </div> \r\n            <hr style={{ borderTop:`1px solid ${dark ? 'white' : 'black'}`}}/>\r\n          </div>\r\n\r\n          \r\n          <div className=\"boxes text-left thicc scrolling\">\r\n            <u>Description:</u><br/>\r\n            <div className=\"thin\">{houseData.description}</div>\r\n            \r\n          </div>\r\n          <div className=\"boxes text-left features-grid thicc \">\r\n            <Accordion>\r\n              <Accordion.Item eventKey=\"0\" style={{borderColor:'#bbb',borderWidth:'1px'}}>\r\n                <Accordion.Button style={{backgroundColor:`${dark ? '#222' : 'white'}`,color:`${dark ? 'white' : 'black'}`,fontWeight:'900',fontSize:'1.2rem' }}><u>Details:</u></Accordion.Button>\r\n                <Accordion.Body >\r\n                  <div className=\"thin feat-grid\">\r\n                    {(()=>\r\n                      { \r\n                        //console.log(\"tax assesed \",taxAss.length)\r\n                        if (taxAss.length > 0)\r\n                        {\r\n                          if(!readTax)\r\n                          {\r\n                            return(\r\n                              <>\r\n                                <div className=\"featBoxes\">\r\n                                  <div className=\"mid\">Tax Assessed Value </div>\r\n                                  <Button onClick={()=>{setTaxModalShow(true)}} style={{fontWeight:\"700\", fontSize:\"1.5rem\", textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}} \r\n                                  variant=\"primary\">Unlock Tax Hint?</Button>\r\n                                </div>\r\n                              </>\r\n                            )\r\n                          }\r\n                          else\r\n                          {\r\n                            return(\r\n                            <>\r\n                              <div className=\"featBoxes\">\r\n                                <div className=\"mid\">Tax Assessed Value </div>\r\n                                <ul>\r\n                                  { taxAss && taxAss.map((e,ind) => \r\n                                    {\r\n                                      if(e.assessment)\r\n                                      {\r\n                                        return (\r\n                                          <div key={`tax-${ind}`} >\r\n                                            <li>{e.year} - ${e.assessment.total}</li>\r\n                                          </div>\r\n                                        )\r\n                                      }\r\n                                    })\r\n                                  }\r\n                                </ul>\r\n                              </div>\r\n                            </>\r\n                            )\r\n                          }\r\n                        }\r\n                        else\r\n                        {\r\n                          return(\r\n                            <>\r\n                              <div className=\"featBoxes\">\r\n                                <div className=\"mid\">Tax Assessed Value </div>\r\n                                <div style={{fontWeight:\"600\",color:\"red\"}}>There is no Tax data available for this house. </div>\r\n                              </div>\r\n                            </>\r\n                          )\r\n                        }\r\n                      }\r\n                      )()\r\n                    }\r\n                    { \r\n                      feats.map((e,ind) => \r\n                      {\r\n                        return (\r\n                          <div key={`featCat-${ind}`} className=\"featBoxes\" >\r\n                            <div className=\"mid\">{e.category} </div>\r\n                            <ul>\r\n                              {\r\n                                e.text.map((f,index) =>\r\n                                {\r\n                                  return (\r\n                                    <li key={`featList-${index}`}>\r\n                                      {f}\r\n                                    </li>\r\n                                  )\r\n                                })\r\n                              }\r\n                            </ul>\r\n                          </div>\r\n                        )\r\n                      })\r\n                    }\r\n                  </div>\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            </Accordion>    \r\n          </div>  \r\n        </div>\r\n\r\n        \r\n        \r\n      </div>\r\n      \r\n    </PageLayout>\r\n  )\r\n\r\n}"],"sourceRoot":""}