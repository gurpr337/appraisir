{"version":3,"sources":["webpack:///./src/pages/Login.js"],"names":["Login","emailRef","useRef","passwordRef","useState","error","setError","loading","setLoading","dark","useContext","ThemeContext","callLogin","a","login","current","value","then","resp","profileInfo","loggedUser","neededData","email","displayName","uid","localStorage","setItem","JSON","stringify","navigate","catch","String","loginWithGoogle","e","preventDefault","title","className","style","maxWidth","borderColor","borderWidth","Body","fontWeight","backgroundColor","color","disabled","onClick","onSubmit","Group","id","Label","Control","type","ref","required","margin","to"],"mappings":"6oBAQe,SAASA,IAEtB,IAAMC,EAAWC,mBACXC,EAAcD,mBAFtB,EAG4BE,mBAAS,IAA5BC,EAHT,KAGgBC,EAHhB,OAIgCF,oBAAS,GAAhCG,EAJT,KAIkBC,EAJlB,KAMUC,EAASC,qBAAWC,KAApBF,KANV,SAQiBG,IARjB,iEAQE,sBAAAC,EAAA,sEAEQC,YAAMb,EAASc,QAAQC,MAAOb,EAAYY,QAAQC,OAAOC,MAAK,SAACC,GAEnE,IAAIC,EAAcC,cACdC,EAAa,CAAC,MAAQF,EAAYG,MAAM,YAAcH,EAAYI,YAAY,IAAMJ,EAAYK,KAEpGC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUP,IACnDQ,mBAAS,QAERC,OAAM,SAACzB,GAERC,EAASyB,OAAO1B,OAZpB,4CARF,wDAuBE,sBAAAQ,EAAA,sEAEQmB,cAAkBf,MAAK,SAACC,GAG5B,IAAIC,EAAcC,cACdC,EAAa,CAAC,MAAQF,EAAYG,MAAM,YAAcH,EAAYI,YAAY,IAAMJ,EAAYK,KAEpGC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUP,IACnDQ,mBAAS,QACRC,OAAM,SAACzB,GAERC,EAASyB,OAAO1B,OAZpB,4CAvBF,wDAuCE,WAA4B4B,GAA5B,SAAApB,EAAA,sDAEEoB,EAAEC,iBACF,IAEE5B,EAAS,IACTE,GAAW,GACXI,IAEF,SAEEN,EAAS,oBAEXE,GAAW,GAbb,4CAvCF,sBAuDE,OACE,oCACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK2B,MAAM,UACX,kBAAC,IAAD,CAAWC,UAAU,oDACrB,yBAAKA,UAAU,mBAAmBC,MAAO,CAAEC,SAAU,UACnD,kBAAC,IAAD,CAAMD,MAAO,CAAEE,YAAe9B,EAAO,OAAS,OAAS+B,YAAY,QACjE,kBAAC,IAAKC,KAAN,KAEE,wBAAIL,UAAU,oBAAd,SAEC/B,GAAS,kBAAC,IAAD,CAAOgC,MAAO,CAACK,WAAW,MAAMC,gBAAgB,UAAUC,MAAM,QAAQL,YAAY,YAAalC,GAE3G,kBAAC,IAAD,CAAQwC,SAAUtC,EAAS8B,MAAO,CAACM,gBAAgB,UAAUH,YAAY,OAAQM,QApE7F,4CAoEY,qBAGA,6BAAK,6BACL,kBAAC,IAAD,CAAMC,SAxElB,6CAyEc,kBAAC,IAAKC,MAAN,CAAYC,GAAG,SACb,kBAAC,IAAKC,MAAN,cACA,kBAAC,IAAKC,QAAN,CAAcC,KAAK,QAAQC,IAAKpD,EAAUqD,UAAQ,KAEpD,6BACA,kBAAC,IAAKN,MAAN,CAAYC,GAAG,YACb,kBAAC,IAAKC,MAAN,iBACA,kBAAC,IAAKC,QAAN,CAAcC,KAAK,WAAWC,IAAKlD,EAAamD,UAAQ,KAE1D,6BACA,kBAAC,IAAD,CAAQT,SAAUtC,EAAS6C,KAAK,SAASf,MAAO,CAACkB,OAAO,WAAxD,UAIF,yBAAKnB,UAAU,0BACb,kBAAC,OAAD,CAAMoB,GAAG,mBAAT,uBAMN,yBAAKpB,UAAU,0BAAf,oBACmB,kBAAC,OAAD,CAAMoB,GAAG,WAAT,YAEnB,6BAAK","file":"component---src-pages-login-js-89630c0d1fb09ba89329.js","sourcesContent":["import React, { useRef, useState, useContext } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { login,loggedUser,loginWithGoogle } from  \"../components/FirebaseAuth\"\r\nimport { Link, navigate } from \"gatsby\"\r\nimport { PageLayout } from \"../components\"\r\nimport { SEO } from \"../utils\"\r\nimport ThemeContext from \"../utils/theme\"\r\n\r\nexport default function Login() \r\n{\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const { dark } = useContext(ThemeContext)\r\n\r\n  async function callLogin()\r\n  {\r\n    await login(emailRef.current.value, passwordRef.current.value).then((resp) => \r\n    {\r\n      let profileInfo = loggedUser()\r\n      let neededData = {\"email\":profileInfo.email,\"displayName\":profileInfo.displayName,\"uid\":profileInfo.uid}\r\n      //console.log(\"profile is\",neededData)\r\n      localStorage.setItem('profileData', JSON.stringify(neededData) )\r\n      navigate(`/`)\r\n\r\n    }).catch((error) => \r\n    {\r\n      setError(String(error) )\r\n    })\r\n  }\r\n  async function callGoogleLogin()\r\n  {\r\n    await loginWithGoogle().then((resp) => \r\n    {\r\n      //console.log(resp)\r\n      let profileInfo = loggedUser()\r\n      let neededData = {\"email\":profileInfo.email,\"displayName\":profileInfo.displayName,\"uid\":profileInfo.uid}\r\n      //console.log(\"profile is\",neededData)\r\n      localStorage.setItem('profileData', JSON.stringify(neededData) )\r\n      navigate(`/`)\r\n    }).catch((error) => \r\n    {\r\n      setError(String(error) )\r\n    })\r\n  }\r\n\r\n  async function handleSubmit(e) \r\n  {\r\n    e.preventDefault()\r\n    try \r\n    {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      callLogin()\r\n    } \r\n    catch \r\n    {\r\n      setError(\"Failed to log in\")\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <PageLayout>\r\n      <SEO title=\"Login\" />\r\n      <Container className=\"d-flex align-items-center justify-content-center\" >\r\n      <div className=\"w-100 text-color\" style={{ maxWidth: \"400px\" }}>\r\n        <Card style={{ borderColor:`${dark ? '#333' : '#ddd'}`,borderWidth:\"3px\" }}>\r\n          <Card.Body>\r\n\r\n            <h2 className=\"text-center mb-4\">Login</h2>\r\n            \r\n            {error && <Alert style={{fontWeight:\"900\",backgroundColor:\"#d9534f\",color:\"white\",borderColor:\"#d9534f\"}}>{error}</Alert>}\r\n\r\n            <Button disabled={loading} style={{backgroundColor:'#00ff00',borderWidth:'0px'}} onClick={callGoogleLogin}>\r\n              Login with Google \r\n            </Button>\r\n            <br/><br/>\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <br/>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordRef} required />\r\n              </Form.Group>\r\n              <br/>\r\n              <Button disabled={loading} type=\"submit\" style={{margin:\"0 auto\"}}>\r\n                Login\r\n              </Button>\r\n            </Form>\r\n            <div className=\"w-100 text-center mt-3\">\r\n              <Link to=\"/ForgotPassword\">Forgot Password?</Link>\r\n            </div>\r\n\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Need an account? <Link to=\"/Signup\">Sign Up</Link>\r\n        </div>\r\n        <br/><br/>\r\n      </div>\r\n      </Container>\r\n    </PageLayout>\r\n    </>\r\n  )\r\n}"],"sourceRoot":""}