{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["data","currentUser","loggedUser","console","log","useState","userData","setUserData","cats","setCats","useEffect","email","uData","a","firebase","firestore","collection","doc","String","uid","get","then","exists","localStorage","setItem","JSON","stringify","catch","error","userStorage","parse","getItem","setTimeout","querySnapshot","tempCats","docs","map","tempObj","id","push","finished","LoadWithState","evt","LoadStateHouse","LoadWithRandom","preventDefault","LoadRandomHouse","carouselItems","key","pic","LoadCarousel","props","style","maxWidth","margin","background","hasMediaButton","hasIndexBoard","hasSizeButton","f","index","mlsParam","stateParam","played","points","pics","params","length","divider","search","substring","tempUser","Object","entries","t","k","className","href","color","src","alt","width","border","backgroundSize","borderRadius","backgroundColor","fontWeight","fontSize","textShadow","listStyleType","useContext","ThemeContext","dark","title","backgroundImage","verticalAlign","zIndex","onClick","value","onSubmit","htmlFor","name","type","textAlign","e","ind","Name","Rating","List","address","idHash"],"mappings":"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","file":"component---src-pages-index-js-cb684091779a716bd8d2.js","sourcesContent":["import React, {useState, useEffect, useContext } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport { navigate } from \"@reach/router\"\r\nimport ThemeContext from \"../utils/theme\"\r\nimport { PageLayout } from \"../components\"\r\nimport { SEO } from \"../utils\"\r\nimport { Container, Image  } from \"react-bootstrap\"\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css'; // or include from a CDN\r\nimport firebase from \"../components/firebase\"\r\n\r\nimport { loggedUser, printing } from  \"../components/FirebaseAuth\"\r\nimport { LoadStateHouse, LoadRandomHouse } from  \"../components/LoadStateHouse\"\r\nimport { UserData }  from  \"../components/UserData\"\r\nimport './grid.css';\r\n\r\nimport Carousel from 'react-gallery-carousel';\r\nimport 'react-gallery-carousel/dist/index.css';\r\n/*\r\nconsole.log(\"local storage starting \",localStorage)\r\n\r\nlocalStorage.setItem('userData', JSON.stringify({'filler':3,'test':2,'ligma':'balls'}) )\r\n\r\nconsole.log(\"local storage userdata is \",JSON.parse(localStorage.getItem('userData')) )\r\n\r\nlocalStorage.removeItem(\"userData\");\r\n\r\nconsole.log(\"local storage starting \",localStorage)\r\n\r\n*/\r\n\r\n\r\nexport default ({ data }) => {\r\n\r\n  let currentUser = loggedUser()\r\n  console.log(\"current user is\",currentUser)\r\n  //let userData = {}\r\n\r\n  const [userData, setUserData] = useState(null)\r\n  //let userData = {}\r\n  \r\n  const [cats, setCats] = useState([])\r\n\r\n  useEffect(() => \r\n  {\r\n    if (currentUser && (currentUser.email != 0) )\r\n    {\r\n      //userData = UserData()\r\n      async function uData()\r\n      {\r\n        console.log(\"RUNNING USERS AGAIN FIREBASE CALL\")\r\n        await firebase.firestore().collection('Users').doc(String(currentUser.uid)).get()\r\n        .then((doc) => {\r\n          if (doc.exists) \r\n          {\r\n              //console.log(\"Document data:\", doc.data());\r\n              //doc.data()\r\n              setUserData(doc.data())\r\n              localStorage.setItem('userData', JSON.stringify(doc.data()) )\r\n              //userData = doc.data()\r\n\r\n          } \r\n          else \r\n          {\r\n              // doc.data() will be undefined in this case\r\n              console.log(\"No such user!\");\r\n          }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting user:\", error);\r\n        });\r\n      }\r\n      let userStorage = JSON.parse(localStorage.getItem('userData'))\r\n      if (userStorage == null)\r\n      {\r\n        \r\n        setTimeout(() => \r\n        {  \r\n          uData()\r\n        }, 800);\r\n      }\r\n      else \r\n      {\r\n        setUserData(userStorage)\r\n        //console.log(\"didnt run firebase call because data is in local storage\", userStorage)\r\n      }\r\n    }\r\n\r\n    console.log(\"RUNNING CATEGORIES FIREBASE CALL\")\r\n    firebase.firestore().collection('Categories').get()\r\n    .then((querySnapshot) => \r\n    {\r\n      let tempCats = []\r\n      querySnapshot.docs.map((doc) => \r\n      {\r\n        if (doc.exists) \r\n        {\r\n          //setCats(doc.data())\r\n          //console.log(\"categories\",doc.id)\r\n          let tempObj = doc.data()\r\n          tempObj[\"idHash\"] = doc.id\r\n          tempCats.push(tempObj)\r\n        } \r\n        else \r\n        {\r\n          console.log(\"No categories!\");\r\n        }\r\n      })\r\n      setCats(tempCats)\r\n      //console.log(\"categories\",tempCats)\r\n\r\n    }).catch((error) => \r\n    {\r\n      console.log(\"Error getting categories:\", error);\r\n    });\r\n\r\n  }, [])\r\n    \r\n\r\n\r\n  function shuffle(array) \r\n  {\r\n    let currentIndex = array.length,  randomIndex;\r\n  \r\n    // While there remain elements to shuffle...\r\n    while (currentIndex != 0) {\r\n  \r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n  \r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex], array[currentIndex]];\r\n    }\r\n  \r\n    return array;\r\n  }\r\n\r\n  const [finished, setFinished] = useState(\"\")\r\n  \r\n  const LoadWithState = async (evt) => \r\n  {\r\n    return LoadStateHouse(evt,userData)\r\n  }\r\n  const LoadWithRandom = async (evt) => \r\n  {\r\n    evt.preventDefault();\r\n    LoadRandomHouse(userData)\r\n  }\r\n\r\n  \r\n  \r\n\r\n  let carouselItems = [\r\n    {key: \"M6594039110_MD\", pic:\"https://ap.rdcpix.com/5dc138f032752cbae69cb1fcefe5afcfl-m1954928286od-w1024_h768_x2.webp\"},\r\n    {key: \"M6243265216_VA\", pic:\"https://ap.rdcpix.com/d36c33fde545e850d443c9763748af12l-m790958679od-w1024_h768_x2.webp\"},\r\n    {key: \"M6994333417_MD\", pic:\"https://ap.rdcpix.com/85d648fdbbc8ac7bc5c799fadd37e3c5l-m1904560105od-w1024_h768_x2.webp\"},\r\n    {key: \"M5952646750_MD\", pic:\"https://ap.rdcpix.com/3095d7ad40bee6f66a5ad84e2a9f1e57l-m2804454579od-w1024_h768_x2.webp\"},\r\n    {key: \"M6866287639_MD\", pic:\"https://ap.rdcpix.com/20abce3af92c6bff9049ad97c818fc1al-m1172070228od-w1024_h768_x2.webp\"},\r\n    {key: \"M5920526288_VA\", pic:\"https://ap.rdcpix.com/57a04357bcceabe0f91e6a1433acd132l-m4230270205od-w1024_h768_x2.webp\"}\r\n  ]\r\n\r\n\r\n  function LoadCarousel (props)\r\n  {\r\n    return (\r\n      <Carousel style={{ maxWidth:\"700px\", margin:\"auto\", background:\"transparent\"}} hasMediaButton={false} hasIndexBoard={false} hasSizeButton={false}>\r\n      { \r\n        carouselItems.map((f,index) => \r\n        {\r\n          let played = false\r\n          let points = 0\r\n          let pics = f.pic\r\n\r\n          let mlsParam, stateParam\r\n          let params = String(f.key)\r\n          if (params.length > 0)\r\n          {\r\n            let divider = params.search(\"_\")\r\n            mlsParam = params.substring(0,divider)\r\n            stateParam = params.substring((divider+1))\r\n          }\r\n          if(currentUser && userData)\r\n          {\r\n            let tempUser = userData\r\n            Object.entries(tempUser).map((t,k) =>\r\n            {\r\n              if(t[0] == f.key)\r\n              {\r\n                played = true\r\n                points = t[1][0]\r\n              }\r\n            })\r\n          }    \r\n          //console.log(\"list entry\",f)\r\n          let imgWidth = \"95%\"\r\n          if(played)\r\n          {\r\n            return(\r\n              <>\r\n              <div key={`topList-${index}`} className=\"playedHouses\">\r\n                <div className=\"imgContainer indexCarousel\">\r\n                  <a href={`/play?state=${stateParam}&mls=${mlsParam}` } style={{color:\"#00DD00\"}}>\r\n                    <img src={pics} alt=\"house\" width={imgWidth} className=\"indexCarousel imgGray\" style={{border:\"5px solid #00DD00\", backgroundSize: \"cover\", borderRadius: \"10px\",margin:\"5px\"}}></img> \r\n                    <div className=\"imgCentered\" style={{backgroundColor:\"transparent\", fontWeight:\"900\", fontSize:\"1.5rem\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}}>\r\n                      Scored ${points}\r\n                    </div>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              </>\r\n            )\r\n          }\r\n          else \r\n          {\r\n            \r\n            if (mlsParam!=\"\" && stateParam!=\"\")\r\n            {\r\n              return(\r\n                <>\r\n                <div key={`topList-${index}`} style={{listStyleType:\"circle\"}} className=\"imgContainer indexCarousel\">\r\n                  <a href={`/play?state=${stateParam}&mls=${mlsParam}`}>\r\n                    <img src={pics} alt=\"house\" className=\"indexCarousel\"  width={imgWidth} style={{border:\"5px solid #007bff\", backgroundSize: \"cover\", borderRadius: \"10px\",margin:\"5px\"}} ></img> \r\n                  </a>\r\n                </div>\r\n                </>\r\n              )\r\n            }\r\n          }\r\n\r\n        })\r\n      \r\n      }\r\n      </Carousel>\r\n    )\r\n  }\r\n\r\n  /*\r\n  const [CarouselRefresh, setCarouselRefresh] = useState()\r\n  useEffect(() => \r\n  {\r\n    let temp = LoadCarousel()\r\n    console.log(\"carousel is\",temp,typeof(temp))\r\n    setCarouselRefresh(temp)\r\n  }, [userData])\r\n\r\n*/\r\n\r\n  //backgroundColor: \"#00ffd5\"\r\n\r\n  \r\n  const { dark } = useContext(ThemeContext)\r\n  return (\r\n    <PageLayout>\r\n      <SEO title=\"Home\" />\r\n        \r\n        <h2>Test your home valuation skills!</h2>\r\n        <div className=\"text-color\" style={{fontSize:\"1.5rem\"}}> Click to play a home:</div>\r\n        {\r\n        //<h2>Click to play one of the homes below</h2>\r\n        \r\n        // <div className=\"text-left thicc play-grid scrolling\"  style={{ maxWidth:\"1000px\", margin:\"auto\"}}>\r\n\r\n        <LoadCarousel/>\r\n        // {\r\n        //   carouselItems.map((f,index) => \r\n        //   {\r\n        //     let played = false\r\n        //     let points = 0\r\n        //     let pics = f.pic\r\n\r\n        //     let mlsParam, stateParam\r\n        //     let params = String(f.key)\r\n        //     if (params.length > 0)\r\n        //     {\r\n        //       let divider = params.search(\"_\")\r\n        //       mlsParam = params.substring(0,divider)\r\n        //       stateParam = params.substring((divider+1))\r\n        //     }\r\n        //     if(currentUser)\r\n        //     {\r\n        //       Object.entries(userData).map((t,k) =>\r\n        //       {\r\n        //         if(t[0] == f.key)\r\n        //         {\r\n        //           played = true\r\n        //           points = t[1][0]\r\n        //         }\r\n        //       })\r\n        //     }    \r\n        //     //console.log(\"list entry\",f)\r\n        //     let imgWidth = \"300px\" \r\n        //     let imgHeight =\"200px\" \r\n        //     if(played)\r\n        //     {\r\n        //       return(\r\n        //         <>\r\n        //         <div className=\"playBox\">\r\n        //           <div key={`topList-${index}`} className=\"playedHouses\">\r\n        //             <div className=\"imgContainer indexCarousel\">\r\n        //               <a href={`/play?state=${stateParam}&mls=${mlsParam}` } style={{color:\"#00DD00\"}}>\r\n        //                 <img src={pics} alt=\"house\" className=\"indexCarousel imgGray\" style={{maxWidth:`${imgWidth}`, maxHeight:`${imgHeight}`,border:\"5px solid #00DD00\", backgroundSize: \"cover\", borderRadius: \"10px\",margin:\"5px\"}}></img> \r\n        //                 <div className=\"imgCentered\" style={{backgroundColor:\"transparent\", fontWeight:\"900\", fontSize:\"1.5rem\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}}>\r\n        //                   Scored ${points}\r\n        //                 </div>\r\n        //               </a>\r\n        //             </div>\r\n        //           </div>\r\n        //         </div>\r\n        //         </>\r\n        //       )\r\n        //     }\r\n        //     else \r\n        //     {\r\n              \r\n        //       if (mlsParam!=\"\" && stateParam!=\"\")\r\n        //       {\r\n        //         return(\r\n        //           <>\r\n        //           <div className=\"playBox\">\r\n        //             <div key={`topList-${index}`} style={{listStyleType:\"circle\"}} className=\"imgContainer indexCarousel\">\r\n        //               <a href={`/play?state=${stateParam}&mls=${mlsParam}`}>\r\n        //                 <img src={pics} alt=\"house\" className=\"indexCarousel\"  style={{maxWidth:`${imgWidth}`, maxHeight:`${imgHeight}`,border:\"5px solid #007bff\", backgroundSize: \"cover\", borderRadius: \"10px\",margin:\"5px\"}} ></img> \r\n        //               </a>\r\n        //             </div>\r\n        //           </div>\r\n        //           </>\r\n        //         )\r\n        //       }\r\n        //     }\r\n\r\n        //   })\r\n\r\n        // }\r\n\r\n        //</div>\r\n        }\r\n\r\n\r\n\r\n\r\n        <br/><br/>\r\n\r\n        {\r\n        // <div className=\"w-100 text-color thicc\" style={{maxWidth: \"90%\", margin: \"auto\", textAlign:\"left\"}}>    \r\n        //     <u>Simple Filters:</u><br/>\r\n        // </div>\r\n        // <br/><br/>\r\n        }\r\n        <div className=\"w-100\" style={{ maxWidth: \"80%\", margin: \"auto\"}}>      \r\n\r\n          <div className=\"thin indexTop-grid\">\r\n            <div className=\"indexTopBoxes\" \r\n            style={{fontWeight:\"900\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\",backgroundImage:\"url(../../icons/Dice.png)\", backgroundSize: \"cover\"}}>\r\n              <table>\r\n                <tbody>\r\n                  <tr style={{ verticalAlign: \"bottom\",zIndex:\"4\", color:\"white\" }}>\r\n                    <td>\r\n                      Random Home?  &nbsp;\r\n                      <Button onClick={LoadWithRandom} value=\"Random\" style={{fontWeight:\"900\",textShadow: \"#000 0px 0 3px,#000 0px 0 2px\", fontSize:\"1.2rem\"}}> \r\n                        Play \r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            \r\n            <form onSubmit={LoadWithState} >\r\n\r\n              <div className=\"indexTopBoxes\" style={{ backgroundImage:\"url(../../icons/Map.png)\", backgroundSize: \"cover\"}}>\r\n                <table>\r\n                  <tbody>\r\n                  <tr style={{ verticalAlign: \"bottom\",zIndex:\"4\" }}>\r\n                    <td>\r\n                    \r\n                      <label htmlFor=\"states\" style={{color:\"white\", fontWeight:\"900\", textShadow: \"#000 0px 0 5px,#000 0px 0 5px\"}}>State:&nbsp;</label>\r\n\r\n                      <select name=\"states\" id=\"states\" style={{borderRadius:\"8px\"}}>\r\n                        <option value=\"AL\">Alabama</option>\r\n                        <option value=\"AK\">Alaska</option>\r\n                        <option value=\"AZ\">Arizona</option>\r\n                        <option value=\"AR\">Arkansas</option>\r\n                        <option value=\"CA\">California</option>\r\n                        <option value=\"CO\">Colorado</option>\r\n                        <option value=\"CT\">Connecticut</option>\r\n                        <option value=\"DE\">Delaware</option>\r\n                        <option value=\"FL\">Florida</option>\r\n                        <option value=\"GA\">Georgia</option>\r\n                        <option value=\"HI\">Hawaii</option>\r\n                        <option value=\"ID\">Idaho</option>\r\n                        <option value=\"IL\">Illinois</option>\r\n                        <option value=\"IN\">Indiana</option>\r\n                        <option value=\"IA\">Iowa</option>\r\n                        <option value=\"KS\">Kansas</option>\r\n                        <option value=\"KY\">Kentucky</option>\r\n                        <option value=\"LA\">Louisiana</option>\r\n                        <option value=\"ME\">Maine</option>\r\n                        <option value=\"MD\">Maryland</option>\r\n                        <option value=\"MA\">Massachusetts</option>\r\n                        <option value=\"MI\">Michigan</option>\r\n                        <option value=\"MN\">Minnesota</option>\r\n                        <option value=\"MS\">Mississippi</option>\r\n                        <option value=\"MO\">Missouri</option>\r\n                        <option value=\"MT\">Montana</option>\r\n                        <option value=\"NE\">Nebraska</option>\r\n                        <option value=\"NV\">Nevada</option>\r\n                        <option value=\"NH\">New Hampshire</option>\r\n                        <option value=\"NJ\">New Jersey</option>\r\n                        <option value=\"NM\">New Mexico</option>\r\n                        <option value=\"NY\">New York</option>\r\n                        <option value=\"NC\">North Carolina</option>\r\n                        <option value=\"ND\">North Dakota</option>\r\n                        <option value=\"PA\">Pennsylvania</option>\r\n                        <option value=\"VA\">Virginia</option>\r\n                      </select>  \r\n\r\n                      &nbsp;\r\n\r\n                      <Button className=\"btn\" type=\"submit\" value=\"Play\" style={{fontWeight:\"900\",textShadow: \"#000 0px 0 3px,#000 0px 0 2px\", fontSize:\"1.2rem\"}}>\r\n                        Play\r\n                      </Button>\r\n                      \r\n                    </td>\r\n                  </tr>\r\n                  { finished && (() => \r\n                    {\r\n                      return(\r\n                      <tr>\r\n                        <td style={{ fontWeight:\"900\", textShadow: \"#000 0px 0 5px,#000 0px 0 5px\",color:\"#dd3344\"}}>{finished}</td>\r\n                      </tr>\r\n                      )\r\n                    })()\r\n                  }\r\n                  </tbody>\r\n                </table>\r\n                \r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n            \r\n        </div>\r\n\r\n        <br/><br/><br/><br/>\r\n\r\n        <div className=\"w-100 text-color thicc\" style={{ maxWidth: \"90%\", margin: \"auto\", textAlign:\"left\"}}>    \r\n        <u>Popular Categories:</u><br/><br/>\r\n        </div>\r\n        <div className=\"w-100 text-color\" style={{ maxWidth: \"90%\", margin: \"auto\"}}>      \r\n          <div className=\"boxes text-left features-grid thicc \">\r\n\r\n            \r\n            <div className=\"thin feat-grid\">\r\n              { cats &&\r\n                cats.map((e,ind) => \r\n                {\r\n                  return (\r\n                    <>\r\n                    <div key={`catBoxes-${ind}`} className=\"featBoxes\" >\r\n                      <div key={`catBoxesTitle-${ind}`} className=\"mid\">{e.Name} - {e.Rating}/5</div>\r\n                        { e.List &&\r\n                          Object.entries(e.List).map((f,index) =>\r\n                          {\r\n                            //console.log(\"EEEEEE\",e.idHash)\r\n                            let played = false\r\n                            let points = 0\r\n                            let address = f[1]\r\n\r\n                            let mlsParam, stateParam\r\n                            let params = String(f[0])\r\n                            if (params.length > 0)\r\n                            {\r\n                              let divider = params.search(\"_\")\r\n                              mlsParam = params.substring(0,divider)\r\n                              stateParam = params.substring((divider+1))\r\n                            }\r\n                            if(currentUser && userData)\r\n                            {\r\n                              Object.entries(userData).map((t,k) =>\r\n                              {\r\n                                if(t[0] == f[0])\r\n                                {\r\n                                  played = true\r\n                                  points = t[1][0]\r\n                                }\r\n                              })\r\n                            }    \r\n                            //console.log(\"list entry\",f)\r\n                            let imgWidth = 220 \r\n                            if(played)\r\n                            {\r\n                              return(\r\n                                <>\r\n                                  <div key={`catList-${index}`} className=\"playedHouses imgContainer\">\r\n                                    <a href={`/play?state=${stateParam}&mls=${mlsParam}&listID=${e.idHash}` } style={{color:\"#00DD00\"}}>\r\n                                      <img src={address} className=\"imgGray\" alt=\"house\" width={imgWidth} style={{border:\"5px solid #00DD00\",borderRadius: \"10px\",margin:\"5px\"}}></img> \r\n                                      <div className=\"imgCentered\" style={{backgroundColor:\"transparent\", fontWeight:\"900\", fontSize:\"1.5rem\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}}>\r\n                                        Scored ${points}\r\n                                      </div>\r\n                                    </a>\r\n                                  </div>\r\n                                </>\r\n                              )\r\n                            }\r\n                            else \r\n                            {\r\n                              \r\n                              if (mlsParam!=\"\" && stateParam!=\"\")\r\n                              {\r\n                                return(\r\n                                  <>\r\n                                    <div key={`catList-${index}`} style={{listStyleType:\"circle\"}} className=\"imgContainer\">\r\n                                      <a href={`/play?state=${stateParam}&mls=${mlsParam}&listID=${e.idHash}`}>\r\n                                        <img src={address} alt=\"house\" width={imgWidth} style={{border:\"5px solid #007bff\",borderRadius: \"10px\",margin:\"5px\"}} ></img> \r\n                                      </a>\r\n                                    </div>\r\n                                  </>\r\n                                )\r\n                              }\r\n                            }\r\n\r\n                          })\r\n                        }\r\n                    </div>\r\n                    </>\r\n                  )\r\n                })\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {\r\n        // <hr className=\"my-3 w-25\" />\r\n        // <div className=\"d-md-inline-flex icons-container\">\r\n        //   <a\r\n        //     href=\"https://www.github.com\"\r\n        //     target=\"_blank\"\r\n        //     rel=\"noopener noreferrer\"\r\n        //   >\r\n        //     <FontAwesomeIcon\r\n        //       icon={[\"fab\", \"github\"]}\r\n        //       className=\"icons github\"\r\n        //       title=\"Github\"\r\n        //     />\r\n        //   </a>\r\n        //   <a\r\n        //     href=\"https://linkedin.com\"\r\n        //     target=\"_blank\"\r\n        //     rel=\"noopener noreferrer\"\r\n        //   >\r\n        //     <FontAwesomeIcon\r\n        //       icon={[\"fab\", \"linkedin\"]}\r\n        //       className=\"icons linkedin\"\r\n        //       title=\"LinkedIn\"\r\n        //     />\r\n        //   </a>\r\n        //   <a\r\n        //     href=\"https://www.freecodecamp.org\"\r\n        //     target=\"_blank\"\r\n        //     rel=\"noopener noreferrer\"\r\n        //   >\r\n        //     <FontAwesomeIcon\r\n        //       icon={[\"fab\", \"free-code-camp\"]}\r\n        //       className=\"icons fcc\"\r\n        //       title=\"FreeCodeCamp\"\r\n        //     />\r\n        //   </a>\r\n        //   <a\r\n        //     href=\"https://www.hackerrank.com/\"\r\n        //     target=\"_blank\"\r\n        //     rel=\"noopener noreferrer\"\r\n        //   >\r\n        //     <FontAwesomeIcon\r\n        //       icon={[\"fab\", \"hackerrank\"]}\r\n        //       className=\"icons hr\"\r\n        //       title=\"Hackerrank\"\r\n        //     />\r\n        //   </a>\r\n        //   <a\r\n        //     href=\"mailto:johndoe@gmail.com\"\r\n        //     target=\"_blank\"\r\n        //     rel=\"noopener noreferrer\"\r\n        //   >\r\n        //     <FontAwesomeIcon\r\n        //       icon={[\"fas\", \"envelope\"]}\r\n        //       className=\"icons mail\"\r\n        //       title=\"e-mail\"\r\n        //     />\r\n        //   </a>\r\n        //   <a href=\"../../resume.pdf\" target=\"_blank\" download>\r\n        //     <FontAwesomeIcon\r\n        //       icon={[\"fas\", \"file-alt\"]}\r\n        //       className=\"icons file\"\r\n        //       title=\"Resume\"\r\n        //     />\r\n        //   </a>\r\n        // </div>\r\n        }\r\n    </PageLayout>\r\n  )\r\n}\r\n"],"sourceRoot":""}