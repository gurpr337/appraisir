{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["data","currentUser","loggedUser","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","useState","finished","setFinished","LoadWithState","evt","a","max","stateChosen","preventDefault","form","target","FormData","get","String","houseMLS","db","firebase","firestore","collection","doc","then","querySnapshot","forEach","push","userData","uid","exists","console","log","catch","error","looping","numLoops","selectHouse","property_id","keyName","pageInfo","undefined","phrase","concat","retVal","navigate","state","LoadWithRandom","stateArr","id","continuing","count","cats","setCats","setUserData","uData","useEffect","tempCats","docs","map","tempObj","useContext","ThemeContext","dark","title","className","style","fontSize","maxWidth","margin","background","hasMediaButton","hasIndexBoard","hasSizeButton","key","pic","f","index","mlsParam","stateParam","played","points","pics","params","divider","search","substring","Object","entries","t","k","href","color","src","alt","width","border","backgroundSize","borderRadius","backgroundColor","fontWeight","textShadow","listStyleType","backgroundImage","verticalAlign","zIndex","onClick","value","onSubmit","htmlFor","name","type","textAlign","e","ind","Name","Rating","List","address","idHash"],"mappings":"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","file":"component---src-pages-index-js-ba1ec072d5537d60c964.js","sourcesContent":["import React, {useState, useEffect, useContext } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport { navigate } from \"@reach/router\"\r\nimport ThemeContext from \"../utils/theme\"\r\nimport { PageLayout } from \"../components\"\r\nimport { SEO } from \"../utils\"\r\nimport { Container, Image  } from \"react-bootstrap\"\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css'; // or include from a CDN\r\nimport firebase from \"../components/firebase\"\r\n\r\nimport { loggedUser, printing } from  \"../components/FirebaseAuth\"\r\nimport { UserData }  from  \"../components/UserData\"\r\nimport './grid.css';\r\n\r\nimport Carousel from 'react-gallery-carousel';\r\nimport 'react-gallery-carousel/dist/index.css';\r\n\r\n\r\nexport default ({ data }) => {\r\n\r\n  let currentUser = loggedUser()\r\n  //console.log(\"current user is\",currentUser)\r\n  //let userData = {}\r\n\r\n  /*async function fillUserData ()\r\n  {\r\n    currentUser = await loggedUser()\r\n\r\n    if(currentUser)\r\n    {\r\n      await firebase.firestore().collection('Users').doc(currentUser.uid).get()\r\n      .then((doc) => {\r\n        if (doc.exists) \r\n        {\r\n            //console.log(\"Document data:\", doc.data());\r\n            //doc.data()\r\n            userData = doc.data()\r\n\r\n        } \r\n        else \r\n        {\r\n            // doc.data() will be undefined in this case\r\n            console.log(\"No such user!\");\r\n        }\r\n      }).catch((error) => {\r\n          console.log(\"Error getting user:\", error);\r\n      });\r\n    }\r\n  }\r\n\r\n  fillUserData()\r\n*/\r\n\r\n  function shuffle(array) \r\n  {\r\n    let currentIndex = array.length,  randomIndex;\r\n  \r\n    // While there remain elements to shuffle...\r\n    while (currentIndex != 0) {\r\n  \r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n  \r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex], array[currentIndex]];\r\n    }\r\n  \r\n    return array;\r\n  }\r\n\r\n  const [finished, setFinished] = useState(\"\")\r\n  \r\n  const LoadWithState = async (evt) => \r\n  {\r\n    let stateChosen = \"\"\r\n    if(typeof(evt) != 'string')\r\n    {\r\n      evt.preventDefault();\r\n      const form = evt.target;\r\n      const data = new FormData(form);\r\n\r\n      stateChosen = data.get(\"states\")\r\n      //console.log(\"selected state is \",stateChosen)\r\n    }\r\n    else\r\n    {\r\n      stateChosen = String(evt)\r\n      //console.log(\"--------------------random state chosen is\",stateChosen)\r\n    }\r\n    let houseMLS = []\r\n    function getRandomInt(max) \r\n    {\r\n      return Math.floor(Math.random() * max);\r\n    }\r\n\r\n    let db = firebase.firestore().collection('States').doc(stateChosen).collection('buffer')\r\n\r\n    let retVal \r\n\r\n    await db.get().then( async (querySnapshot) => \r\n    {\r\n      querySnapshot.forEach((doc) => \r\n      {\r\n          // doc.data() is never undefined for query doc snapshots\r\n          //console.log(doc.id, \" => \", doc.data());\r\n          houseMLS.push(doc.data())\r\n      });\r\n\r\n      //console.log(houseMLS)\r\n      houseMLS = shuffle(houseMLS)\r\n      //console.log(\"HOuse list after shuffling\",houseMLS)\r\n      //console.log(\"Houses Array length\", houseMLS.length)\r\n      let userData = {}\r\n\r\n      if(currentUser)\r\n      {\r\n        await firebase.firestore().collection('Users').doc(currentUser.uid).get()\r\n        .then((doc) => {\r\n          if (doc.exists) \r\n          {\r\n              //console.log(\"Document data:\", doc.data());\r\n              //doc.data()\r\n              userData = doc.data()\r\n\r\n          } \r\n          else \r\n          {\r\n              // doc.data() will be undefined in this case\r\n              console.log(\"No such user!\");\r\n          }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting user:\", error);\r\n        });\r\n      }\r\n      let looping = true\r\n      let selectHouse, keyName, pageInfo\r\n      let numLoops = 0\r\n      while (looping && (numLoops < houseMLS.length))\r\n      {\r\n        //console.log(\"+++\")\r\n        selectHouse = houseMLS[numLoops].property_id\r\n        keyName = `${selectHouse}_${stateChosen}`\r\n        pageInfo = houseMLS[numLoops]\r\n\r\n        //console.log(\"----\",numLoops, userData[keyName])\r\n        if (userData[keyName] == undefined)\r\n        {\r\n          //console.log(\"ggggg\",numLoops)\r\n          looping = false\r\n          break\r\n        }\r\n        else\r\n        {\r\n          ++numLoops\r\n        }\r\n      }\r\n\r\n      if (numLoops >= houseMLS.length)\r\n      {\r\n        //console.log(\"played all of them\", numLoops)\r\n        let phrase = (String(\"Finished all \")).concat(String(stateChosen),\" homes.\")\r\n        setFinished(phrase)\r\n        retVal = false\r\n      }\r\n      else\r\n      {\r\n        //console.log(\"Selected house is\", selectHouse, pageInfo)\r\n        retVal = true\r\n        navigate(`/play?state=${stateChosen}&mls=${selectHouse}`, {state: { \"pageInfo\" : pageInfo } })\r\n        \r\n      }\r\n\r\n    });\r\n\r\n    return retVal\r\n  }\r\n  const LoadWithRandom = async (evt) => \r\n  {\r\n    evt.preventDefault();\r\n    //const form = evt.target;\r\n    //console.log(\"--------------------Load random state\")\r\n\r\n    //------------------------------------------------------------------------------------------------------------------------\r\n    //let stateArr = [ 'MD', 'VA', 'DE', 'PA']\r\n\r\n    //let stateArr = [\"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \r\n    //\"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \r\n    //\"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"]\r\n\r\n    //so far 36 states out of 50 filled\r\n    let stateArr = [\"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \r\n    \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \r\n    \"NM\", \"NY\", \"NC\", \"ND\", \"PA\", \"VA\"]\r\n\r\n    let max = stateArr.length - 1\r\n    let id = Math.floor(Math.random() * max)\r\n\r\n    let continuing = true\r\n    let count = 0\r\n    while (continuing & count<500) \r\n    {\r\n      count++\r\n      id = Math.floor(Math.random() * max)\r\n      let stop = await LoadWithState(stateArr[id]) \r\n      //console.log(\"--------------------STOP IS \",stop)\r\n      if (stop == true)\r\n      {\r\n        continuing = false\r\n        break\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const [cats, setCats] = useState([])\r\n  const [userData, setUserData] = useState({})\r\n  \r\n  if (currentUser)\r\n  {\r\n    //userData = UserData()\r\n    async function uData()\r\n    {\r\n      await firebase.firestore().collection('Users').doc(currentUser.uid).get()\r\n      .then((doc) => {\r\n        if (doc.exists) \r\n        {\r\n            //console.log(\"Document data:\", doc.data());\r\n            //doc.data()\r\n            setUserData(doc.data())\r\n\r\n        } \r\n        else \r\n        {\r\n            // doc.data() will be undefined in this case\r\n            console.log(\"No such user!\");\r\n        }\r\n      }).catch((error) => {\r\n          console.log(\"Error getting user:\", error);\r\n      });\r\n    }\r\n\r\n    uData()\r\n  }\r\n\r\n\r\n  useEffect(() => \r\n  {\r\n    firebase.firestore().collection('Categories').get()\r\n    .then((querySnapshot) => \r\n    {\r\n      let tempCats = []\r\n      querySnapshot.docs.map((doc) => \r\n      {\r\n        if (doc.exists) \r\n        {\r\n          //setCats(doc.data())\r\n          //console.log(\"categories\",doc.id)\r\n          let tempObj = doc.data()\r\n          tempObj[\"idHash\"] = doc.id\r\n          tempCats.push(tempObj)\r\n        } \r\n        else \r\n        {\r\n          console.log(\"No categories!\");\r\n        }\r\n      })\r\n      setCats(tempCats)\r\n      //console.log(\"categories\",tempCats)\r\n\r\n    }).catch((error) => \r\n    {\r\n      console.log(\"Error getting categories:\", error);\r\n    });\r\n\r\n  }, [])\r\n\r\n  //backgroundColor: \"#00ffd5\"\r\n\r\n  let carouselItems = [\r\n    {key: \"M6594039110_MD\", pic:\"https://ap.rdcpix.com/5dc138f032752cbae69cb1fcefe5afcfl-m1954928286od-w1024_h768_x2.webp\"},\r\n    {key: \"M6243265216_VA\", pic:\"https://ap.rdcpix.com/d36c33fde545e850d443c9763748af12l-m790958679od-w1024_h768_x2.webp\"},\r\n    {key: \"M6994333417_MD\", pic:\"https://ap.rdcpix.com/85d648fdbbc8ac7bc5c799fadd37e3c5l-m1904560105od-w1024_h768_x2.webp\"},\r\n    {key: \"M5952646750_MD\", pic:\"https://ap.rdcpix.com/3095d7ad40bee6f66a5ad84e2a9f1e57l-m2804454579od-w1024_h768_x2.webp\"},\r\n    {key: \"M6866287639_MD\", pic:\"https://ap.rdcpix.com/20abce3af92c6bff9049ad97c818fc1al-m1172070228od-w1024_h768_x2.webp\"},\r\n    {key: \"M5920526288_VA\", pic:\"https://ap.rdcpix.com/57a04357bcceabe0f91e6a1433acd132l-m4230270205od-w1024_h768_x2.webp\"}]\r\n\r\n  const { dark } = useContext(ThemeContext)\r\n  return (\r\n    <PageLayout>\r\n      <SEO title=\"Home\" />\r\n        \r\n        <h2>Test your home valuation skills!</h2>\r\n        <div className=\"text-color\" style={{fontSize:\"1.5rem\"}}> Click to play a home:</div>\r\n        {//<h2>Click to play one of the homes below</h2>\r\n        }\r\n        <Carousel style={{ maxWidth:\"700px\", margin:\"auto\", background:\"transparent\"}} hasMediaButton={false} hasIndexBoard={false} hasSizeButton={false}>\r\n        {\r\n          carouselItems.map((f,index) => \r\n          {\r\n            let played = false\r\n            let points = 0\r\n            let pics = f.pic\r\n\r\n            let mlsParam, stateParam\r\n            let params = String(f.key)\r\n            if (params.length > 0)\r\n            {\r\n              let divider = params.search(\"_\")\r\n              mlsParam = params.substring(0,divider)\r\n              stateParam = params.substring((divider+1))\r\n            }\r\n            if(currentUser)\r\n            {\r\n              Object.entries(userData).map((t,k) =>\r\n              {\r\n                if(t[0] == f.key)\r\n                {\r\n                  played = true\r\n                  points = t[1][0]\r\n                }\r\n              })\r\n            }    \r\n            //console.log(\"list entry\",f)\r\n            let imgWidth = \"95%\"\r\n            if(played)\r\n            {\r\n              return(\r\n                <>\r\n                <div key={`topList-${index}`} className=\"playedHouses\">\r\n                  <div className=\"imgContainer indexCarousel\">\r\n                    <a href={`/play?state=${stateParam}&mls=${mlsParam}` } style={{color:\"#00DD00\"}}>\r\n                      <img src={pics} alt=\"house\" width={imgWidth} className=\"indexCarousel imgGray\" style={{border:\"5px solid #00DD00\", backgroundSize: \"cover\", borderRadius: \"10px\",margin:\"5px\"}}></img> \r\n                      <div className=\"imgCentered\" style={{backgroundColor:\"transparent\", fontWeight:\"900\", fontSize:\"1.5rem\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}}>\r\n                        Scored ${points}\r\n                      </div>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                </>\r\n              )\r\n            }\r\n            else \r\n            {\r\n              \r\n              if (mlsParam!=\"\" && stateParam!=\"\")\r\n              {\r\n                return(\r\n                  <>\r\n                  <div key={`topList-${index}`} style={{listStyleType:\"circle\"}} className=\"imgContainer indexCarousel\">\r\n                    <a href={`/play?state=${stateParam}&mls=${mlsParam}`}>\r\n                      <img src={pics} alt=\"house\" className=\"indexCarousel\"  width={imgWidth} style={{border:\"5px solid #007bff\", backgroundSize: \"cover\", borderRadius: \"10px\",margin:\"5px\"}} ></img> \r\n                    </a>\r\n                  </div>\r\n                  </>\r\n                )\r\n              }\r\n            }\r\n\r\n          })\r\n          \r\n        }\r\n        </Carousel>\r\n        <br/><br/>\r\n\r\n        {\r\n        // <div className=\"w-100 text-color thicc\" style={{maxWidth: \"90%\", margin: \"auto\", textAlign:\"left\"}}>    \r\n        //     <u>Simple Filters:</u><br/>\r\n        // </div>\r\n        // <br/><br/>\r\n        }\r\n        <div className=\"w-100\" style={{ maxWidth: \"80%\", margin: \"auto\"}}>      \r\n\r\n          <div className=\"thin indexTop-grid\">\r\n            <div className=\"indexTopBoxes\" \r\n            style={{fontWeight:\"900\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\",backgroundImage:\"url(../../icons/Dice.png)\", backgroundSize: \"cover\"}}>\r\n              <table>\r\n                <tbody>\r\n                  <tr style={{ verticalAlign: \"bottom\",zIndex:\"4\", color:\"white\" }}>\r\n                    <td>\r\n                      Random Home?  &nbsp;\r\n                      <Button onClick={LoadWithRandom} value=\"Random\" style={{fontWeight:\"900\",textShadow: \"#000 0px 0 3px,#000 0px 0 2px\", fontSize:\"1.2rem\"}}> \r\n                        Play \r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            \r\n            <form onSubmit={LoadWithState} >\r\n\r\n              <div className=\"indexTopBoxes\" style={{ backgroundImage:\"url(../../icons/Map.png)\", backgroundSize: \"cover\"}}>\r\n                <table>\r\n                  <tbody>\r\n                  <tr style={{ verticalAlign: \"bottom\",zIndex:\"4\" }}>\r\n                    <td>\r\n                    \r\n                      <label htmlFor=\"states\" style={{color:\"white\", fontWeight:\"900\", textShadow: \"#000 0px 0 5px,#000 0px 0 5px\"}}>State:&nbsp;</label>\r\n\r\n                      <select name=\"states\" id=\"states\" style={{borderRadius:\"8px\"}}>\r\n                        <option value=\"AL\">Alabama</option>\r\n                        <option value=\"AK\">Alaska</option>\r\n                        <option value=\"AZ\">Arizona</option>\r\n                        <option value=\"AR\">Arkansas</option>\r\n                        <option value=\"CA\">California</option>\r\n                        <option value=\"CO\">Colorado</option>\r\n                        <option value=\"CT\">Connecticut</option>\r\n                        <option value=\"DE\">Delaware</option>\r\n                        <option value=\"FL\">Florida</option>\r\n                        <option value=\"GA\">Georgia</option>\r\n                        <option value=\"HI\">Hawaii</option>\r\n                        <option value=\"ID\">Idaho</option>\r\n                        <option value=\"IL\">Illinois</option>\r\n                        <option value=\"IN\">Indiana</option>\r\n                        <option value=\"IA\">Iowa</option>\r\n                        <option value=\"KS\">Kansas</option>\r\n                        <option value=\"KY\">Kentucky</option>\r\n                        <option value=\"LA\">Louisiana</option>\r\n                        <option value=\"ME\">Maine</option>\r\n                        <option value=\"MD\">Maryland</option>\r\n                        <option value=\"MA\">Massachusetts</option>\r\n                        <option value=\"MI\">Michigan</option>\r\n                        <option value=\"MN\">Minnesota</option>\r\n                        <option value=\"MS\">Mississippi</option>\r\n                        <option value=\"MO\">Missouri</option>\r\n                        <option value=\"MT\">Montana</option>\r\n                        <option value=\"NE\">Nebraska</option>\r\n                        <option value=\"NV\">Nevada</option>\r\n                        <option value=\"NH\">New Hampshire</option>\r\n                        <option value=\"NJ\">New Jersey</option>\r\n                        <option value=\"NM\">New Mexico</option>\r\n                        <option value=\"NY\">New York</option>\r\n                        <option value=\"NC\">North Carolina</option>\r\n                        <option value=\"ND\">North Dakota</option>\r\n                        <option value=\"PA\">Pennsylvania</option>\r\n                        <option value=\"VA\">Virginia</option>\r\n                      </select>  \r\n\r\n                      &nbsp;\r\n\r\n                      <Button className=\"btn\" type=\"submit\" value=\"Play\" style={{fontWeight:\"900\",textShadow: \"#000 0px 0 3px,#000 0px 0 2px\", fontSize:\"1.2rem\"}}>\r\n                        Play\r\n                      </Button>\r\n                      \r\n                    </td>\r\n                  </tr>\r\n                  { finished && (() => \r\n                    {\r\n                      return(\r\n                      <tr>\r\n                        <td style={{ fontWeight:\"900\", textShadow: \"#000 0px 0 5px,#000 0px 0 5px\",color:\"#dd3344\"}}>{finished}</td>\r\n                      </tr>\r\n                      )\r\n                    })()\r\n                  }\r\n                  </tbody>\r\n                </table>\r\n                \r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n            \r\n        </div>\r\n\r\n        <br/><br/><br/><br/>\r\n\r\n        <div className=\"w-100 text-color thicc\" style={{ maxWidth: \"90%\", margin: \"auto\", textAlign:\"left\"}}>    \r\n        <u>Popular Categories:</u><br/><br/>\r\n        </div>\r\n        <div className=\"w-100 text-color\" style={{ maxWidth: \"90%\", margin: \"auto\"}}>      \r\n          <div className=\"boxes text-left features-grid thicc \">\r\n\r\n            \r\n            <div className=\"thin feat-grid\">\r\n              { cats &&\r\n                cats.map((e,ind) => \r\n                {\r\n                  return (\r\n                    <>\r\n                    <div key={`catBoxes-${ind}`} className=\"featBoxes\" >\r\n                      <div key={`catBoxesTitle-${ind}`} className=\"mid\">{e.Name} - {e.Rating}/5</div>\r\n                        { e.List &&\r\n                          Object.entries(e.List).map((f,index) =>\r\n                          {\r\n                            //console.log(\"EEEEEE\",e.idHash)\r\n                            let played = false\r\n                            let points = 0\r\n                            let address = f[1]\r\n\r\n                            let mlsParam, stateParam\r\n                            let params = String(f[0])\r\n                            if (params.length > 0)\r\n                            {\r\n                              let divider = params.search(\"_\")\r\n                              mlsParam = params.substring(0,divider)\r\n                              stateParam = params.substring((divider+1))\r\n                            }\r\n                            if(currentUser)\r\n                            {\r\n                              Object.entries(userData).map((t,k) =>\r\n                              {\r\n                                if(t[0] == f[0])\r\n                                {\r\n                                  played = true\r\n                                  points = t[1][0]\r\n                                }\r\n                              })\r\n                            }    \r\n                            //console.log(\"list entry\",f)\r\n                            let imgWidth = 220 \r\n                            if(played)\r\n                            {\r\n                              return(\r\n                                <>\r\n                                  <div key={`catList-${index}`} className=\"playedHouses imgContainer\">\r\n                                    <a href={`/play?state=${stateParam}&mls=${mlsParam}&listID=${e.idHash}` } style={{color:\"#00DD00\"}}>\r\n                                      <img src={address} className=\"imgGray\" alt=\"house\" width={imgWidth} style={{border:\"5px solid #00DD00\",borderRadius: \"10px\",margin:\"5px\"}}></img> \r\n                                      <div className=\"imgCentered\" style={{backgroundColor:\"transparent\", fontWeight:\"900\", fontSize:\"1.5rem\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}}>\r\n                                        Scored ${points}\r\n                                      </div>\r\n                                    </a>\r\n                                  </div>\r\n                                </>\r\n                              )\r\n                            }\r\n                            else \r\n                            {\r\n                              \r\n                              if (mlsParam!=\"\" && stateParam!=\"\")\r\n                              {\r\n                                return(\r\n                                  <>\r\n                                    <div key={`catList-${index}`} style={{listStyleType:\"circle\"}} className=\"imgContainer\">\r\n                                      <a href={`/play?state=${stateParam}&mls=${mlsParam}&listID=${e.idHash}`}>\r\n                                        <img src={address} alt=\"house\" width={imgWidth} style={{border:\"5px solid #007bff\",borderRadius: \"10px\",margin:\"5px\"}} ></img> \r\n                                      </a>\r\n                                    </div>\r\n                                  </>\r\n                                )\r\n                              }\r\n                            }\r\n\r\n                          })\r\n                        }\r\n                    </div>\r\n                    </>\r\n                  )\r\n                })\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {\r\n        // <hr className=\"my-3 w-25\" />\r\n        // <div className=\"d-md-inline-flex icons-container\">\r\n        //   <a\r\n        //     href=\"https://www.github.com\"\r\n        //     target=\"_blank\"\r\n        //     rel=\"noopener noreferrer\"\r\n        //   >\r\n        //     <FontAwesomeIcon\r\n        //       icon={[\"fab\", \"github\"]}\r\n        //       className=\"icons github\"\r\n        //       title=\"Github\"\r\n        //     />\r\n        //   </a>\r\n        //   <a\r\n        //     href=\"https://linkedin.com\"\r\n        //     target=\"_blank\"\r\n        //     rel=\"noopener noreferrer\"\r\n        //   >\r\n        //     <FontAwesomeIcon\r\n        //       icon={[\"fab\", \"linkedin\"]}\r\n        //       className=\"icons linkedin\"\r\n        //       title=\"LinkedIn\"\r\n        //     />\r\n        //   </a>\r\n        //   <a\r\n        //     href=\"https://www.freecodecamp.org\"\r\n        //     target=\"_blank\"\r\n        //     rel=\"noopener noreferrer\"\r\n        //   >\r\n        //     <FontAwesomeIcon\r\n        //       icon={[\"fab\", \"free-code-camp\"]}\r\n        //       className=\"icons fcc\"\r\n        //       title=\"FreeCodeCamp\"\r\n        //     />\r\n        //   </a>\r\n        //   <a\r\n        //     href=\"https://www.hackerrank.com/\"\r\n        //     target=\"_blank\"\r\n        //     rel=\"noopener noreferrer\"\r\n        //   >\r\n        //     <FontAwesomeIcon\r\n        //       icon={[\"fab\", \"hackerrank\"]}\r\n        //       className=\"icons hr\"\r\n        //       title=\"Hackerrank\"\r\n        //     />\r\n        //   </a>\r\n        //   <a\r\n        //     href=\"mailto:johndoe@gmail.com\"\r\n        //     target=\"_blank\"\r\n        //     rel=\"noopener noreferrer\"\r\n        //   >\r\n        //     <FontAwesomeIcon\r\n        //       icon={[\"fas\", \"envelope\"]}\r\n        //       className=\"icons mail\"\r\n        //       title=\"e-mail\"\r\n        //     />\r\n        //   </a>\r\n        //   <a href=\"../../resume.pdf\" target=\"_blank\" download>\r\n        //     <FontAwesomeIcon\r\n        //       icon={[\"fas\", \"file-alt\"]}\r\n        //       className=\"icons file\"\r\n        //       title=\"Resume\"\r\n        //     />\r\n        //   </a>\r\n        // </div>\r\n        }\r\n    </PageLayout>\r\n  )\r\n}\r\n"],"sourceRoot":""}