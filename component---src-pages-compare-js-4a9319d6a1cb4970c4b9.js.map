{"version":3,"sources":["webpack:///./src/pages/compare.js"],"names":["GetHouseData","a","window","searchParams","URLSearchParams","location","search","home1Params","get","divider1","mlsParam1","substring","stateParam1","home2Params","divider2","mlsParam2","stateParam2","altReturn","firebase","firestore","collection","doc","String","then","exists","data","console","log","catch","error","currentUser","loggedUser","useState","userData","mlsID","home1Data","setHome1","home1pics","setHome1Pics","category","text","home1feats","setHome1Feats","home2Data","setHome2","home2pics","setHome2Pics","home2feats","setHome2Feats","confirmShow","setConfirmShow","setSelectedHouse","setNotSelectedHouse","choiceResult","setChoiceResult","dark","useContext","ThemeContext","rerendering","setRerender","loadHome1Data","pageData","tempPic","photos","forEach","element","str","href","better","length","concat","push","src","features","loadHome2Data","Comma","Num","x","replace","split","x1","x2","rgx","test","useEffect","getHouse","houseSize1","houseUnits1","housePrice1","houseCity1","houseState1","houseZip1","price","building_size","size","units","address","city","state","line","postal_code","lat","lon","houseSize2","houseUnits2","housePrice2","houseCity2","houseState2","houseZip2","SubmitAnswer","evt","tempSelected","win","price1","price2","uid","userID","previousData","userStorage","JSON","parse","localStorage","getItem","setItem","stringify","ordering","localeCompare","keyname","set","LoadNewCompare","LoadRandomHouse","randomHome1","randomHome2","navigate","setTimeout","num","Math","random","ConfirmationModal","props","aria-labelledby","centered","className","Header","style","backgroundColor","color","Title","id","onClick","onHide","variant","Body","fontWeight","Footer","borderWidth","borderColor","value","title","justifyContent","e","fontSize","width","disabled","textAlign","show","images","height","hasMediaButton","hasIndexBoard","borderTop","beds","baths","year_built","Item","eventKey","Button","description","map","ind","key","f","index"],"mappings":"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","file":"component---src-pages-compare-js-4a9319d6a1cb4970c4b9.js","sourcesContent":["import React, {useState, useContext, useEffect } from \"react\"\r\nimport ThemeContext from \"../utils/theme\"\r\nimport { PageLayout } from \"../components\"\r\nimport { SEO } from \"../utils\"\r\nimport { Container, Image, InputGroup, FormControl, Form, Button, Modal, CloseButton, ProgressBar} from \"react-bootstrap\"\r\nimport { Accordion } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport firebase from \"../components/firebase\"\r\n\r\nimport { UserData }  from  \"../components/UserData\"\r\nimport 'bootstrap/dist/css/bootstrap.css'; \r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Carousel from 'react-gallery-carousel';\r\nimport 'react-gallery-carousel/dist/index.css';\r\nimport './grid.css';\r\n\r\n\r\nimport { loggedUser, printing } from  \"../components/FirebaseAuth\"\r\nimport { LoadStateHouse, LoadRandomHouse } from  \"../components/LoadStateHouse\"\r\nimport { navigate } from \"@reach/router\"\r\n\r\n\r\nconst GetHouseData = async() =>\r\n{\r\n\r\n  let searchParams\r\n  if (typeof window !== 'undefined') \r\n  {  searchParams = new URLSearchParams(window.location.search);  }\r\n\r\n  \r\n  let home1Params = searchParams.get('home1')\r\n  let divider1 = home1Params.search(\"_\")\r\n  let mlsParam1 = home1Params.substring(0,divider1)\r\n  let stateParam1 = home1Params.substring((divider1+1))\r\n\r\n  let home2Params = searchParams.get('home2')\r\n  let divider2 = home2Params.search(\"_\")\r\n  let mlsParam2 = home2Params.substring(0,divider2)\r\n  let stateParam2 = home2Params.substring((divider2+1))\r\n\r\n  let altReturn ={}\r\n  \r\n\r\n  await firebase.firestore().collection('States').doc(String(stateParam1)).collection('buffer').doc(mlsParam1).get()\r\n  .then((doc) => \r\n  {\r\n    if (doc.exists) \r\n    {\r\n        //console.log(\"Document data:\", doc.data());\r\n        altReturn[\"home1\"] = doc.data()\r\n    } \r\n    else \r\n    {\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"No such document!\");\r\n    }\r\n  }).catch((error) => {\r\n      console.log(\"Error getting document:\", error);\r\n  });\r\n\r\n  await firebase.firestore().collection('States').doc(String(stateParam2)).collection('buffer').doc(mlsParam2).get()\r\n  .then((doc) => \r\n  {\r\n    if (doc.exists) \r\n    {\r\n        //console.log(\"Document data:\", doc.data());\r\n        altReturn[\"home2\"] = doc.data()\r\n    } \r\n    else \r\n    {\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"No such document!\");\r\n    }\r\n  }).catch((error) => {\r\n      console.log(\"Error getting document:\", error);\r\n  });\r\n\r\n\r\n  return altReturn\r\n\r\n}\r\n\r\n\r\nexport default ({location}) => {\r\n\r\n  let currentUser = loggedUser()\r\n\r\n  //let userData = UserData()\r\n  const [userData, setUserData] = useState({})\r\n\r\n  const[mlsID,setmlsID] = useState(\"\")\r\n\r\n  const [home1Data,setHome1] = useState({});\r\n  const [home1pics, setHome1Pics] = useState([]);\r\n  const [home1feats, setHome1Feats] = useState([{category:\"filler\",text:[\"filler\", \"filler\"]}]);\r\n\r\n  const [home2Data,setHome2] = useState({});\r\n  const [home2pics, setHome2Pics] = useState([]);\r\n  const [home2feats, setHome2Feats] = useState([{category:\"filler\",text:[\"filler\", \"filler\"]}]);\r\n\r\n  const [confirmShow, setConfirmShow] = useState(false);\r\n  const [selectedHouse, setSelectedHouse] = useState('');\r\n  const [notSelectedHouse, setNotSelectedHouse] = useState('');\r\n\r\n  const [choiceResult, setChoiceResult] = useState('');\r\n\r\n  const { dark } = useContext(ThemeContext)\r\n  const [rerendering, setRerender] = useState(0.0)\r\n\r\n  const loadHome1Data = (pageData) =>\r\n  {\r\n    setHome1(pageData)\r\n    let tempPic = []\r\n    pageData.photos.forEach(element => {\r\n      let str = element.href\r\n      let trim = str.substring(0, (str.length-5))\r\n      let better = trim.concat(\"od-w1024_h768_x2.webp\")\r\n      tempPic.push({src:better})\r\n    });\r\n\r\n    setHome1Feats(pageData.features)\r\n    setHome1Pics(tempPic)\r\n  }\r\n  const loadHome2Data = (pageData) =>\r\n  {\r\n    setHome2(pageData)\r\n    let tempPic = []\r\n    pageData.photos.forEach(element => {\r\n      let str = element.href\r\n      let trim = str.substring(0, (str.length-5))\r\n      let better = trim.concat(\"od-w1024_h768_x2.webp\")\r\n      tempPic.push({src:better})\r\n    });\r\n\r\n    setHome2Feats(pageData.features)\r\n    setHome2Pics(tempPic)\r\n  }\r\n\r\n  function Comma(Num) \r\n  { //function to add commas to textboxes\r\n    if (Num == null)\r\n    {\r\n      Num = ''\r\n    }\r\n    Num += '';\r\n    Num = Num.replace(',', ''); Num = Num.replace(',', ''); Num = Num.replace(',', '');\r\n    Num = Num.replace(',', ''); Num = Num.replace(',', ''); Num = Num.replace(',', '');\r\n    let x = Num.split('.');\r\n    let x1 = x[0];\r\n    let x2 = x.length > 1 ? '.' + x[1] : '';\r\n    let rgx = /(\\d+)(\\d{3})/;\r\n    while (rgx.test(x1))\r\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\r\n    return x1 + x2;\r\n  }\r\n\r\n  useEffect(() => \r\n  {\r\n    \r\n    ( async () => { \r\n\r\n      let getHouse = await GetHouseData() \r\n      loadHome1Data(getHouse[\"home1\"])\r\n      loadHome2Data(getHouse[\"home2\"])\r\n\r\n    })()\r\n\r\n  }, [mlsID, rerendering])\r\n\r\n  let houseSize1 = 0\r\n  let houseUnits1 = \"\"\r\n  let housePrice1 = 0\r\n  let houseCity1 = \"\"\r\n  let houseState1 = \"\"\r\n  let houseLine1 = \"\"\r\n  let houseZip1 = \"\"\r\n  let houseLat1 = 0\r\n  let houseLon1 = 0\r\n\r\n\r\n  if(home1Data)\r\n  {\r\n    housePrice1 = home1Data.price\r\n    if(home1Data.building_size)\r\n    {\r\n      houseSize1 = home1Data.building_size.size\r\n      houseUnits1 = home1Data.building_size.units\r\n    }\r\n    if(home1Data.address)\r\n    {\r\n      houseCity1 = home1Data.address.city\r\n      houseState1 = home1Data.address.state\r\n      houseLine1 = home1Data.address.line\r\n      houseZip1 = home1Data.address.postal_code\r\n      houseLat1 = home1Data.address.lat\r\n      houseLon1 = home1Data.address.lon\r\n    }\r\n  }\r\n\r\n  let houseSize2 = 0\r\n  let houseUnits2 = \"\"\r\n  let housePrice2 = 0\r\n  let houseCity2 = \"\"\r\n  let houseState2 = \"\"\r\n  let houseLine2 = \"\"\r\n  let houseZip2 = \"\"\r\n  let houseLat2 = 0\r\n  let houseLon2 = 0\r\n\r\n  if(home2Data)\r\n  {\r\n    housePrice2 = home2Data.price\r\n    if(home2Data.building_size)\r\n    {\r\n      houseSize2 = home2Data.building_size.size\r\n      houseUnits2 = home2Data.building_size.units\r\n    }\r\n    if(home2Data.address)\r\n    {\r\n      houseCity2 = home2Data.address.city\r\n      houseState2 = home2Data.address.state\r\n      houseLine2 = home2Data.address.line\r\n      houseZip2 = home2Data.address.postal_code\r\n      houseLat2 = home2Data.address.lat\r\n      houseLon2 = home2Data.address.lon\r\n    }\r\n  }\r\n\r\n\r\n  const SubmitAnswer = async (evt) => \r\n  {\r\n    //if(evt)\r\n    //{ evt.preventDefault(); }\r\n\r\n    let tempSelected = String(evt)\r\n\r\n    let price1 = housePrice1 \r\n    let price2 = housePrice2\r\n    let win = false\r\n\r\n    if (price1 > price2 && tempSelected=='A')\r\n    {\r\n      //console.log(\"You Chose the Correct House!!\")\r\n      setChoiceResult('Right')\r\n      win = true\r\n    }\r\n    \r\n    else if (price1 > price2 && tempSelected=='B')\r\n    {\r\n      //console.log(\"You Chose the Wrong House\")\r\n      setChoiceResult('Wrong')\r\n    }\r\n    \r\n    else if (price1 < price2 && tempSelected=='A')\r\n    {\r\n      //console.log(\"You Chose the Wrong House\")\r\n      setChoiceResult('Wrong')\r\n    }\r\n    \r\n    else if (price1 < price2 && tempSelected=='B')\r\n    {\r\n      //console.log(\"You Chose the Correct House!!\")\r\n      setChoiceResult('Right')\r\n      win = true\r\n    }\r\n\r\n    if (win)\r\n    {\r\n      if(currentUser && currentUser.uid)\r\n      {\r\n        let userID = `${currentUser.uid}`\r\n        let previousData = {}\r\n\r\n        let userStorage = JSON.parse(localStorage.getItem('userData'))\r\n\r\n        if (userStorage == null)\r\n        {\r\n          //console.log(\"RUNNING Users FIREBASE CALL\")\r\n          await firebase.firestore().collection('Users').doc(String(currentUser.uid)).get()\r\n          .then((doc) => {\r\n            if (doc.exists) \r\n            {\r\n                //console.log(\"Document data:\", doc.data());\r\n                //doc.data()\r\n                previousData = doc.data()\r\n                localStorage.setItem('userData', JSON.stringify(doc.data()) )\r\n            } \r\n            else \r\n            {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such user!\");\r\n            }\r\n          }).catch((error) => {\r\n              console.log(\"Error getting user:\", error);\r\n          });\r\n        }\r\n        else \r\n        {\r\n          previousData = userStorage\r\n          //console.log(\"didnt run Submit Price Users firebase read because data is in local storage\", userStorage)\r\n        }\r\n        \r\n        let searchParams\r\n        if (typeof window !== 'undefined') \r\n        {  searchParams = new URLSearchParams(window.location.search);  }\r\n\r\n\r\n        let home1Params = searchParams.get('home1')\r\n        let divider1 = home1Params.search(\"_\")\r\n        let mlsParam1 = home1Params.substring(0,divider1)\r\n        let stateParam1 = home1Params.substring((divider1+1))\r\n\r\n        let home2Params = searchParams.get('home2')\r\n        let divider2 = home2Params.search(\"_\")\r\n        let mlsParam2 = home2Params.substring(0,divider2)\r\n        let stateParam2 = home2Params.substring((divider2+1))\r\n\r\n        let ordering = String(mlsParam1).localeCompare(String(mlsParam2))\r\n        //console.log(\"ordering is\", ordering)\r\n        let keyname\r\n        if(ordering == 1)\r\n        {\r\n          keyname = \"compare\".concat(mlsParam1).concat(\".\").concat(stateParam1).concat(\"+\").concat(mlsParam2).concat(\".\").concat(stateParam2)\r\n        }\r\n        else\r\n        {\r\n          keyname = \"compare\".concat(mlsParam2).concat(\".\").concat(stateParam2).concat(\"+\").concat(mlsParam1).concat(\".\").concat(stateParam1)\r\n        }\r\n        //console.log(\"the key is\", keyname)\r\n\r\n        previousData[keyname] = [100]\r\n\r\n        //console.log(\"entry would be\", previousData)\r\n        //console.log(\"SETTING USERS FIREBASE CALL\")\r\n\r\n        firebase.firestore().collection('Users').doc(String(userID)).set(previousData)\r\n        localStorage.setItem('userData', JSON.stringify(previousData) )\r\n        \r\n        //console.log(\"updated userData in localstorage\", localStorage)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const LoadNewCompare = async (evt) => \r\n  {\r\n    let mode = 'return'\r\n    let [randomHome1,randomHome2] = await LoadRandomHouse(userData,mode)\r\n\r\n    //console.log(\"the two new homes are\",randomHome1,randomHome2)\r\n\r\n    setSelectedHouse('')\r\n    setNotSelectedHouse('')\r\n    setConfirmShow(false)\r\n    setChoiceResult('')\r\n\r\n    navigate(`/compare?home1=${randomHome1}&home2=${randomHome2}`)\r\n\r\n    setTimeout(() => \r\n    {  \r\n      let num = Math.random() + Math.random() + Math.random()\r\n      setRerender(num)\r\n      //console.log(\"Called rerender\")\r\n    }, 100);\r\n    \r\n  }\r\n\r\n  function ConfirmationModal(props) \r\n  {\r\n    return (\r\n      \r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className = \"my-modal\"\r\n      >\r\n        <Modal.Header style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Modal.Title  id=\"contained-modal-title-vcenter\">\r\n          { (() => \r\n            {\r\n              if(choiceResult == '')\r\n              {\r\n                /*\r\n                return(\r\n                  <>\r\n                    You selected:<span style={{color:'#00dd00',fontSize:'2rem'}}> {selectedHouse}</span> costs more than <span style={{color:'#00dd00',fontSize:'2rem'}}>{notSelectedHouse}</span> \r\n                  </>\r\n                );\r\n                */\r\n              }\r\n              else if(choiceResult == 'Right')\r\n              {\r\n                return(\r\n                  <>\r\n                    Correct!!! 😀\r\n                  </>\r\n                );\r\n              }\r\n              else if(choiceResult == 'Wrong')\r\n              {\r\n                return(\r\n                  <>\r\n                    Sorry 😢\r\n                  </>\r\n                );\r\n              }\r\n            })()\r\n          }\r\n          </Modal.Title>\r\n          <CloseButton onClick={props.onHide} variant = {`${dark ? 'white' : ''}`} />\r\n        </Modal.Header>\r\n        <Modal.Body style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          { (() => \r\n            {\r\n              if(choiceResult == '')\r\n              {\r\n                /*\r\n                return(\r\n                  <>\r\n                    <p className=\"thicc\">\r\n                      Click 'Yes' to confirm or 'Close' to change your answer.\r\n                    </p>\r\n                    <br/>\r\n                    <Button onClick={SubmitAnswer} style={{ fontSize:\"1.5rem\",fontWeight:\"500\",color:\"white\"}} variant=\"primary\">\r\n                      Yes!\r\n                    </Button>\r\n                  </>\r\n                );\r\n                */\r\n              }\r\n              else if(choiceResult == 'Right')\r\n              {\r\n                return(\r\n                  <>\r\n                    <h4>\r\n                      You scored 100 points!!!! <br/>\r\n                      House A is <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice1).replace(/\\D/g,''))} </span> \r\n                      and House B is <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice2).replace(/\\D/g,''))}</span>\r\n                    </h4>\r\n                  </>\r\n                );\r\n              }\r\n              else if(choiceResult == 'Wrong')\r\n              {\r\n                return(\r\n                  <>\r\n                    <h4>\r\n                      That is incorrect. Better luck next time. <br/>\r\n                      House A is <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice1).replace(/\\D/g,''))} </span> \r\n                      and House B is <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice2).replace(/\\D/g,''))}</span>\r\n                    </h4>\r\n                  </>\r\n                );\r\n              }\r\n            })()\r\n          }\r\n          \r\n        \r\n        </Modal.Body>\r\n        <Modal.Footer style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          { (() => \r\n            {\r\n              if(choiceResult == '')\r\n              {\r\n                return(\r\n                  <>\r\n                    <Button variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n                  </>\r\n                );\r\n              }\r\n              else\r\n              {\r\n                return(\r\n                  <>\r\n                  <table>\r\n                    <tr>\r\n                      \r\n                      <td>\r\n                        <Button onClick={() =>\r\n                          {\r\n                            LoadNewCompare()\r\n                          }\r\n                        } style={{backgroundColor:\"#00BB00\",borderWidth:\"0px\",borderColor:\"#00BB00\"}} variant=\"success\" value=\"Submit\">\r\n                          New Comparison\r\n                        </Button> \r\n                      </td>\r\n\r\n                      <td>\r\n                        <Button variant=\"danger\" style={{borderWidth:\"0px\"}} onClick={() => \r\n                          {\r\n                            props.onHide()\r\n                            //setChoiceResult('')\r\n                          }\r\n                        }>Close</Button>\r\n                      </td>\r\n\r\n                    </tr>\r\n                  </table>\r\n                  </>\r\n                );\r\n              }\r\n            })()\r\n          }\r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  \r\n\r\n  \r\n  return (\r\n    <PageLayout>\r\n      <SEO title=\"Compare\" />\r\n\r\n      { (() => \r\n        {\r\n          if(choiceResult == '')\r\n          {\r\n            return(\r\n              <>\r\n                <div className=\"inputCompare text-color\">\r\n                  <h3>  Which Price is Higher? </h3> \r\n                  <InputGroup style={{ justifyContent : 'center'}}>\r\n                    <Button onClick={(e) =>\r\n                      {\r\n                        SubmitAnswer('A')\r\n                        //setSelectedHouse('A')\r\n                        //setNotSelectedHouse('B')\r\n                        setConfirmShow(true)\r\n                      }\r\n                    } style={{ fontSize:\"1.5rem\",fontWeight:\"900\", backgroundColor:\"#00BB00\",borderColor:\"#00BB00\",width:'40%'}} variant=\"success\" value=\"Submit\">\r\n                      A\r\n                    </Button> \r\n                    <Button disabled style={{backgroundColor:'grey',borderColor:\"grey\", color:'white', fontSize:\"1.2rem\",fontWeight:\"900\",width:'20%',textAlign:'center'}}>\r\n                      OR\r\n                    </Button>\r\n                    <Button onClick={(e) =>\r\n                      {\r\n                        SubmitAnswer('B')\r\n                        //setSelectedHouse('B')\r\n                        //setNotSelectedHouse('A')\r\n                        setConfirmShow(true)\r\n                      }\r\n                    } style={{ fontSize:\"1.5rem\",fontWeight:\"900\", backgroundColor:\"#00BB00\",borderColor:\"#00BB00\",width:'40%'}} variant=\"success\" value=\"Submit\">\r\n                      B\r\n                    </Button>\r\n                  </InputGroup>\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n          else\r\n          {\r\n            return(\r\n              <>\r\n                <div className=\"inputCompare text-color\">\r\n                  <InputGroup style={{ justifyContent : 'center'}}>\r\n                    <Button onClick={() =>\r\n                      {\r\n                        LoadNewCompare()\r\n                      }\r\n                    } style={{ fontSize:\"1.5rem\",fontWeight:\"900\", backgroundColor:\"#00BB00\",borderColor:\"#00BB00\",width:'90%'}} variant=\"success\" value=\"Submit\">\r\n                      New Comparison\r\n                    </Button> \r\n                  </InputGroup>\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n        })()\r\n      }\r\n      \r\n\r\n      {confirmShow ?  <ConfirmationModal\r\n                            show={confirmShow}\r\n                            onHide={() => setConfirmShow(false)}\r\n                          /> : ` `}\r\n\r\n\r\n      <br/>\r\n      \r\n      \r\n      <div className=\"pageMargin pt-6 mt-6 text-color\">\r\n        <div className=\"compareTop-grid\">\r\n          <div className=\"compareTopBox\">\r\n            { (() => \r\n              {\r\n                if(choiceResult == '')\r\n                {\r\n                  return(\r\n                    <>\r\n                      <h2> A </h2>\r\n                    </>\r\n                  );\r\n                }\r\n                else\r\n                {\r\n                  return(\r\n                    <>\r\n                      <h2> <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice1).replace(/\\D/g,''))} </span> </h2>\r\n                    </>\r\n                  );\r\n                }\r\n              })()\r\n            }\r\n             \r\n\r\n            <div className=\"compareBasic-grid\">            \r\n              <div className=\"compareBasicBoxes \">\r\n                <Carousel images={home1pics} style={{ height: 400, backgroundColor:'transparent' }} hasMediaButton={false} hasIndexBoard={false} />\r\n              </div>\r\n\r\n              <div className=\"compareBasicBoxes text-left thicc \" >\r\n                <hr style={{ borderTop:`1px solid ${dark ? 'white' : 'black'}`}}/>\r\n                    {/*houseLine1*/} {houseCity1}, {houseState1}, {houseZip1} <br/>\r\n                    \r\n                    {home1Data.beds} <div className=\"thin\">Beds</div> {home1Data.baths} <div className=\"thin\">Baths</div>&nbsp; \r\n                    {houseSize1} <div className=\"thin\">{houseUnits1}</div> {home1Data.style} <br/>\r\n\r\n                    {home1Data.year_built} <div className=\"thin\">Year Built</div> \r\n              </div>\r\n\r\n              \r\n              <Accordion >\r\n                <Accordion.Item eventKey=\"0\" style={{borderColor:'#bbb',borderWidth:'1px'}}>\r\n                  <Accordion.Button style={{ backgroundColor:`${dark ? '#222' : 'white'}`,color:`${dark ? 'white' : 'black'}` }}><u>Description:</u></Accordion.Button>\r\n                  <Accordion.Body >\r\n                    <div className=\"compareBasicBoxes text-left thicc scrolling\">\r\n                      <div className=\"thin\">{home1Data.description}</div>\r\n                    </div>\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              </Accordion>\r\n              \r\n              \r\n              <div className=\"compareBasicBoxes text-left thicc \">\r\n                <Accordion >\r\n                  <Accordion.Item eventKey=\"0\" style={{borderColor:'#bbb',borderWidth:'1px'}}>\r\n                    <Accordion.Button style={{ backgroundColor:`${dark ? '#222' : 'white'}`,color:`${dark ? 'white' : 'black'}` }}><u>Details:</u></Accordion.Button>\r\n                    <Accordion.Body >\r\n                      <div className=\"thin feat-grid\">\r\n                        { \r\n                          home1feats.map((e,ind) => \r\n                          {\r\n                            return (\r\n                              <div key={`featCat-${ind}`} className=\"featBoxes\" >\r\n                                <div className=\"mid\">{e.category} </div>\r\n                                <ul>\r\n                                  {\r\n                                    e.text.map((f,index) =>\r\n                                    {\r\n                                      return (\r\n                                        <li key={`featList-${index}`}>\r\n                                          {f}\r\n                                        </li>\r\n                                      )\r\n                                    })\r\n                                  }\r\n                                </ul>\r\n                              </div>\r\n                            )\r\n                          })\r\n                        }\r\n                      </div>\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"compareTopBox\">  \r\n            { (() => \r\n              {\r\n                if(choiceResult == '')\r\n                {\r\n                  return(\r\n                    <>\r\n                      <h2> B </h2>\r\n                    </>\r\n                  );\r\n                }\r\n                else\r\n                {\r\n                  return(\r\n                    <>\r\n                      <h2> <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice2).replace(/\\D/g,''))} </span> </h2>\r\n                    </>\r\n                  );\r\n                }\r\n              })()\r\n            } \r\n\r\n            <div className=\"compareBasic-grid\">\r\n              <div className=\"compareBasicBoxes\">\r\n                <Carousel images={home2pics} style={{ height: 400, backgroundColor:'transparent' }} hasMediaButton={false} hasIndexBoard={false} />\r\n              </div>\r\n\r\n              <div className=\"compareBasicBoxes text-left thicc \" >\r\n                <hr style={{ borderTop:`1px solid ${dark ? 'white' : 'black'}`}}/>\r\n                    {/*houseLine2*/} {houseCity2}, {houseState2}, {houseZip2} <br/>\r\n                    \r\n                    {home2Data.beds} <div className=\"thin\">Beds</div> {home2Data.baths} <div className=\"thin\">Baths</div>&nbsp; \r\n                    {houseSize2} <div className=\"thin\">{houseUnits2}</div> {home2Data.style} <br/>\r\n\r\n                    {home2Data.year_built} <div className=\"thin\">Year Built</div>\r\n              </div>\r\n\r\n              <Accordion >\r\n                <Accordion.Item eventKey=\"0\" style={{borderColor:'#bbb',borderWidth:'1px'}}>\r\n                  <Accordion.Button style={{ backgroundColor:`${dark ? '#222' : 'white'}`,color:`${dark ? 'white' : 'black'}` }}><u>Description:</u></Accordion.Button>\r\n                  <Accordion.Body >\r\n                    <div className=\"compareBasicBoxes text-left thicc scrolling\">\r\n                      <div className=\"thin\">{home2Data.description}</div>\r\n                    </div>\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              </Accordion>\r\n              \r\n              <div className=\"compareBasicBoxes text-left thicc \">\r\n                <Accordion >\r\n                  <Accordion.Item eventKey=\"0\" style={{borderColor:'#bbb',borderWidth:'1px'}}>\r\n                    <Accordion.Button style={{ backgroundColor:`${dark ? '#222' : 'white'}`,color:`${dark ? 'white' : 'black'}` }}><u>Details:</u></Accordion.Button>\r\n                    <Accordion.Body >\r\n                      <div className=\"thin feat-grid\">\r\n                        { \r\n                          home2feats.map((e,ind) => \r\n                          {\r\n                            return (\r\n                              <div key={`featCat-${ind}`} className=\"featBoxes\" >\r\n                                <div className=\"mid\">{e.category} </div>\r\n                                <ul>\r\n                                  {\r\n                                    e.text.map((f,index) =>\r\n                                    {\r\n                                      return (\r\n                                        <li key={`featList-${index}`}>\r\n                                          {f}\r\n                                        </li>\r\n                                      )\r\n                                    })\r\n                                  }\r\n                                </ul>\r\n                              </div>\r\n                            )\r\n                          })\r\n                        }\r\n                      </div>\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </PageLayout>\r\n  )\r\n\r\n}"],"sourceRoot":""}