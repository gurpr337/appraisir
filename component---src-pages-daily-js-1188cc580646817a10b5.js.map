{"version":3,"sources":["webpack:///./src/components/BellCurve.js","webpack:///./src/pages/Daily.js"],"names":["data","points","labelPoints","axisColor","axisWidth","sigma","parseFloat","mu","userScore","score","i","z","y","Math","sqrt","pow","push","String","toFixed","abs","round","zScore","filledPoints","factK","sum","term","k","loopStop","exp","GetZPercent","yPoint","vertPoints","zzz","parseInt","dataParam","labels","datasetIdKey","datasets","id","fill","backgroundColor","borderColor","borderWidth","tension","options","parsing","xAxisKey","yAxisKey","plugins","legend","display","elements","point","radius","scales","min","max","grid","color","lineWidth","ticks","font","size","weight","x","responsive","maintainAspectRatio","className","style","maxWidth","paddingLeft","paddingRight","location","currentUser","loggedUser","useState","userData","setUserData","mlsID","alreadyPlayed","setAlreadyPlayed","previousScore","setPreviousScore","houseData","setHouse","pics","setPictures","category","text","feats","setFeats","assessment","total","year","taxAss","setTaxAss","readTax","setReadTax","taxModalShow","setTaxModalShow","trendModalShow","setTrendModalShow","median","trend","setTrend","readTrend","setReadTrend","listItems","priceSub","setPriceSub","priceComma","setPriceComma","hideInput","setHideInput","ogGuess","setOgGuess","priceDiff","setPriceDiff","percentageScore","setPercentageScore","modalShow","setModalShow","dark","useContext","ThemeContext","meanScore","setMeanScore","stdDevSigma","setStdDevSigma","rerendering","setRerender","mapModalShow","setMapModalShow","houseSize","houseUnits","housePrice","houseCity","houseState","houseLine","houseZip","houseYear","shareOutput","setShareOutput","dailyHouseVars","setDailyHouseVars","dailyList","getStateMLS","mlsParam","stateParam","todaysDate","Date","startDate","diffTime","getTime","choice","trunc","length","dailyParams","divider","search","substring","ret","listDate","GetHouseData","localUserData","a","altReturn","houseVars","stateID","console","log","window","dailyStorage","JSON","parse","localStorage","getItem","timeStored","time","keyName","key","localeCompare","results","percent","dailyAccuracy","dailyPoints","sc","floor","dayID","indexOf","tempShareOutput","join","firebase","firestore","collection","doc","get","then","exists","catch","error","loadPageData","pageData","tempPic","photos","forEach","element","str","href","better","concat","src","features","tax_history","propData","by_prop_type","useEffect","userStorage","uid","setItem","stringify","URLSearchParams","getHouse","undefined","list_date","listDay","listDiv","price","building_size","units","address","city","state","line","postal_code","lat","lon","year_built","SubmitPrice","evt","preventDefault","mlsChosen","stateChosen","pointsEarned","showScore","todaysEpoch","dailyData","userID","previousData","thumbNail","trim","betterThumbNail","accuracy","badgeKey","completed","baths","beds","set","dateObj","monthDaily","getMonth","dayDaily","getDate","yearDaily","getFullYear","newDate","dailyRankData","playerCount","totalSum","devSum","play_count","total_sum","deviation_sqrd_sum","avgScore","stdDev","newDailyRank","num","random","setTimeout","LoadWithState","searchParams","LoadStateHouse","LoadWithRandom","LoadRandomHouse","Comma","Num","replace","split","x1","x2","rgx","test","sharePopover","Popover","Body","NewScoreModal","props","Modal","aria-labelledby","centered","Header","Title","fontWeight","SocialButtons","CloseButton","onClick","onHide","variant","sec","taxRead","trendRead","original","askLogIn","pBar","Table","striped","bordered","hover","width","ProgressBar","fontSize","height","now","to","learnMore","fillerData","percentile","textAlign","BellCurve","Footer","Button","textShadow","TaxModal","TrendModal","margin","Object","entries","map","item","ind","listing_price","txt","charAt","toUpperCase","substr","toLowerCase","toTitleCase","parceInp","BigMap","useCallback","center","zoom","setmap","flyTo","MapContainer","attributionControl","zoomControl","whenCreated","scrollWheelZoom","TileLayer","url","Circle","pathOptions","SmallMap","MapModal","rel","class","encodeURIComponent","title","target","OverlayTrigger","trigger","placement","overlay","navigator","clipboard","writeText","integrity","crossorigin","e","val","value","valClean","InputGroup","Text","FormControl","type","onChange","onKeyPress","placeholder","show","images","transitionDurationMax","hasMediaButton","hasIndexBoard","borderTop","position","opacity","border","bottom","zIndex","stroke","preserveAspectRatio","role","viewBox","xmlns","d","description","Accordion","Item","eventKey","f","index"],"mappings":"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nE,mBAAS,IAA7CoE,GAtDsB,MAsDPC,GAtDO,MAwDzBC,GAAY,CAAE,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAElB,SAASC,KAGP,IAWIC,EAAUC,EAVVC,EAAa,IAAIC,KACjBC,EAAY,IAAID,KAFR,cAGRE,EAAWH,EAAWI,UAAYF,EAAUE,UAM5CC,EALW7I,KAAK8I,MAAMH,EAAQ,OAKXP,GAAUW,OAG7BC,EAAc5I,OAAOgI,GAAUS,IACnC,GAAIG,EAAYD,OAAS,EACzB,CACE,IAAIE,EAAUD,EAAYE,OAAO,KACjCZ,EAAWU,EAAYG,UAAU,EAAEF,GACnCV,EAAaS,EAAYG,UAAWF,EAAQ,GAE9C,IAAIG,EAAM,CAAC,MAAQd,EAAS,QAAUC,GAItC,OAFAJ,GAAkBiB,GAEXA,EAKT,IAmOIC,GAnOEC,GAAY,6BAAG,WAAMC,GAAN,iDAAAC,EAAA,sDAiBnB,GAZIC,EAAY,GAEZC,EAAYrB,KACZC,EAAWoB,EAAUzF,MACrBsE,EAAamB,EAAUC,QAE3BC,QAAQC,IAAIvB,EAASC,GAGC,oBAAXuB,SACTC,EAAeC,KAAKC,MAAMC,aAA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","file":"component---src-pages-daily-js-1188cc580646817a10b5.js","sourcesContent":["import React from \"react\"\r\nimport { PageLayout } from \"../components\"\r\nimport { Container } from \"react-bootstrap\"\r\n//import {  graphql } from \"gatsby\"\r\nimport { SEO } from \"../utils\"\r\nimport { Link } from \"@reach/router\"\r\n\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\n\r\nexport default ({ data }) => {\r\n\r\n  \r\n  function GetZPercent(z) \r\n  {\r\n    //z == number of standard deviations from the mean\r\n\r\n    //if z is greater than 6.5 standard deviations from the mean\r\n    //the number of significant digits will be outside of a reasonable \r\n    //range\r\n    if ( z < -6.5)\r\n      return 0.0;\r\n    if( z > 6.5) \r\n      return 1.0;\r\n\r\n    var factK = 1;\r\n    var sum = 0;\r\n    var term = 1;\r\n    var k = 0;\r\n    var loopStop = Math.exp(-23);\r\n    while(Math.abs(term) > loopStop) \r\n    {\r\n      term = .3989422804 * Math.pow(-1,k) * Math.pow(z,k) / (2 * k + 1) / Math.pow(2,k) * Math.pow(z,k+1) / factK;\r\n      sum += term;\r\n      k++;\r\n      factK *= k;\r\n\r\n    }\r\n    sum += 0.5;\r\n\r\n    return sum;\r\n  }\r\n  let points = []\r\n  let labelPoints = []\r\n  let axisColor = []\r\n  let axisWidth = []\r\n  //console.log(\"in bell curve data is\", data)\r\n\r\n  let sigma = parseFloat(data.sigma), mu = parseFloat(data.mu), userScore = parseFloat(data.score)\r\n\r\n  \r\n  //let q = ( ( 1/ (sigma*Math.sqrt(2*Math.PI)) ) * ( Math.pow(Math.E,(-1*( Math.pow((0-mu),2)/ Math.pow((2*sigma),2) ) ) ) ) )\r\n  //console.log('sigma is',sigma,'mu is',mu,'y is',q)\r\n  for(let i = -3; i <= 3.1; i+=0.05)\r\n  {\r\n    let z = (i)\r\n    //let y = ( ( 1/ (sigma*Math.sqrt(2*Math.PI)) ) * ( Math.pow(Math.E,(-1*( Math.pow((z-mu),2)/ Math.pow((2*sigma),2) ) ) ) ) )\r\n    let y = (1/(Math.sqrt(2*3.14159)))*(Math.pow(2.718,(-1*(Math.pow(z,2))/2)))\r\n    //let y = - (Math.pow(i,2) - 2)\r\n\r\n    points.push({\"x\":String((z.toFixed(2))),\"y\":String((y.toFixed(10) ))})\r\n    labelPoints.push(String((z.toFixed(2))))\r\n    if (Math.abs(Math.round(z * 10)) == 0)\r\n    {\r\n      axisColor.push(\"grey\")\r\n      axisWidth.push(3)\r\n    }\r\n    axisColor.push(\"black\")\r\n    axisWidth.push(0.5)\r\n  }\r\n  //console.log(\"points\",points, \"|colors\",axisColor)\r\n\r\n  let zScore = ((userScore - mu) / sigma)\r\n  let percentile = GetZPercent(zScore)\r\n  //console.log(\"your percentile is:\",percentile,\"z score is:\",zScore)\r\n\r\n  let filledPoints = []\r\n  for(let i = -3; i <= zScore; i+=0.05)\r\n  {\r\n    let z = (i)\r\n    //let y = ( ( 1/ (sigma*Math.sqrt(2*Math.PI)) ) * ( Math.pow(Math.E,(-1*( Math.pow((z-mu),2)/ Math.pow((2*sigma),2) ) ) ) ) )\r\n    let y = (1/(Math.sqrt(2*3.14159)))*(Math.pow(2.718,(-1*(Math.pow(z,2))/2)))\r\n    //let y = - (Math.pow(i,2) - 2)\r\n\r\n    filledPoints.push({\"x\":String((z.toFixed(2))),\"y\":String((y.toFixed(10) ))})\r\n    \r\n  }\r\n\r\n  let yPoint = ( (1/(Math.sqrt(2*3.14159)))*(Math.pow(2.718,(-1*(Math.pow(zScore,2))/2))) ) *1.1\r\n  let vertPoints = []\r\n  /*for(let i = -3; i <= zScore; i+=0.1)\r\n  {\r\n    let z = (i)\r\n    //let y = ( ( 1/ (sigma*Math.sqrt(2*Math.PI)) ) * ( Math.pow(Math.E,(-1*( Math.pow((z-mu),2)/ Math.pow((2*sigma),2) ) ) ) ) )\r\n    let y = 0\r\n    //let y = - (Math.pow(i,2) - 2)\r\n\r\n    vertPoints.push({\"x\":String((z.toFixed(2))),\"y\":String((y.toFixed(10) ))})\r\n    \r\n  }*/\r\n  let zzz =  parseFloat(parseInt(zScore * 10) / 10)\r\n\r\n  vertPoints.push({\"x\":String((zzz.toFixed(2))),\"y\":\"0.00\"})\r\n  vertPoints.push({\"x\":String((zzz.toFixed(2))),\"y\":String((yPoint))})\r\n  //console.log(vertPoints)\r\n\r\n  const dataParam = \r\n  {\r\n    labels: labelPoints,\r\n    datasetIdKey:'id',\r\n    datasets: [\r\n      {\r\n        id:2,\r\n        data: filledPoints,\r\n        fill: true,\r\n        backgroundColor: 'rgb(0, 221, 0, 0.5)',\r\n        borderColor: 'rgba(0, 221, 0, 0.5)',\r\n        borderWidth: 4,\r\n        tension:0.3,\r\n      },\r\n      {\r\n        id:3,\r\n        data: points,\r\n        fill: false,\r\n        backgroundColor: 'rgb(0, 221, 0)',\r\n        borderColor: 'rgba(0, 221, 0, 0.5)',\r\n        borderWidth: 4,\r\n        tension:0.3,\r\n      },\r\n      {\r\n        id:1,\r\n        data: vertPoints,\r\n        fill: false,\r\n        backgroundColor: '#aaa',\r\n        borderColor: '#fff',\r\n        borderWidth:0,\r\n        tension:0.3,\r\n      },\r\n      \r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    parsing: {\r\n      xAxisKey: \"x\",\r\n      yAxisKey: \"y\"\r\n    },\r\n    plugins:{\r\n      legend:{\r\n        display: false,\r\n      },\r\n    },\r\n    elements:{\r\n      point:{\r\n          radius: 0,\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        min: 0,\r\n        max: 0.45,\r\n        grid:{\r\n          color:[\"grey\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\",\"black\"],\r\n          lineWidth: [3,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5],\r\n        },\r\n        ticks:\r\n        {\r\n          display: false,\r\n          font:\r\n          {\r\n            size:10,\r\n            weight:\"900\",\r\n          }\r\n        }\r\n      },\r\n      x:{\r\n        grid:{\r\n          color:axisColor,\r\n          lineWidth: axisWidth,\r\n        },\r\n        ticks:\r\n        {\r\n          font:\r\n          {\r\n            size:10,\r\n            weight:\"900\",\r\n          }\r\n        }\r\n      }\r\n    },\r\n    responsive : true,\r\n    maintainAspectRatio: false\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\" text-color\" style={{ maxWidth: \"800px\",paddingLeft:\"0px !\",paddingRight:\"0px !\" }}>\r\n      \r\n      \r\n      <div className=\"bellCurve\">\r\n        <Line data={dataParam} options={options} />\r\n      </div>\r\n      \r\n\r\n\r\n      \r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useContext, useEffect, memo, useCallback } from \"react\"\r\nimport ThemeContext from \"../utils/theme\"\r\nimport { PageLayout } from \"../components\"\r\nimport { SEO } from \"../utils\"\r\nimport { Container, Image, InputGroup, FormControl, Form, Button, Modal, CloseButton, ProgressBar, OverlayTrigger, Popover, Table} from \"react-bootstrap\"\r\nimport { Accordion } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport firebase from \"../components/firebase\"\r\n\r\nimport { MapContainer, TileLayer, Marker, Popup, Circle,useMap } from 'react-leaflet'\r\n\r\nimport { UserData }  from  \"../components/UserData\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css'; // or include from a CDN\r\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\n\r\nimport Carousel from 'react-gallery-carousel';\r\nimport 'react-gallery-carousel/dist/index.css';\r\nimport './grid.css';\r\n\r\n\r\nimport { loggedUser, printing } from  \"../components/FirebaseAuth\"\r\nimport { LoadStateHouse, LoadRandomHouse } from  \"../components/LoadStateHouse\"\r\nimport { Link } from \"@reach/router\"\r\n\r\nimport BellCurve from \"../components/BellCurve\"\r\n\r\n\r\nexport default ({location}) => {\r\n\r\n  let currentUser = loggedUser()\r\n\r\n  //let userData = UserData()\r\n  const [userData, setUserData] = useState({})\r\n\r\n  const[mlsID,setmlsID] = useState(\"\")\r\n\r\n  const [alreadyPlayed,setAlreadyPlayed] = useState();\r\n  const [previousScore,setPreviousScore] = useState(0);\r\n  const [houseData,setHouse] = useState({});\r\n  const [pics, setPictures] = useState([]);\r\n  const [feats, setFeats] = useState([{category:\"filler\",text:[\"filler\", \"filler\"]}]);\r\n  \r\n  const [taxAss, setTaxAss] = useState([{assessment:{total:\"filler\"},year:\"filler\"}]);\r\n  const [readTax, setReadTax] = useState(false)\r\n  const [taxModalShow, setTaxModalShow] = useState(false);\r\n\r\n  const [trendModalShow, setTrendModalShow] = useState(false);\r\n  const [trend, setTrend] = useState({median:\"filler\"});\r\n  const [readTrend, setReadTrend] = useState(false)\r\n\r\n  const [listItems, setListItems] = useState(null)\r\n\r\n  const [priceSub, setPriceSub] = useState(0);\r\n  const [priceComma, setPriceComma] = useState();\r\n  const [hideInput, setHideInput] = useState(false);\r\n\r\n  const [ogGuess, setOgGuess] = useState(0);\r\n  const [priceDiff, setPriceDiff] = useState(0);\r\n  const [percentageScore, setPercentageScore] = useState(0);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const { dark } = useContext(ThemeContext)\r\n  \r\n  const [meanScore, setMeanScore] = useState(1.0)\r\n  const [stdDevSigma, setStdDevSigma] = useState(1.0)\r\n\r\n  const [rerendering, setRerender] = useState(0.0)\r\n  const [mapModalShow, setMapModalShow] = useState(false);\r\n\r\n  let houseSize = 0\r\n  let houseUnits = \"\"\r\n  let housePrice = 0\r\n  let houseCity = \"\"\r\n  let houseState = \"\"\r\n  let houseLine = \"\"\r\n  let houseZip = \"\"\r\n  let houseLat = 0\r\n  let houseLon = 0\r\n  let houseYear = 0\r\n\r\n  const [shareOutput, setShareOutput] = useState('');\r\n \r\n  const [dailyHouseVars,setDailyHouseVars] = useState({});  \r\n  \r\n  let dailyList = [ \"M9170056565_RI\",\r\n                    \"M8686638647_LA\",\r\n                    \"M7830179733_LA\",\r\n                    \"M9564664712_ID\",\r\n                    \"M9077088995_ID\",\r\n                    \"M5991137119_NJ\",\r\n                    \"M1966510292_ID\",\r\n                    \"M9239855212_TX\",\r\n                    \"M4195415168_MI\",\r\n                    \"M7575594712_MS\",\r\n                    \"M7748332780_MS\",\r\n                    \"M9138171415_MT\",\r\n                    \"M7397671359_MT\",\r\n                    \"M7012230511_IA\",\r\n                    \"M8520035029_IA\",\r\n                    \"M5154480603_SC\",\r\n                    \"M5084680822_SC\",\r\n                    \"M6488382672_SC\",\r\n                    \"M9644614968_NJ\",\r\n                    \"M8665237938_AR\",\r\n                    \"M7875890587_AR\",\r\n                    \"M8104221646_AR\",\r\n                    \"M1927703851_ID\",\r\n                    \"M9120926058_NM\",\r\n                    \"M8187403385_AK\",\r\n                    \"M9518084456_MT\",\r\n                    \"M5477443741_DE\",\r\n                    \"M8628995755_LA\",\r\n                    \"M7838859429_LA\",\r\n                    \"M4721900943_NY\",\r\n                    \"M4785320056_NY\",\r\n                    \"M4335688852_NY\",\r\n                    \"M3623478575_CT\",\r\n                    \"M4385419535_CT\",\r\n                    \"M3424272028_CT\",\r\n                    \"M4970060479_CT\",\r\n                    \"M6604904318_MD\",\r\n                    \"M6866287639_MD\",\r\n                    \"M6848027327_MD\",\r\n                    \"M6085938803_MD\",\r\n                    \"M4317786525_PA\",\r\n                    \"M4750877307_PA\",\r\n                    \"M3472201440_PA\",\r\n                    \"M3434309865_PA\",\r\n                    \"M4111182365_PA\",\r\n                    \"M3110062414_PA\",\r\n                    \"M4199380152_NH\",\r\n                    \"M4872801626_NH\",\r\n                    \"M2925702696_CA\",\r\n                    \"M1191532887_CA\",\r\n                    \"M2887983051_CA\",\r\n                    \"M2901684994_CA\",\r\n                    \"M2962802303_CA\",\r\n                    \"M1728490516_CA\",\r\n                    \"M8524835765_NE\",\r\n                    \"M7956885132_NE\",\r\n                    \"M7079925302_NE\",\r\n                    \"M7666240525_NE\",\r\n                    \"M7599402575_NE\",\r\n                    \"M8319829518_NE\",\r\n                    \"M7855237398_AK\",\r\n                    \"M8342280581_AK\",\r\n                    \"M3559163092_MI\",\r\n                    \"M4342738688_MI\",\r\n                    \"M4370505087_MI\",\r\n                    \"M2602550906_NM\",\r\n                    \"M1575703879_NM\",\r\n                    \"M2004480528_NM\",\r\n                    \"M1380894990_NM\",\r\n                    \"M7074547359_OK\",\r\n                    \"M9535943353_OK\",\r\n                    \"M8914616978_OK\",\r\n                    \"M8263363117_OK\",\r\n                    \"M8176974546_OK\",\r\n                    \"M8264476020_OK\",\r\n                    \"M2348502253_AZ\",\r\n                    \"M2429798166_AZ\",\r\n                    \"M1733563118_AZ\",\r\n                    \"M1410334076_AZ\",\r\n                    \"M5665826413_FL\",\r\n                    \"M5199462188_FL\",\r\n                    \"M6373270654_FL\",\r\n                    \"M6865107387_FL\",\r\n                    \"M5545424677_FL\",\r\n                    \"M6444862166_FL\",\r\n                    \"M3429476908_ME\",\r\n                    \"M3807604276_ME\",\r\n                    \"M9043353765_ME\",\r\n                    \"M3371975558_ME\",\r\n                    \"M3682336934_ME\",\r\n                    \"M4851397677_VT\",\r\n                    \"M4671962164_VT\",\r\n                    \"M9636159244_VT\",\r\n                    \"M4247179058_VT\",\r\n                    \"M3220913980_MA\",\r\n                    \"M3639254450_MA\",\r\n                    \"M3787774271_KY\",\r\n                    \"M3826083660_KY\",\r\n                    \"M4088544513_KY\",\r\n                    \"M4619168032_KY\",\r\n                    \"M4126294913_KY\",]\r\n  \r\n  function getStateMLS()\r\n  {\r\n\r\n    let start = \"03/02/2022\"   \r\n    let todaysDate = new Date()\r\n    let startDate = new Date(start)\r\n    let diffTime = todaysDate.getTime() - startDate.getTime()\r\n    let diffDays = Math.trunc(diffTime / (1000 * 3600 * 24) )\r\n\r\n    //console.log(\"todays date is\",todaysDate)\r\n\r\n\r\n    let choice = diffDays%(dailyList.length)\r\n\r\n    let mlsParam, stateParam\r\n    let dailyParams = String(dailyList[choice]) \r\n    if (dailyParams.length > 0)\r\n    {\r\n      let divider = dailyParams.search(\"_\")\r\n      mlsParam = dailyParams.substring(0,divider)\r\n      stateParam = dailyParams.substring((divider+1))\r\n    }\r\n    let ret = {\"mlsID\":mlsParam,\"stateID\":stateParam}\r\n\r\n    setDailyHouseVars(ret)\r\n\r\n    return ret\r\n\r\n  }\r\n\r\n\r\n  const GetHouseData = async(localUserData) =>\r\n  {\r\n\r\n    \r\n    //console.log(\"------- CALLED GET HOUSE DATA\")\r\n    let altReturn = {}\r\n\r\n    let houseVars = getStateMLS()\r\n    let mlsParam = houseVars.mlsID \r\n    let stateParam = houseVars.stateID\r\n\r\n    console.log(mlsParam,stateParam)\r\n\r\n    let dailyStorage\r\n    if (typeof window !== 'undefined') \r\n    { dailyStorage = JSON.parse(localStorage.getItem('daily')) }\r\n\r\n    if(dailyStorage != null)\r\n    {\r\n\r\n      let timeStored = (new Date(parseInt(dailyStorage.time))).getTime()\r\n      //timeStored = 1645851600000\r\n\r\n      let todaysDate = new Date()\r\n      let diffTime = todaysDate.getTime() - timeStored\r\n      let diffDays = Math.trunc(diffTime / (1000 * 3600 * 24) )\r\n\r\n      //console.log(\"it has been\",diffDays,\"since daily was updated\", new Date(\"2/26/2022\").getTime())\r\n\r\n      \r\n      let played = false\r\n\r\n\r\n      if (dailyStorage != null)\r\n      {\r\n\r\n        //if(diffDays == 0)\r\n        //{\r\n          \r\n          let keyName = `${mlsParam}_${stateParam}`\r\n          //console.log(\"keyName:\", keyName, \"|\", dailyStorage.key, (String(dailyStorage.key)).localeCompare(String(keyName)));\r\n          if( (String(dailyStorage.key)).localeCompare(String(keyName)) == 0 )\r\n          {\r\n            //console.log(\"has already played this map\")\r\n            //played = true\r\n            let ret = {\"played\":true, \"points\":dailyStorage.points}\r\n\r\n            altReturn = ret\r\n\r\n            let results = []\r\n            let percent \r\n            let dailyAccuracy\r\n            if(dailyStorage.percent == null)\r\n            {\r\n              dailyAccuracy = parseInt(dailyStorage.points)/500\r\n            }\r\n            else\r\n            {\r\n              percent = parseFloat(dailyStorage.percent)\r\n              dailyAccuracy = (1-percent)\r\n            }\r\n\r\n            if (dailyAccuracy < 0)\r\n            { dailyAccuracy = 0} \r\n\r\n            let dailyPoints = dailyStorage.points\r\n            let maxBox = 8\r\n            let sc = Math.floor(dailyAccuracy*maxBox)\r\n\r\n            //let dayEpoch = new Date()\r\n            //console.log((String(dayEpoch.getMonth()+1)).padStart(2, '0'))\r\n            //let dayID = (String(dayEpoch.getMonth()+1)).padStart(2, '0').concat((String(dayEpoch.getDate())).padStart(2, '0'))\r\n            //let dayIDYear = String(String(dayEpoch.getFullYear())).concat(dayID)\r\n            \r\n            let dayID = dailyList.indexOf(keyName) + 1\r\n            results.push(`#Appraisir #Appraisir${dayID}\\n`)\r\n            results.push(`📈${Math.floor(dailyAccuracy*100)}% ✨${dailyPoints}\\n`)\r\n\r\n            //results.push(\"🏘️🌳🏘️🌳🏘️🌳🏘️🌳 \\n\")\r\n            //results.push(`💲${dailyDiff}🔺 \\n`)\r\n            for (let i = 0; i < maxBox; i++) \r\n            {\r\n              if(i < sc)\r\n              { results.push('🟩') }\r\n              else\r\n              { results.push('🟥') }\r\n            }\r\n            results.push('\\n')\r\n            results.push(\"https://Appraisir.com/Daily \\n\")\r\n            let tempShareOutput = String(results.join(\"\"))\r\n\r\n            setShareOutput(tempShareOutput)\r\n\r\n\r\n            //console.log(\"return\",ret)\r\n          }\r\n        //}\r\n      }\r\n      else\r\n      {\r\n        console.log(\"user DATA is null\")\r\n      }\r\n    }\r\n\r\n\r\n    //console.log(\"RUNNING States FIREBASE CALL\")\r\n    return firebase.firestore().collection('States').doc(String(stateParam)).collection('buffer').doc(mlsParam).get()\r\n    .then((doc) => {\r\n      if (doc.exists) \r\n      {\r\n          //console.log(\"Document data:\", doc.data());\r\n          altReturn[\"house\"] = doc.data()\r\n          return altReturn\r\n      } \r\n      else \r\n      {\r\n          // doc.data() will be undefined in this case\r\n          console.log(\"No such document!\");\r\n      }\r\n    }).catch((error) => {\r\n        console.log(\"Error getting document:\", error);\r\n    });\r\n  }\r\n\r\n  const loadPageData = (pageData) =>\r\n  {\r\n    setAlreadyPlayed(false)\r\n    setHouse(pageData)\r\n    let tempPic = []\r\n    pageData.photos.forEach(element => {\r\n      let str = element.href\r\n      let trim = str.substring(0, (str.length-5))\r\n      let better = trim.concat(\"od-w1024_h768_x2.webp\")\r\n      tempPic.push({src:better})\r\n    });\r\n\r\n    setFeats(pageData.features)\r\n    setTaxAss(pageData.tax_history)\r\n    setPictures(tempPic)\r\n\r\n    \r\n    if(pageData.trend && pageData.trend.median)\r\n    {\r\n\r\n      let propData = pageData.trend.median.by_prop_type\r\n      //console.log(\"trend Data\",propData)\r\n      setTrend(propData)\r\n    }\r\n    else\r\n    {\r\n      let propData = {median:'none'}\r\n      setTrend(propData)\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => \r\n  {\r\n    \r\n    (async () =>\r\n    { \r\n      houseLat = 0\r\n      houseLon = 0\r\n      let userStorage = JSON.parse(localStorage.getItem('userData'))\r\n      if (userStorage == null)\r\n      {\r\n        if(currentUser && currentUser.uid)\r\n        {\r\n          //console.log(\"RUNNING Users FIREBASE CALL\")\r\n          await firebase.firestore().collection('Users').doc(String(currentUser.uid)).get()\r\n          .then((doc) => {\r\n            if (doc.exists) \r\n            {\r\n                //console.log(\"Document data:\", doc.data());\r\n                //doc.data()\r\n                setUserData(doc.data())\r\n                localStorage.setItem('userData', JSON.stringify(doc.data()) )\r\n            } \r\n            else \r\n            {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such user!\");\r\n            }\r\n          }).catch((error) => \r\n          {\r\n              console.log(\"Error getting user:\", error);\r\n          });\r\n        }\r\n      }\r\n      else \r\n      {\r\n        setUserData(userStorage)\r\n        //console.log(\"didnt run firebase call because data is in local storage\", userStorage)\r\n      }\r\n      \r\n\r\n      let searchParams\r\n      if (typeof window !== 'undefined') \r\n      { searchParams = new URLSearchParams(window.location.search); }\r\n\r\n\r\n      //console.log(\"there was no houseinfo\")\r\n      let getHouse\r\n      if (userStorage != null)\r\n      {  \r\n        getHouse = await GetHouseData(userStorage) \r\n        //console.log(\"ran with userStorage\",userStorage)\r\n      }\r\n      else\r\n      { \r\n        getHouse = await GetHouseData(userData)  \r\n        //console.log(\"ran with userdata\",userData)\r\n      }\r\n      if(getHouse[\"played\"] == undefined)\r\n      {\r\n        loadPageData(getHouse[\"house\"])\r\n      }\r\n      else\r\n      {\r\n        loadPageData(getHouse[\"house\"])\r\n        setPreviousScore(getHouse[\"points\"])\r\n        setAlreadyPlayed(true)\r\n      }\r\n\r\n    })()\r\n  }, [mlsID, rerendering])\r\n\r\n  let listDate\r\n  if(houseData.list_date)\r\n  {\r\n    let listDay = (houseData.list_date)\r\n    let listDiv = listDay.search(\"T\")\r\n    listDate = listDay.substring(0,listDiv)\r\n  }\r\n\r\n  if(houseData)\r\n  {\r\n    housePrice = houseData.price\r\n    \r\n    if(houseData.building_size)\r\n    {\r\n      houseSize = houseData.building_size.size\r\n      houseUnits = houseData.building_size.units\r\n    }\r\n    if(houseData.address)\r\n    {\r\n      houseCity = houseData.address.city\r\n      houseState = houseData.address.state\r\n      houseLine = houseData.address.line\r\n      houseZip = houseData.address.postal_code\r\n      houseLat = houseData.address.lat\r\n      houseLon = houseData.address.lon\r\n      houseYear = houseData.year_built\r\n      //setLatLongPoint([parseFloat(houseLat), parseFloat(houseLon)])\r\n\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  const SubmitPrice = async (evt) => \r\n  {\r\n    if(evt)\r\n    { \r\n      evt.preventDefault(); \r\n    }\r\n    \r\n\r\n    let houseVars = {...dailyHouseVars}\r\n    let mlsChosen = houseVars.mlsID \r\n    let stateChosen = houseVars.stateID\r\n\r\n\r\n\r\n    //let pointsEarned = Math.floor( 100*Math.pow(0.999969,(Math.abs(priceSub-housePrice)) ) )\r\n    let percent = (Math.abs(priceSub-housePrice) / housePrice)\r\n    let pointsEarned = Math.round( 500*(1-2*(Math.pow(percent,2)) ))\r\n\r\n    if (pointsEarned < 0)\r\n    {\r\n      setOgGuess(0)\r\n    }\r\n    else\r\n    {\r\n      setOgGuess(pointsEarned)\r\n    }\r\n\r\n    if(readTax == true)\r\n    {\r\n      pointsEarned = (pointsEarned - (500*(0.1)))\r\n    }\r\n\r\n    if(readTrend == true)\r\n    {\r\n      pointsEarned = (pointsEarned - (500*(0.2)))\r\n    }\r\n\r\n    setPercentageScore(percent)\r\n    if (pointsEarned < 0)\r\n    {\r\n      pointsEarned = 0\r\n    }\r\n\r\n    let showScore  = pointsEarned + 1\r\n\r\n    \r\n    setPriceDiff(showScore)  \r\n\r\n    \r\n    // let entry =\r\n    // {\r\n    //  \"state\":`${stateChosen}`, \r\n    //  \"mls\": `${mlsChosen}`,\r\n    //  \"points\": `${pointsEarned}`       \r\n    // }\r\n    let todaysDate = new Date()\r\n    let todaysEpoch = String(todaysDate.getTime())\r\n    \r\n    let dailyData = \r\n    {\r\n      'time':`${todaysEpoch}`,\r\n      'key':`${mlsChosen}_${stateChosen}`,\r\n      'points':`${pointsEarned}`,\r\n      'percent':`${percent}`\r\n    }\r\n    localStorage.setItem('daily', JSON.stringify(dailyData) )\r\n\r\n    let keyName = `daily:${todaysEpoch}.${mlsChosen}.${stateChosen}`\r\n    let entry = { [keyName]:`${pointsEarned}` }\r\n    if(currentUser && currentUser.uid)\r\n    {\r\n      let userID = `${currentUser.uid}`\r\n      let previousData = {}\r\n\r\n      let userStorage = JSON.parse(localStorage.getItem('userData'))\r\n\r\n      if (userStorage == null)\r\n      {\r\n        //console.log(\"RUNNING Users FIREBASE CALL\")\r\n        await firebase.firestore().collection('Users').doc(String(currentUser.uid)).get()\r\n        .then((doc) => {\r\n          if (doc.exists) \r\n          {\r\n              //console.log(\"Document data:\", doc.data());\r\n              //doc.data()\r\n              previousData = doc.data()\r\n              localStorage.setItem('userData', JSON.stringify(doc.data()) )\r\n          } \r\n          else \r\n          {\r\n              // doc.data() will be undefined in this case\r\n              console.log(\"No such user!\");\r\n          }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting user:\", error);\r\n        });\r\n      }\r\n      else \r\n      {\r\n        previousData = userStorage\r\n        //console.log(\"didnt run Submit Price Users firebase read because data is in local storage\", userStorage)\r\n      }\r\n\r\n      if (previousData)\r\n      {\r\n        //console.log(\"User data:\", previousData);\r\n        let userData = previousData\r\n        let prevKey = `${mlsChosen}_${stateChosen}`\r\n\r\n        if (userData[prevKey])\r\n        {\r\n          //console.log(\"has already played this map\")\r\n          keyName = `daily:${todaysEpoch}.${mlsChosen}.${stateChosen}`\r\n        }\r\n        else \r\n        {\r\n          keyName = `${mlsChosen}_${stateChosen}`\r\n        }\r\n      }\r\n\r\n\r\n      \r\n\r\n      let addr = `${houseLine}, ${houseCity}, ${houseState}, ${houseZip}`\r\n\r\n      let thumbNail = houseData.photos[0].href\r\n      let trim = thumbNail.substring(0, (thumbNail.length-5))\r\n      let betterThumbNail = trim.concat(\"od-w1024_h768_x2.webp\")\r\n\r\n      previousData[keyName] = [pointsEarned,betterThumbNail]\r\n\r\n      let accuracy = ((1-percent)*100).toFixed(2)\r\n      if (accuracy < 0)\r\n      { accuracy = 0} \r\n      //console.log(\"accuracy is \", accuracy)\r\n\r\n      if(houseData.price > 1000000 && accuracy > 90.0)\r\n      {\r\n        let badgeKey = \"badge:Millionaire.Club\"\r\n        let pointsVar = 0\r\n        let completed \r\n        if(previousData[badgeKey])\r\n        { \r\n          completed = parseInt(previousData[badgeKey][2]) \r\n        }\r\n        if(completed)\r\n        { \r\n          completed += 1 \r\n        }\r\n        else\r\n        { \r\n          completed = 1\r\n        }\r\n        let goal = 10\r\n        let des = \"Score over 90% on houses greater than $1,000,000\"\r\n        let icon = \"MillionairClub.svg\"\r\n        previousData[badgeKey] = [pointsVar,des,completed,goal,icon]\r\n\r\n      }\r\n\r\n      if(houseSize > 3000 && accuracy > 80.0)\r\n      {\r\n        let badgeKey = \"badge:Mansion.Master\"\r\n        let pointsVar = 0\r\n        let completed \r\n        if(previousData[badgeKey])\r\n        { \r\n          completed = parseInt(previousData[badgeKey][2]) \r\n        }\r\n        if(completed)\r\n        { \r\n          completed += 1 \r\n        }\r\n        else\r\n        { \r\n          completed = 1\r\n        }\r\n        let goal = 20\r\n        let des = \"Score over 80% on houses larger than 3000 sqft\"\r\n        let icon = \"Mansion.svg\"\r\n        previousData[badgeKey] = [pointsVar,des,completed,goal,icon]\r\n\r\n      }\r\n      if(houseData.baths > houseData.beds)\r\n      {\r\n        let badgeKey = \"badge:Oval.Office\"\r\n        let pointsVar = 0\r\n        let completed \r\n        if(previousData[badgeKey])\r\n        { \r\n          completed = parseInt(previousData[badgeKey][2]) \r\n        }\r\n        if(completed)\r\n        { \r\n          completed += 1 \r\n        }\r\n        else\r\n        {  \r\n          completed = 1\r\n        }\r\n        let goal = 50\r\n        let des = \"Complete 50 houses that have more bathrooms than bedrooms\"\r\n        let icon = \"OvalOffice.svg\"\r\n        previousData[badgeKey] = [pointsVar,des,completed,goal,icon]\r\n\r\n      }\r\n\r\n      //console.log(\"entry would be\", previousData,\"user is\", userID)\r\n\r\n      //console.log(\"SETTING USERS FIREBASE CALL\")\r\n      firebase.firestore().collection('Users').doc(String(userID)).set(previousData)\r\n      \r\n      localStorage.setItem('userData', JSON.stringify(previousData) )\r\n      //console.log(\"updated userData in localstorage\", localStorage)\r\n\r\n    }\r\n\r\n\r\n    let dateObj = new Date();\r\n    let monthDaily = dateObj.getMonth() + 1; //months from 1-12\r\n    let dayDaily = dateObj.getDate();\r\n    let yearDaily = dateObj.getFullYear();\r\n\r\n    let newDate = monthDaily + \"_\" + dayDaily + \"_\" + yearDaily;\r\n\r\n    console.log(\"todays date\",newDate)\r\n    //firebase.firestore().collection('DailyRank').doc(String(newDate)).set(previousData)\r\n\r\n    let dailyRankData\r\n    await firebase.firestore().collection('DailyRank').doc(String(newDate)).get()\r\n    .then((doc) => \r\n    {\r\n      if (doc.exists) \r\n      {\r\n          //console.log(\"Document data:\", doc.data());\r\n          //doc.data()\r\n          dailyRankData = doc.data()\r\n      } \r\n      else \r\n      {\r\n          // doc.data() will be undefined in this case\r\n          console.log(\"No such daily rank!\");\r\n      }\r\n    }).catch((error) => {\r\n        console.log(\"Error getting daily rank:\", error);\r\n    });\r\n\r\n    let playerCount = 0,totalSum = 0,devSum = 0\r\n    if(dailyRankData)\r\n    {\r\n      playerCount = parseInt(dailyRankData.play_count)\r\n      totalSum = parseInt(dailyRankData.total_sum)\r\n      devSum = parseInt(dailyRankData.deviation_sqrd_sum)\r\n\r\n      console.log(\"3 vars are\",playerCount,totalSum,devSum)\r\n    }\r\n\r\n    let avgScore = 0\r\n    if(totalSum > 0)\r\n    {\r\n      avgScore = totalSum/playerCount\r\n    }\r\n    \r\n    //setAverageScore(avgScore)\r\n    console.log(\"average score was\",avgScore)\r\n\r\n    totalSum += (showScore - 1)\r\n    playerCount += 1\r\n    devSum += Math.pow(((showScore - 1)-avgScore),2)\r\n\r\n    avgScore = totalSum/playerCount\r\n\r\n    let stdDev = Math.sqrt(devSum/playerCount)\r\n    console.log(\"Mean =\",avgScore,\"| Std dev =\",stdDev)\r\n\r\n    setMeanScore(avgScore)\r\n    setStdDevSigma(stdDev)\r\n\r\n    let newDailyRank = { \"play_count\": playerCount, \"total_sum\":totalSum,\"deviation_sqrd_sum\":devSum}\r\n    firebase.firestore().collection('DailyRank').doc(String(newDate)).set(newDailyRank)\r\n    \r\n\r\n\r\n    let results = []\r\n      \r\n    let dailyAccuracy = (1-percent)\r\n    if (dailyAccuracy < 0)\r\n    { dailyAccuracy = 0} \r\n    let dailyPoints = pointsEarned\r\n    let maxBox = 8\r\n    let sc = Math.floor(dailyAccuracy*maxBox)\r\n\r\n    //let dayEpoch = new Date()\r\n    //let dayID = (String(dayEpoch.getMonth()+1)).padStart(2, '0').concat((String(dayEpoch.getDate())).padStart(2, '0'))\r\n    //let dayIDYear = String(String(dayEpoch.getFullYear())).concat(dayID)\r\n\r\n    let dayID = dailyList.indexOf(`${mlsChosen}_${stateChosen}`) + 1\r\n    results.push(`#Appraisir #Appraisir${dayID}\\n`)\r\n    results.push(`📈${Math.floor(dailyAccuracy*100)}% ✨${dailyPoints}\\n`)\r\n\r\n    //results.push(\"🏘️🌳🏘️🌳🏘️🌳🏘️🌳 \\n\")\r\n    //results.push(`💲${dailyDiff}🔺 \\n`)\r\n    for (let i = 0; i < maxBox; i++) \r\n    {\r\n      if(i < sc)\r\n      { results.push('🟩') }\r\n      else\r\n      { results.push('🟥') }\r\n    }\r\n    results.push('\\n')\r\n    results.push(\"https://Appraisir.com/Daily \\n\")\r\n    let tempShareOutput = String(results.join(\"\"))\r\n\r\n    setShareOutput(tempShareOutput)\r\n\r\n    console.log(tempShareOutput)\r\n\r\n    setPriceComma(\"\")\r\n    \r\n    let num = Math.random() + Math.random() + Math.random()\r\n    setRerender(num)\r\n    //console.log(\"rerender was just called\")\r\n\r\n    setTimeout(() => \r\n    {  \r\n      setModalShow(true)\r\n      if(!currentUser)\r\n      {\r\n        setHideInput(true)\r\n        setTrend({median:'filler'})\r\n      }\r\n    }, 600);\r\n\r\n  }\r\n  function GetZPercent(z) \r\n  {\r\n    //z == number of standard deviations from the mean\r\n\r\n    //if z is greater than 6.5 standard deviations from the mean\r\n    //the number of significant digits will be outside of a reasonable \r\n    //range\r\n    if ( z < -6.5)\r\n      return 0.0;\r\n    if( z > 6.5) \r\n      return 1.0;\r\n\r\n    var factK = 1;\r\n    var sum = 0;\r\n    var term = 1;\r\n    var k = 0;\r\n    var loopStop = Math.exp(-23);\r\n    while(Math.abs(term) > loopStop) \r\n    {\r\n      term = .3989422804 * Math.pow(-1,k) * Math.pow(z,k) / (2 * k + 1) / Math.pow(2,k) * Math.pow(z,k+1) / factK;\r\n      sum += term;\r\n      k++;\r\n      factK *= k;\r\n\r\n    }\r\n    sum += 0.5;\r\n\r\n    return sum;\r\n  }\r\n\r\n  const LoadWithState = async (evt) => \r\n  {\r\n    let searchParams\r\n    if (typeof window !== 'undefined') \r\n    { searchParams = new URLSearchParams(window.location.search); }\r\n\r\n    let stateChosen\r\n    if(searchParams)\r\n    {\r\n      stateChosen = String(searchParams.get('state'))\r\n    }\r\n\r\n    let houseVars = {...dailyHouseVars}\r\n    stateChosen = houseVars.stateID\r\n\r\n    LoadStateHouse(stateChosen,userData)\r\n\r\n    setTimeout(() => \r\n    {  \r\n      let num = Math.random() + Math.random() + Math.random()\r\n      setHideInput(false)\r\n      setRerender(num)\r\n      setReadTax(false)\r\n      setReadTrend(false)\r\n      setTrend({})\r\n      //console.log(\"Called rerender\")\r\n    }, 600);\r\n  \r\n  }\r\n  const LoadWithRandom = async (evt) => \r\n  {\r\n    if(evt)\r\n    { evt.preventDefault(); }\r\n    LoadRandomHouse(userData)\r\n\r\n    setTimeout(() => \r\n    {  \r\n      let num = Math.random() + Math.random() + Math.random()\r\n      setHideInput(false)\r\n      setRerender(num)\r\n      setReadTax(false)\r\n      setReadTrend(false)\r\n      setTrend({})\r\n      //console.log(\"Called rerender\")\r\n    }, 600);\r\n  }\r\n\r\n  function Comma(Num) \r\n  { //function to add commas to textboxes\r\n    if (Num == null)\r\n    {\r\n      Num = ''\r\n    }\r\n    Num += '';\r\n    Num = Num.replace(',', ''); Num = Num.replace(',', ''); Num = Num.replace(',', '');\r\n    Num = Num.replace(',', ''); Num = Num.replace(',', ''); Num = Num.replace(',', '');\r\n    let x = Num.split('.');\r\n    let x1 = x[0];\r\n    let x2 = x.length > 1 ? '.' + x[1] : '';\r\n    let rgx = /(\\d+)(\\d{3})/;\r\n    while (rgx.test(x1))\r\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\r\n    return x1 + x2;\r\n  }\r\n\r\n  const sharePopover = (\r\n    \r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Body>\r\n        Copied to Clipboard!\r\n      </Popover.Body>\r\n    </Popover>\r\n  );\r\n\r\n\r\n  function NewScoreModal(props) \r\n  {\r\n    let searchParams\r\n    if (typeof window !== 'undefined') \r\n    { searchParams = new URLSearchParams(window.location.search); }\r\n\r\n    let stateChosen\r\n    let mlsChosen\r\n    if(searchParams)\r\n    {\r\n      stateChosen = searchParams.get('state')\r\n      mlsChosen = searchParams.get('mls')\r\n    }\r\n\r\n    let accuracy = ((1-percentageScore)*100).toFixed(2)\r\n    if (accuracy < 0)\r\n    { accuracy = 0} \r\n    return (\r\n      \r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className = \"my-modal\"\r\n      >\r\n        <Modal.Header style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Modal.Title  id=\"contained-modal-title-vcenter\">\r\n            <div style={{display:\"inline\"}}>\r\n              You scored <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>{priceDiff - 1}</span> points (Max score 500). <SocialButtons/>\r\n            </div>\r\n            {/*<OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={sharePopover}>\r\n              <Button onClick={() => {navigator.clipboard.writeText(shareOutput)}} style = {{color: \"white\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}} title=\"Share Results\"  className=\"alignText\">\r\n                Share!\r\n              </Button > \r\n            </OverlayTrigger>\r\n            */}\r\n          </Modal.Title>\r\n          <CloseButton onClick={props.onHide} variant = {`${dark ? 'white' : ''}`} />\r\n        </Modal.Header>\r\n        <Modal.Body style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n\r\n          <p>\r\n\r\n            \r\n            {( () =>\r\n              {\r\n                \r\n                let sec, taxRead, trendRead, original \r\n\r\n                let labelText = ( () => { return (<>Actual list price is <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice).replace(/\\D/g,''))}</span></>) } )()\r\n\r\n                let pBar = ( () => { return (\r\n                <>\r\n                  <Table striped bordered hover variant={`${dark ? 'dark' : ''}`} style={{ width:'100%'}}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Your Guess</th>\r\n                        <th>List Price</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>\r\n                          <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(priceSub).replace(/\\D/g,''))}</span>\r\n                        </td>\r\n                        <td>\r\n                          <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice).replace(/\\D/g,''))}</span>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </Table>\r\n                  \r\n                  You were <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>{accuracy}%</span> accurate.\r\n                  <ProgressBar style={{backgroundColor:'#00dd00 !important', width:'100%',fontSize:'15px',height:'20px'}} now={accuracy} /> \r\n                  \r\n                </> \r\n                ) } )()\r\n\r\n                if ((ogGuess) <= 0)\r\n                { \r\n                  //console.log(\"IN HERE\")\r\n                  sec = ( () => { return (<><br/> You need to be within <span style={{color:\"#00DD00\",fontWeight:\"700\"}}>30%</span> accuracy to score points. <br/></>) } )()\r\n                  \r\n                }\r\n                else\r\n                {\r\n                  if (readTax)\r\n                  {\r\n                    original = ( () => { return (<><br/>Base score: <span style={{fontWeight:\"900\"}}>{ogGuess}</span></>) } )()\r\n                    taxRead = ( () => { return (<><br/><span style={{color:\"#DD2222\",fontWeight:\"900\"}}>-50</span> for using Tax Assessed Value.</>) } )()\r\n                  }\r\n                  if (readTrend)\r\n                  {\r\n                    original = ( () => { return (<><br/>Base score: <span style={{fontWeight:\"900\"}}>{ogGuess}</span></>) } )()\r\n                    trendRead = ( () => { return (<><br/><span style={{color:\"#DD2222\",fontWeight:\"900\"}}>-100</span> for using Average Home Price.</>) } )()\r\n                  }\r\n                }\r\n                let askLogIn\r\n                if (!currentUser)\r\n                {\r\n                  askLogIn = ( () =>\r\n                  {\r\n                    return(\r\n                      <>\r\n                        &#9702;&nbsp;<Link to=\"/Signup\" style={{ color:\"#00DD00\",fontSize:\"1.1rem\",fontWeight:\"800\"}}>Make an account</Link> to track your score!\r\n                      </>\r\n                    )\r\n                  })()\r\n                }\r\n                let learnMore = ( () => { return (\r\n                <><br/><Link to=\"/About\" style={{ color:\"#00DD00\",fontSize:\"1.1rem\",fontWeight:\"800\"}}>Learn more</Link> about how the score is calculated </>) } )()\r\n\r\n                let fillerData = {'mu':meanScore,'sigma':stdDevSigma,'score':(priceDiff-1)}\r\n                let zScore\r\n                if (stdDevSigma > 0)\r\n                { \r\n                  zScore = (((priceDiff-1) - meanScore) / stdDevSigma) \r\n                  console.log(\"zscore ---- \",zScore)\r\n                }\r\n                else\r\n                {\r\n                  zScore = -4\r\n                }\r\n                let percentile = Math.round( GetZPercent(zScore) * 100 )\r\n                return (\r\n                <> \r\n                  {pBar} {sec} {original}{taxRead} {trendRead} <br/> \r\n                  <div style={{textAlign:'left'}}>\r\n                    <h3>Global Rank:</h3>\r\n                    <BellCurve data = {fillerData} />\r\n                    <h4>You scored higher than <span style={{color:\"#00DD00\",fontWeight:\"700\"}}>{percentile}%</span> of all players</h4>\r\n                    {learnMore} {askLogIn}  \r\n                  </div>    \r\n                </>)\r\n\r\n              }\r\n            )()}\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <div className=\"scoreBottomButton-grid\">\r\n              \r\n            <div className=\"scoreBottomButtonBoxes\">\r\n              <Button style={{fontWeight:\"800\",height: 'inherit', textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}} \r\n              onClick = { () => \r\n              {\r\n                LoadWithRandom() \r\n                props.onHide()\r\n              } }>\r\n                New Random Home\r\n              </Button>\r\n            </div>\r\n            <div className=\"scoreBottomButtonBoxes\">\r\n              <Button style={{fontWeight:\"800\",height: 'inherit', textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}}\r\n              onClick = { () => \r\n              {\r\n                LoadWithState() \r\n                props.onHide()\r\n              } }>\r\n                New {houseState} Home\r\n              </Button>\r\n            </div>\r\n            <div className=\"scoreBottomButtonBoxes\">\r\n              <Button style={{height: 'inherit'}} variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n            </div>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  function TaxModal(props) \r\n  {\r\n    return (\r\n      \r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className = \"my-modal\"\r\n      >\r\n        <Modal.Header style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Modal.Title  id=\"contained-modal-title-vcenter\">\r\n            Tax Assessed Value\r\n          </Modal.Title>\r\n          <CloseButton onClick={props.onHide} variant = {`${dark ? 'white' : ''}`} />\r\n        </Modal.Header>\r\n        <Modal.Body style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <p>\r\n            The tax assessed value takes into account the property condition, square footage, and sales of similar homes.\r\n            The actual sale price can be much greater or lower than the tax assesed value.\r\n          </p>\r\n          <p className=\"thicc\">\r\n            Unlocking the tax assessed value will lower your score by 50.\r\n          </p>\r\n          <br/>\r\n          <Button onClick={()=>{\r\n            setReadTax(true) \r\n            setTaxModalShow(false)\r\n          }} style={{ fontSize:\"1.5rem\",fontWeight:\"500\",color:\"white\"}} variant=\"primary\">\r\n            Show Taxes?\r\n          </Button>\r\n        \r\n        </Modal.Body>\r\n        <Modal.Footer style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Button variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n  \r\n  function TrendModal(props) \r\n  {\r\n    return (\r\n      \r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className = \"my-modal\"\r\n      >\r\n        <Modal.Header style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Modal.Title  id=\"contained-modal-title-vcenter\">\r\n            Average House Price\r\n          </Modal.Title>\r\n          <CloseButton onClick={props.onHide} variant = {`${dark ? 'white' : ''}`} />\r\n        </Modal.Header>\r\n        <Modal.Body style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          { (() => {\r\n            //console.log(\"trend\",trend)\r\n\r\n\r\n            function toTitleCase(str) \r\n            {\r\n              return str.replace(\r\n                /\\w\\S*/g,\r\n                function(txt) \r\n                {\r\n                  return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n                }\r\n              );\r\n            }\r\n\r\n            function modString(str)\r\n            {\r\n              if( str == 'home')\r\n              {\r\n                str = 'Average Property'\r\n              }\r\n              str = str.replace(/_/g, ' ');\r\n              return toTitleCase(str)\r\n            }\r\n\r\n            if( readTrend )\r\n            {\r\n              return(\r\n                <>\r\n                  <Table striped bordered hover variant={`${dark ? 'dark' : ''}`} style={{ width:'100%', margin:'auto'}}>\r\n                    <tbody>\r\n                      \r\n                        {\r\n                          Object.entries(trend).map((item,ind) =>\r\n                          {\r\n                            //console.log(\"prop\",item[1])\r\n                            if(item[1] && item[1].listing_price)\r\n                            {\r\n                              //console.log(\"int here\")\r\n                              return (\r\n                              <>  \r\n                              <tr>\r\n                                <td style={{color:\"#00DD00\",fontWeight:\"800\"}}>\r\n                                  ${Comma(String(item[1].listing_price).replace(/\\D/g,''))}\r\n                                </td>\r\n                                <td key={`trend-${ind}`} >\r\n                                  {modString(item[0])}\r\n                                </td>\r\n                              </tr>\r\n                              </>\r\n                              )\r\n                            }\r\n                          })\r\n                        }\r\n                    </tbody>\r\n                  </Table>\r\n                  \r\n                </>\r\n              )\r\n            }\r\n            else\r\n            {\r\n              return(\r\n                <>\r\n                  <p className=\"thicc\">\r\n                    This will show the average house price in the area by house type.  <br/>             \r\n                  </p>\r\n                  <p className=\"thicc\">\r\n                    Unlocking this will lower your Final Score by 100.\r\n                  </p>\r\n                  <br/>\r\n                  <Button onClick={ ()=>\r\n                  {\r\n                    setReadTrend(true) \r\n                    //setTrendModalShow(false)\r\n                  }} \r\n                  style={{ fontSize:\"1.5rem\",fontWeight:\"500\",color:\"white\"}} variant=\"primary\">\r\n\r\n                    Show Average Price\r\n\r\n                  </Button>\r\n                </>\r\n              )\r\n            }\r\n          })()\r\n          }\r\n        \r\n        </Modal.Body>\r\n        <Modal.Footer style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Button variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n\r\n  const BigMap = useCallback(({ center, zoom }) => {\r\n    const [map, setmap] = useState(null);\r\n    if (map) {\r\n      map.flyTo(center);\r\n    }\r\n    //console.log(\"center is\",center,\"zoom is\",zoom)\r\n    return (\r\n      <>\r\n        <MapContainer style={{width:'100%',height:'350px'}}\r\n          center={center}\r\n          zoom={zoom}\r\n          attributionControl={false}\r\n          zoomControl={false}\r\n          whenCreated={setmap}\r\n          scrollWheelZoom={true}\r\n        >\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          ></TileLayer>\r\n          <Circle center={center} pathOptions={{color: '#00DD00'}} radius={400}></Circle>\r\n          {/*\r\n            <Marker position={center}>\r\n            </Marker>\r\n          */}\r\n        </MapContainer>\r\n      </>\r\n    );\r\n  }, [houseData])\r\n\r\n  const SmallMap = useCallback(({ center, zoom }) => {\r\n    const [map, setmap] = useState(null);\r\n\r\n    useEffect(() => {\r\n      if (map) {\r\n        map.flyTo(center);\r\n      }\r\n    }, [])\r\n    //console.log(\"center is\",center,\"zoom is\",zoom)\r\n    return (\r\n      <>\r\n        <MapContainer style={{width:'100%',height:'150px'}}\r\n          center={center}\r\n          zoom={zoom}\r\n          attributionControl={false}\r\n          zoomControl={false}\r\n          whenCreated={setmap}\r\n          scrollWheelZoom={true}\r\n        >\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          ></TileLayer>\r\n          <Circle center={center} pathOptions={{color: '#00DD00'}} radius={400}></Circle>\r\n          {/*\r\n            <Marker position={center}>\r\n            </Marker>\r\n          */}\r\n        </MapContainer>\r\n      </>\r\n    );\r\n  }, [houseData])\r\n\r\n  function MapModal(props) \r\n  {\r\n    return (\r\n      \r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className = \"my-modal\"\r\n      >\r\n        <Modal.Header style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Modal.Title  id=\"contained-modal-title-vcenter\">\r\n            Full Map\r\n          </Modal.Title>\r\n          <CloseButton onClick={props.onHide} variant = {`${dark ? 'white' : ''}`} />\r\n        </Modal.Header>\r\n        <Modal.Body style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          \r\n          <BigMap center={[parseFloat(houseData.address.lat),parseFloat(houseData.address.lon)]} zoom={13}/>\r\n        \r\n        </Modal.Body>\r\n        <Modal.Footer style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Button variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  function SocialButtons ()\r\n  {\r\n    return(\r\n      <>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\"\r\n        />\r\n        <div class=\"share-btn-container\">\r\n          Share:&nbsp;\r\n          <a  href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(shareOutput)}&via=appraisir`} title=\"Tweet Score\" class=\"twitter-btn\" target=\"_blank\">\r\n            <i class=\"fab fa-twitter\"></i>\r\n          </a>\r\n          \r\n          <a href={`https://api.whatsapp.com/send?text=${encodeURIComponent(shareOutput)}`} title=\"Send on WhatsApp\" class=\"whatsapp-btn\" target=\"_blank\">\r\n            <i class=\"fab fa-whatsapp\"></i>\r\n          </a>\r\n\r\n          <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={sharePopover}>\r\n            <a  onClick={() => {navigator.clipboard.writeText(shareOutput)}} title=\"Copy to Clipboard\"  className=\"alignText\">\r\n              <i class=\"fa-solid fa-clipboard-list\"></i>\r\n            </a > \r\n          </OverlayTrigger>\r\n\r\n        {/*\r\n          <a href={`https://www.facebook.com/sharer.php?u=https://appraisir.com/Daily`} class=\"facebook-btn\" target=\"_blank\">\r\n            <i class=\"fab fa-facebook\"></i>\r\n          </a>\r\n\r\n          <a href={`https://pinterest.com/pin/create/bookmarklet/?media=${houseData.photos[0].href}&url=https://appraisir.com/Daily&description=${encodeURIComponent(shareOutput)}`} class=\"pinterest-btn\" target=\"_blank\">\r\n            <i class=\"fab fa-pinterest\"></i>\r\n          </a>\r\n\r\n          <a href={`https://www.linkedin.com/shareArticle?url=https://appraisir.com/Daily&title=${encodeURIComponent(shareOutput)}`} class=\"linkedin-btn\" target=\"_blank\">\r\n            <i class=\"fab fa-linkedin\"></i>\r\n          </a>\r\n        */\r\n        }\r\n        </div>\r\n      \r\n      </>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <PageLayout>\r\n       <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\"\r\n              integrity=\"sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==\" crossorigin=\"\"/>\r\n      <SEO title=\"Daily Home\" />\r\n\r\n      {(()=>\r\n        {\r\n          if (listItems == null)\r\n          {\r\n            return( \r\n            <>\r\n              <h3>The Daily Home is the same for everyone (next one loads at 12AM).</h3>\r\n              <br/>\r\n              <table style={{margin:'auto'}}>\r\n                <tr>\r\n                  <td>\r\n                    <Button style={{fontWeight:\"900\", width:\"100%\", textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}} \r\n                    onClick={LoadWithRandom}>\r\n                      New Random Home\r\n                    </Button> \r\n                  </td>\r\n                  <td>&nbsp;</td>\r\n                  <td>\r\n                    <Button style={{fontWeight:\"900\",width:\"100%\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}}\r\n                    onClick={LoadWithState}>\r\n                      New {houseState} Home\r\n                    </Button> \r\n                  </td>\r\n                </tr>\r\n              </table>\r\n              <br/>\r\n            </>)\r\n          }\r\n        }\r\n        )()\r\n      }\r\n      \r\n      <div>\r\n\r\n          \r\n        {(()=>\r\n          {\r\n            if (alreadyPlayed == false && trend.median != \"filler\") // if user has not played house\r\n            {\r\n              if (trend.median == \"none\") // if no trend data\r\n              {\r\n                return( \r\n                <h3> \r\n                  Guess the price! \r\n                </h3>  )\r\n              }\r\n              else\r\n              {\r\n                return( \r\n                  <h3> \r\n                    Guess the price! &nbsp; \r\n                    <Button onClick={()=>{setTrendModalShow(true)}} style={{fontWeight:\"700\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}} variant=\"primary\"> \r\n                      Hint? \r\n                    </Button> \r\n                  </h3>  )\r\n              }\r\n            }\r\n            else if (alreadyPlayed == false && trend.median == \"filler\") //if user is not logged in and just submitted a price\r\n            {\r\n              return( \r\n              <>\r\n                <h3>You Scored {priceDiff - 1}! <SocialButtons/>\r\n                  {/*\r\n                  <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={sharePopover}>\r\n                    <Button onClick={() => {navigator.clipboard.writeText(shareOutput)}} style = {{color: \"white\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}} title=\"Share Results\"  className=\"alignText\">\r\n                      Share!\r\n                    </Button > \r\n                  </OverlayTrigger>\r\n                  */}\r\n                </h3>\r\n              </>)\r\n            }\r\n            else //if user is logged in and has a previously submitted price (aka alreadyPlayed = true)\r\n            {\r\n              return( \r\n              <>\r\n                <h3>You Scored {previousScore}! <SocialButtons/>\r\n                {/*\r\n                  <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={sharePopover}>\r\n                    <Button onClick={() => {navigator.clipboard.writeText(shareOutput)}} style = {{color: \"white\",textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}} title=\"Share Results\"  className=\"alignText\">\r\n                      Share!\r\n                    </Button > \r\n                  </OverlayTrigger>\r\n                */}\r\n                  \r\n                </h3>\r\n              </>)\r\n            }\r\n          }\r\n          )()\r\n        }\r\n        \r\n      </div>\r\n\r\n      \r\n        \r\n      {(()=>\r\n          {\r\n            const parceInp = useCallback((e) =>\r\n            {\r\n              let val = e.target.value\r\n              val = String(val).replace(/\\D/g,'');\r\n              let ret = Comma(val)\r\n              setPriceComma(ret)\r\n              let valClean = String(val).replace(',','')\r\n              setPriceSub(valClean) \r\n            },[setPriceComma])\r\n\r\n            if (alreadyPlayed == false && hideInput == false)\r\n            {\r\n              return(\r\n              <div className=\"inputPrice\">\r\n                <InputGroup >\r\n                  <InputGroup.Text style={{backgroundColor:\"#00BB00\",borderColor:\"#00BB00\",color:\"white\", fontSize:\"1.5rem\",fontWeight:\"900\"}}>$</InputGroup.Text>\r\n                  <FormControl size=\"lg\" variant=\"success\" type=\"text\" value={priceComma} onChange={(e) => {parceInp(e)}} \r\n                    onKeyPress = { (e) =>\r\n                    {\r\n                      //console.log(e.key)\r\n                      if(e.key === 'Enter')\r\n                      {\r\n                        SubmitPrice()\r\n                      }\r\n                    }} placeholder=\"Input a price\" />\r\n                  <Button onClick={SubmitPrice} style={{ fontSize:\"1.5rem\",fontWeight:\"500\", backgroundColor:\"#00BB00\",borderColor:\"#00BB00\"}} variant=\"success\" value=\"Submit\">Submit</Button>\r\n                </InputGroup>\r\n              </div>\r\n              )\r\n            }\r\n            else if (alreadyPlayed == false && hideInput == true)\r\n            {\r\n              return( \r\n              <>\r\n                <h3> The house price is ${Comma(String(housePrice).replace(/\\D/g,''))}</h3> \r\n                <h4><Link to=\"/Signup\" style={{ color:\"#00DD00\",fontWeight:\"800\"}}>Make an account</Link> to track your score!</h4>\r\n              </>)\r\n            }\r\n            else \r\n            {\r\n              return( <h3> The house price is <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice).replace(/\\D/g,''))}</span> </h3> )\r\n            }\r\n          }\r\n          )()\r\n        }\r\n        \r\n      <br/>\r\n\r\n      \r\n      <div className=\"pageMargin pt-6 mt-6 text-color\">\r\n        <div className=\"basic-grid\">\r\n          \r\n          <div className=\"boxes pics-grid \">\r\n            \r\n            {priceDiff ?  <NewScoreModal\r\n                            show={modalShow}\r\n                            onHide={() => setModalShow(false)}\r\n                          /> : ` `}\r\n\r\n            \r\n            {taxModalShow ?  <TaxModal\r\n                            show={taxModalShow}\r\n                            onHide={() => setTaxModalShow(false)}\r\n                          /> : ` `}\r\n            \r\n            {trendModalShow ?  <TrendModal\r\n                            show={trendModalShow}\r\n                            onHide={() => setTrendModalShow(false)}\r\n                          /> : ` `}\r\n\r\n            {mapModalShow ?  <MapModal\r\n                            show={mapModalShow}\r\n                            onHide={() => setMapModalShow(false)}\r\n                          /> : ` `}\r\n\r\n            <div className=\"picSize\">\r\n              <Carousel images={pics} transitionDurationMax={40} style={{ height: 400, backgroundColor:'transparent' }} hasMediaButton={false} hasIndexBoard={false} />\r\n            </div>\r\n            \r\n          </div>\r\n          <div className=\"boxes text-left thicc \" >\r\n            <hr style={{ borderTop:`1px solid ${dark ? 'white' : 'black'}`}}/>\r\n              \r\n            <div className=\"addrMap-grid\">\r\n              <div className=\"addrMapBoxes\">\r\n                {(() => \r\n                  {\r\n                    if (alreadyPlayed == false && hideInput == false)\r\n                    {\r\n                      return(\r\n                        <>\r\n                          {houseCity}, {houseState}, {houseZip} <br/>\r\n                        </>\r\n                      )\r\n                    }\r\n                    else\r\n                    {\r\n                      return( \r\n                        <>\r\n                          {houseLine}, {houseCity}, {houseState}, {houseZip} <br/>\r\n                        </>\r\n                        )\r\n                    }\r\n                  }\r\n                  )()\r\n                }\r\n                    \r\n                {houseData.beds} <div className=\"thin\">Beds</div> {houseData.baths} <div className=\"thin\">Baths</div>&nbsp; \r\n                {houseSize} <div className=\"thin\">{houseUnits}</div> {houseData.style} <br/>\r\n\r\n                {(() => \r\n                  {\r\n                    if(houseYear)\r\n                    {\r\n                      return(\r\n                        <> {houseYear} <div className=\"thin\">Year Built</div> <br/> </>\r\n                      )\r\n                    }\r\n                  })()\r\n                } \r\n                {(() => \r\n                  {\r\n                    if(listDate)\r\n                    {\r\n                      return(\r\n                        <> { listDate } <div className=\"thin\">List Date</div> <br/> </>\r\n                      )\r\n                    }\r\n                  })()\r\n                } \r\n\r\n              </div>\r\n              <div className=\"addrMapBoxes\">\r\n                {(() => \r\n                  {\r\n                    if(houseData && houseData.address)\r\n                    {\r\n                      return(\r\n                        <div style={{position:'relative'}}>\r\n                          <SmallMap center={[parseFloat(houseData.address.lat),parseFloat(houseData.address.lon)]} zoom={12}/>\r\n                          <button onClick={()=>{setMapModalShow(true)}} style={{opacity:'0.75',backgroundColor:'transparent',border:'none', position:'absolute',bottom:'5px',zIndex:'900'}}> \r\n                            \r\n                            <svg style={{stroke:'#555',fill:'#fff'}} height=\"30\" preserveAspectRatio=\"xMidYMid meet\" role=\"img\" viewBox=\"0 0 30 30\" width=\"30\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <title>Full Map</title>\r\n                              <path d=\"m1 1v10h5v-5h5v-5zm18 0v5h5v5h5v-10zm-18 18v10h10v-5h-5v-5zm18 5v5h10v-10h-5v5z\"></path>\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                      )\r\n                    }\r\n                  })()\r\n                }  \r\n              </div>\r\n            </div> \r\n            <hr style={{ borderTop:`1px solid ${dark ? 'white' : 'black'}`}}/>\r\n          </div>\r\n\r\n          \r\n          <div className=\"boxes text-left thicc scrolling\">\r\n            <u>Description:</u><br/>\r\n            <div className=\"thin\">{houseData.description}</div>\r\n            \r\n          </div>\r\n          <div className=\"boxes text-left features-grid thicc \">\r\n            <Accordion>\r\n              <Accordion.Item eventKey=\"0\" style={{borderColor:'#bbb',borderWidth:'1px'}}>\r\n                <Accordion.Button style={{backgroundColor:`${dark ? '#222' : 'white'}`,color:`${dark ? 'white' : 'black'}`,fontWeight:'900',fontSize:'1.2rem' }}><u>Details:</u></Accordion.Button>\r\n                <Accordion.Body >\r\n                  <div className=\"thin feat-grid\">\r\n                    {(()=>\r\n                      { \r\n                        //console.log(\"tax assesed \",taxAss.length)\r\n                        if (taxAss.length > 0)\r\n                        {\r\n                          if(!readTax)\r\n                          {\r\n                            return(\r\n                              <>\r\n                                <div className=\"featBoxes\">\r\n                                  <div className=\"mid\">Tax Assessed Value </div>\r\n                                  <Button onClick={()=>{setTaxModalShow(true)}} style={{fontWeight:\"700\", width:\"80%\", margin:\"0 auto\", fontSize:\"1.2rem\", textShadow: \"#000 0px 0 5px,#000 0px 0 5px,#000 0px 0 5px\"}} \r\n                                  variant=\"primary\">Unlock Tax Hint?</Button>\r\n                                </div>\r\n                              </>\r\n                            )\r\n                          }\r\n                          else\r\n                          {\r\n                            return(\r\n                            <>\r\n                              <div className=\"featBoxes\">\r\n                                <div className=\"mid\">Tax Assessed Value </div>\r\n                                <ul>\r\n                                  { taxAss && taxAss.map((e,ind) => \r\n                                    {\r\n                                      if(e.assessment)\r\n                                      {\r\n                                        return (\r\n                                          <div key={`tax-${ind}`} >\r\n                                            <li>{e.year} - ${e.assessment.total}</li>\r\n                                          </div>\r\n                                        )\r\n                                      }\r\n                                    })\r\n                                  }\r\n                                </ul>\r\n                              </div>\r\n                            </>\r\n                            )\r\n                          }\r\n                        }\r\n                        else\r\n                        {\r\n                          return(\r\n                            <>\r\n                              <div className=\"featBoxes\">\r\n                                <div className=\"mid\">Tax Assessed Value </div>\r\n                                <div style={{fontWeight:\"600\",color:\"red\"}}>There is no Tax data available for this house. </div>\r\n                              </div>\r\n                            </>\r\n                          )\r\n                        }\r\n                      }\r\n                      )()\r\n                    }\r\n                    { \r\n                      feats.map((e,ind) => \r\n                      {\r\n                        return (\r\n                          <div key={`featCat-${ind}`} className=\"featBoxes\" >\r\n                            <div className=\"mid\">{e.category} </div>\r\n                            <ul>\r\n                              {\r\n                                e.text.map((f,index) =>\r\n                                {\r\n                                  return (\r\n                                    <li key={`featList-${index}`}>\r\n                                      {f}\r\n                                    </li>\r\n                                  )\r\n                                })\r\n                              }\r\n                            </ul>\r\n                          </div>\r\n                        )\r\n                      })\r\n                    }\r\n                  </div>\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            </Accordion>    \r\n          </div>  \r\n        </div>\r\n\r\n        \r\n        \r\n      </div>\r\n      \r\n    </PageLayout>\r\n  )\r\n\r\n}"],"sourceRoot":""}