{"version":3,"sources":["webpack:///./src/pages/compare.js"],"names":["GetHouseData","a","window","searchParams","URLSearchParams","location","search","home1Params","get","divider1","mlsParam1","substring","stateParam1","home2Params","divider2","mlsParam2","stateParam2","altReturn","firebase","firestore","collection","doc","String","then","exists","data","console","log","catch","error","currentUser","loggedUser","useState","userData","mlsID","home1Data","setHome1","home1pics","setHome1Pics","category","text","home1feats","setHome1Feats","home2Data","setHome2","home2pics","setHome2Pics","home2feats","setHome2Feats","confirmShow","setConfirmShow","selectedHouse","setSelectedHouse","notSelectedHouse","setNotSelectedHouse","choiceResult","setChoiceResult","dark","useContext","ThemeContext","rerendering","setRerender","loadHome1Data","pageData","tempPic","photos","forEach","element","str","href","better","length","concat","push","src","features","loadHome2Data","Comma","Num","x","replace","split","x1","x2","rgx","test","useEffect","getHouse","houseSize1","houseUnits1","housePrice1","houseCity1","houseState1","houseZip1","price","building_size","size","units","address","city","state","line","postal_code","lat","lon","houseSize2","houseUnits2","housePrice2","houseCity2","houseState2","houseZip2","SubmitAnswer","evt","preventDefault","win","price1","price2","uid","userID","previousData","userStorage","JSON","parse","localStorage","getItem","setItem","stringify","ordering","localeCompare","keyname","set","LoadNewCompare","LoadRandomHouse","randomHome1","randomHome2","navigate","setTimeout","num","Math","random","ConfirmationModal","props","aria-labelledby","centered","className","Header","style","backgroundColor","color","Title","id","fontSize","onClick","onHide","variant","Body","fontWeight","Footer","title","justifyContent","borderColor","width","value","disabled","textAlign","show","images","height","hasMediaButton","hasIndexBoard","borderTop","beds","baths","year_built","Item","eventKey","borderWidth","Button","description","map","e","ind","key","f","index"],"mappings":"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","file":"component---src-pages-compare-js-797c2569b9be268a79ed.js","sourcesContent":["import React, {useState, useContext, useEffect } from \"react\"\r\nimport ThemeContext from \"../utils/theme\"\r\nimport { PageLayout } from \"../components\"\r\nimport { SEO } from \"../utils\"\r\nimport { Container, Image, InputGroup, FormControl, Form, Button, Modal, CloseButton, ProgressBar} from \"react-bootstrap\"\r\nimport { Accordion } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport firebase from \"../components/firebase\"\r\n\r\nimport { UserData }  from  \"../components/UserData\"\r\nimport 'bootstrap/dist/css/bootstrap.css'; \r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Carousel from 'react-gallery-carousel';\r\nimport 'react-gallery-carousel/dist/index.css';\r\nimport './grid.css';\r\n\r\n\r\nimport { loggedUser, printing } from  \"../components/FirebaseAuth\"\r\nimport { LoadStateHouse, LoadRandomHouse } from  \"../components/LoadStateHouse\"\r\nimport { navigate } from \"@reach/router\"\r\n\r\n\r\nconst GetHouseData = async() =>\r\n{\r\n\r\n  let searchParams\r\n  if (typeof window !== 'undefined') \r\n  {  searchParams = new URLSearchParams(window.location.search);  }\r\n\r\n  \r\n  let home1Params = searchParams.get('home1')\r\n  let divider1 = home1Params.search(\"_\")\r\n  let mlsParam1 = home1Params.substring(0,divider1)\r\n  let stateParam1 = home1Params.substring((divider1+1))\r\n\r\n  let home2Params = searchParams.get('home2')\r\n  let divider2 = home2Params.search(\"_\")\r\n  let mlsParam2 = home2Params.substring(0,divider2)\r\n  let stateParam2 = home2Params.substring((divider2+1))\r\n\r\n  let altReturn ={}\r\n  \r\n\r\n  await firebase.firestore().collection('States').doc(String(stateParam1)).collection('buffer').doc(mlsParam1).get()\r\n  .then((doc) => \r\n  {\r\n    if (doc.exists) \r\n    {\r\n        //console.log(\"Document data:\", doc.data());\r\n        altReturn[\"home1\"] = doc.data()\r\n    } \r\n    else \r\n    {\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"No such document!\");\r\n    }\r\n  }).catch((error) => {\r\n      console.log(\"Error getting document:\", error);\r\n  });\r\n\r\n  await firebase.firestore().collection('States').doc(String(stateParam2)).collection('buffer').doc(mlsParam2).get()\r\n  .then((doc) => \r\n  {\r\n    if (doc.exists) \r\n    {\r\n        //console.log(\"Document data:\", doc.data());\r\n        altReturn[\"home2\"] = doc.data()\r\n    } \r\n    else \r\n    {\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"No such document!\");\r\n    }\r\n  }).catch((error) => {\r\n      console.log(\"Error getting document:\", error);\r\n  });\r\n\r\n\r\n  return altReturn\r\n\r\n}\r\n\r\n\r\nexport default ({location}) => {\r\n\r\n  let currentUser = loggedUser()\r\n\r\n  //let userData = UserData()\r\n  const [userData, setUserData] = useState({})\r\n\r\n  const[mlsID,setmlsID] = useState(\"\")\r\n\r\n  const [home1Data,setHome1] = useState({});\r\n  const [home1pics, setHome1Pics] = useState([]);\r\n  const [home1feats, setHome1Feats] = useState([{category:\"filler\",text:[\"filler\", \"filler\"]}]);\r\n\r\n  const [home2Data,setHome2] = useState({});\r\n  const [home2pics, setHome2Pics] = useState([]);\r\n  const [home2feats, setHome2Feats] = useState([{category:\"filler\",text:[\"filler\", \"filler\"]}]);\r\n\r\n  const [confirmShow, setConfirmShow] = useState(false);\r\n  const [selectedHouse, setSelectedHouse] = useState('');\r\n  const [notSelectedHouse, setNotSelectedHouse] = useState('');\r\n\r\n  const [choiceResult, setChoiceResult] = useState('');\r\n\r\n  const { dark } = useContext(ThemeContext)\r\n  const [rerendering, setRerender] = useState(0.0)\r\n\r\n  const loadHome1Data = (pageData) =>\r\n  {\r\n    setHome1(pageData)\r\n    let tempPic = []\r\n    pageData.photos.forEach(element => {\r\n      let str = element.href\r\n      let trim = str.substring(0, (str.length-5))\r\n      let better = trim.concat(\"od-w1024_h768_x2.webp\")\r\n      tempPic.push({src:better})\r\n    });\r\n\r\n    setHome1Feats(pageData.features)\r\n    setHome1Pics(tempPic)\r\n  }\r\n  const loadHome2Data = (pageData) =>\r\n  {\r\n    setHome2(pageData)\r\n    let tempPic = []\r\n    pageData.photos.forEach(element => {\r\n      let str = element.href\r\n      let trim = str.substring(0, (str.length-5))\r\n      let better = trim.concat(\"od-w1024_h768_x2.webp\")\r\n      tempPic.push({src:better})\r\n    });\r\n\r\n    setHome2Feats(pageData.features)\r\n    setHome2Pics(tempPic)\r\n  }\r\n\r\n  function Comma(Num) \r\n  { //function to add commas to textboxes\r\n    if (Num == null)\r\n    {\r\n      Num = ''\r\n    }\r\n    Num += '';\r\n    Num = Num.replace(',', ''); Num = Num.replace(',', ''); Num = Num.replace(',', '');\r\n    Num = Num.replace(',', ''); Num = Num.replace(',', ''); Num = Num.replace(',', '');\r\n    let x = Num.split('.');\r\n    let x1 = x[0];\r\n    let x2 = x.length > 1 ? '.' + x[1] : '';\r\n    let rgx = /(\\d+)(\\d{3})/;\r\n    while (rgx.test(x1))\r\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\r\n    return x1 + x2;\r\n  }\r\n\r\n  useEffect(() => \r\n  {\r\n    \r\n    ( async () => { \r\n\r\n      let getHouse = await GetHouseData() \r\n      loadHome1Data(getHouse[\"home1\"])\r\n      loadHome2Data(getHouse[\"home2\"])\r\n\r\n    })()\r\n\r\n  }, [mlsID, rerendering])\r\n\r\n  let houseSize1 = 0\r\n  let houseUnits1 = \"\"\r\n  let housePrice1 = 0\r\n  let houseCity1 = \"\"\r\n  let houseState1 = \"\"\r\n  let houseLine1 = \"\"\r\n  let houseZip1 = \"\"\r\n  let houseLat1 = 0\r\n  let houseLon1 = 0\r\n\r\n\r\n  if(home1Data)\r\n  {\r\n    housePrice1 = home1Data.price\r\n    if(home1Data.building_size)\r\n    {\r\n      houseSize1 = home1Data.building_size.size\r\n      houseUnits1 = home1Data.building_size.units\r\n    }\r\n    if(home1Data.address)\r\n    {\r\n      houseCity1 = home1Data.address.city\r\n      houseState1 = home1Data.address.state\r\n      houseLine1 = home1Data.address.line\r\n      houseZip1 = home1Data.address.postal_code\r\n      houseLat1 = home1Data.address.lat\r\n      houseLon1 = home1Data.address.lon\r\n    }\r\n  }\r\n\r\n  let houseSize2 = 0\r\n  let houseUnits2 = \"\"\r\n  let housePrice2 = 0\r\n  let houseCity2 = \"\"\r\n  let houseState2 = \"\"\r\n  let houseLine2 = \"\"\r\n  let houseZip2 = \"\"\r\n  let houseLat2 = 0\r\n  let houseLon2 = 0\r\n\r\n  if(home2Data)\r\n  {\r\n    housePrice2 = home2Data.price\r\n    if(home2Data.building_size)\r\n    {\r\n      houseSize2 = home2Data.building_size.size\r\n      houseUnits2 = home2Data.building_size.units\r\n    }\r\n    if(home2Data.address)\r\n    {\r\n      houseCity2 = home2Data.address.city\r\n      houseState2 = home2Data.address.state\r\n      houseLine2 = home2Data.address.line\r\n      houseZip2 = home2Data.address.postal_code\r\n      houseLat2 = home2Data.address.lat\r\n      houseLon2 = home2Data.address.lon\r\n    }\r\n  }\r\n\r\n\r\n  const SubmitAnswer = async (evt) => \r\n  {\r\n    if(evt)\r\n    { evt.preventDefault(); }\r\n\r\n    let price1 = housePrice1 \r\n    let price2 = housePrice2\r\n    let win = false\r\n\r\n    if (price1 > price2 && selectedHouse=='A')\r\n    {\r\n      //console.log(\"You Chose the Correct House!!\")\r\n      setChoiceResult('Right')\r\n      win = true\r\n    }\r\n    \r\n    else if (price1 > price2 && selectedHouse=='B')\r\n    {\r\n      //console.log(\"You Chose the Wrong House\")\r\n      setChoiceResult('Wrong')\r\n    }\r\n    \r\n    else if (price1 < price2 && selectedHouse=='A')\r\n    {\r\n      //console.log(\"You Chose the Wrong House\")\r\n      setChoiceResult('Wrong')\r\n    }\r\n    \r\n    else if (price1 < price2 && selectedHouse=='B')\r\n    {\r\n      //console.log(\"You Chose the Correct House!!\")\r\n      setChoiceResult('Right')\r\n      win = true\r\n    }\r\n\r\n    if (win)\r\n    {\r\n      if(currentUser && currentUser.uid)\r\n      {\r\n        let userID = `${currentUser.uid}`\r\n        let previousData = {}\r\n\r\n        let userStorage = JSON.parse(localStorage.getItem('userData'))\r\n\r\n        if (userStorage == null)\r\n        {\r\n          //console.log(\"RUNNING Users FIREBASE CALL\")\r\n          await firebase.firestore().collection('Users').doc(String(currentUser.uid)).get()\r\n          .then((doc) => {\r\n            if (doc.exists) \r\n            {\r\n                //console.log(\"Document data:\", doc.data());\r\n                //doc.data()\r\n                previousData = doc.data()\r\n                localStorage.setItem('userData', JSON.stringify(doc.data()) )\r\n            } \r\n            else \r\n            {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such user!\");\r\n            }\r\n          }).catch((error) => {\r\n              console.log(\"Error getting user:\", error);\r\n          });\r\n        }\r\n        else \r\n        {\r\n          previousData = userStorage\r\n          //console.log(\"didnt run Submit Price Users firebase read because data is in local storage\", userStorage)\r\n        }\r\n        \r\n        let searchParams\r\n        if (typeof window !== 'undefined') \r\n        {  searchParams = new URLSearchParams(window.location.search);  }\r\n\r\n\r\n        let home1Params = searchParams.get('home1')\r\n        let divider1 = home1Params.search(\"_\")\r\n        let mlsParam1 = home1Params.substring(0,divider1)\r\n        let stateParam1 = home1Params.substring((divider1+1))\r\n\r\n        let home2Params = searchParams.get('home2')\r\n        let divider2 = home2Params.search(\"_\")\r\n        let mlsParam2 = home2Params.substring(0,divider2)\r\n        let stateParam2 = home2Params.substring((divider2+1))\r\n\r\n        let ordering = String(mlsParam1).localeCompare(String(mlsParam2))\r\n        //console.log(\"ordering is\", ordering)\r\n        let keyname\r\n        if(ordering == 1)\r\n        {\r\n          keyname = \"compare\".concat(mlsParam1).concat(\".\").concat(stateParam1).concat(\"+\").concat(mlsParam2).concat(\".\").concat(stateParam2)\r\n        }\r\n        else\r\n        {\r\n          keyname = \"compare\".concat(mlsParam2).concat(\".\").concat(stateParam2).concat(\"+\").concat(mlsParam1).concat(\".\").concat(stateParam1)\r\n        }\r\n        //console.log(\"the key is\", keyname)\r\n\r\n        previousData[keyname] = [100]\r\n\r\n        //console.log(\"entry would be\", previousData)\r\n        //console.log(\"SETTING USERS FIREBASE CALL\")\r\n\r\n        firebase.firestore().collection('Users').doc(String(userID)).set(previousData)\r\n        localStorage.setItem('userData', JSON.stringify(previousData) )\r\n        \r\n        //console.log(\"updated userData in localstorage\", localStorage)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const LoadNewCompare = async (evt) => \r\n  {\r\n    let mode = 'return'\r\n    let [randomHome1,randomHome2] = await LoadRandomHouse(userData,mode)\r\n\r\n    //console.log(\"the two new homes are\",randomHome1,randomHome2)\r\n\r\n    setSelectedHouse('')\r\n    setNotSelectedHouse('')\r\n    setConfirmShow(false)\r\n    setChoiceResult('')\r\n\r\n    navigate(`/compare?home1=${randomHome1}&home2=${randomHome2}`)\r\n\r\n    setTimeout(() => \r\n    {  \r\n      let num = Math.random() + Math.random() + Math.random()\r\n      setRerender(num)\r\n      //console.log(\"Called rerender\")\r\n    }, 100);\r\n    \r\n  }\r\n\r\n  function ConfirmationModal(props) \r\n  {\r\n    return (\r\n      \r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className = \"my-modal\"\r\n      >\r\n        <Modal.Header style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          <Modal.Title  id=\"contained-modal-title-vcenter\">\r\n          { (() => \r\n            {\r\n              if(choiceResult == '')\r\n              {\r\n                return(\r\n                  <>\r\n                    You selected:<span style={{color:'#00dd00',fontSize:'2rem'}}> {selectedHouse}</span> costs more than <span style={{color:'#00dd00',fontSize:'2rem'}}>{notSelectedHouse}</span> \r\n                  </>\r\n                );\r\n              }\r\n              else if(choiceResult == 'Right')\r\n              {\r\n                return(\r\n                  <>\r\n                    Congratulations!!! 😀\r\n                  </>\r\n                );\r\n              }\r\n              else if(choiceResult == 'Wrong')\r\n              {\r\n                return(\r\n                  <>\r\n                    Sorry 😢\r\n                  </>\r\n                );\r\n              }\r\n            })()\r\n          }\r\n          </Modal.Title>\r\n          <CloseButton onClick={props.onHide} variant = {`${dark ? 'white' : ''}`} />\r\n        </Modal.Header>\r\n        <Modal.Body style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          { (() => \r\n            {\r\n              if(choiceResult == '')\r\n              {\r\n                return(\r\n                  <>\r\n                    <p className=\"thicc\">\r\n                      Click 'Yes' to confirm or 'Close' to change your answer.\r\n                    </p>\r\n                    <br/>\r\n                    <Button onClick={SubmitAnswer} style={{ fontSize:\"1.5rem\",fontWeight:\"500\",color:\"white\"}} variant=\"primary\">\r\n                      Yes!\r\n                    </Button>\r\n                  </>\r\n                );\r\n              }\r\n              else if(choiceResult == 'Right')\r\n              {\r\n                return(\r\n                  <>\r\n                    You are correct! You scored 100 points!!!! <br/>\r\n                    House A is <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice1).replace(/\\D/g,''))} </span> \r\n                    and House B is <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice2).replace(/\\D/g,''))}</span>\r\n                  </>\r\n                );\r\n              }\r\n              else if(choiceResult == 'Wrong')\r\n              {\r\n                return(\r\n                  <>\r\n                    That is incorrect. Better luck next time. <br/>\r\n                    House A is <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice1).replace(/\\D/g,''))} </span> \r\n                    and House B is <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice2).replace(/\\D/g,''))}</span>\r\n                  </>\r\n                );\r\n              }\r\n            })()\r\n          }\r\n          \r\n        \r\n        </Modal.Body>\r\n        <Modal.Footer style = {{backgroundColor: `${dark ? '#222' : 'white'}`,color: `${dark ? 'white' : 'black'}`}}>\r\n          { (() => \r\n            {\r\n              if(choiceResult == '')\r\n              {\r\n                return(\r\n                  <>\r\n                    <Button variant=\"danger\" onClick={props.onHide}>Close</Button>\r\n                  </>\r\n                );\r\n              }\r\n              else\r\n              {\r\n                return(\r\n                  <>\r\n                    <Button variant=\"danger\" onClick={() => \r\n                      {\r\n                        props.onHide()\r\n                        //setChoiceResult('')\r\n                      }\r\n                    }>Close</Button>\r\n                  </>\r\n                );\r\n              }\r\n            })()\r\n          }\r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  \r\n\r\n  \r\n  return (\r\n    <PageLayout>\r\n      <SEO title=\"Compare\" />\r\n\r\n      { (() => \r\n        {\r\n          if(choiceResult == '')\r\n          {\r\n            return(\r\n              <>\r\n                <div className=\"inputCompare text-color\">\r\n                  <h3>  Which Price is Higher? </h3> \r\n                  <InputGroup style={{ justifyContent : 'center'}}>\r\n                    <Button onClick={() =>\r\n                      {\r\n                        setSelectedHouse('A')\r\n                        setNotSelectedHouse('B')\r\n                        setConfirmShow(true)\r\n                      }\r\n                    } style={{ fontSize:\"1.5rem\",fontWeight:\"900\", backgroundColor:\"#00BB00\",borderColor:\"#00BB00\",width:'40%'}} variant=\"success\" value=\"Submit\">\r\n                      A\r\n                    </Button> \r\n                    <Button disabled style={{backgroundColor:'grey',borderColor:\"grey\", color:'white', fontSize:\"1.2rem\",fontWeight:\"900\",width:'20%',textAlign:'center'}}>\r\n                      OR\r\n                    </Button>\r\n                    <Button onClick={() =>\r\n                      {\r\n                        setSelectedHouse('B')\r\n                        setNotSelectedHouse('A')\r\n                        setConfirmShow(true)\r\n                      }\r\n                    } style={{ fontSize:\"1.5rem\",fontWeight:\"900\", backgroundColor:\"#00BB00\",borderColor:\"#00BB00\",width:'40%'}} variant=\"success\" value=\"Submit\">\r\n                      B\r\n                    </Button>\r\n                  </InputGroup>\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n          else\r\n          {\r\n            return(\r\n              <>\r\n                <div className=\"inputCompare text-color\">\r\n                  <InputGroup style={{ justifyContent : 'center'}}>\r\n                    <Button onClick={() =>\r\n                      {\r\n                        LoadNewCompare()\r\n                      }\r\n                    } style={{ fontSize:\"1.5rem\",fontWeight:\"900\", backgroundColor:\"#00BB00\",borderColor:\"#00BB00\",width:'90%'}} variant=\"success\" value=\"Submit\">\r\n                      New Comparison\r\n                    </Button> \r\n                  </InputGroup>\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n        })()\r\n      }\r\n      \r\n\r\n      {confirmShow ?  <ConfirmationModal\r\n                            show={confirmShow}\r\n                            onHide={() => setConfirmShow(false)}\r\n                          /> : ` `}\r\n\r\n\r\n      <br/>\r\n      \r\n      \r\n      <div className=\"pageMargin pt-6 mt-6 text-color\">\r\n        <div className=\"compareTop-grid\">\r\n          <div className=\"compareTopBox\">\r\n            { (() => \r\n              {\r\n                if(choiceResult == '')\r\n                {\r\n                  return(\r\n                    <>\r\n                      <h2> A </h2>\r\n                    </>\r\n                  );\r\n                }\r\n                else\r\n                {\r\n                  return(\r\n                    <>\r\n                      <h2> <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice1).replace(/\\D/g,''))} </span> </h2>\r\n                    </>\r\n                  );\r\n                }\r\n              })()\r\n            }\r\n             \r\n\r\n            <div className=\"compareBasic-grid\">            \r\n              <div className=\"compareBasicBoxes \">\r\n                <Carousel images={home1pics} style={{ height: 400, backgroundColor:'transparent' }} hasMediaButton={false} hasIndexBoard={false} />\r\n              </div>\r\n\r\n              <div className=\"compareBasicBoxes text-left thicc \" >\r\n                <hr style={{ borderTop:`1px solid ${dark ? 'white' : 'black'}`}}/>\r\n                    {/*houseLine1*/} {houseCity1}, {houseState1}, {houseZip1} <br/>\r\n                    \r\n                    {home1Data.beds} <div className=\"thin\">Beds</div> {home1Data.baths} <div className=\"thin\">Baths</div>&nbsp; \r\n                    {houseSize1} <div className=\"thin\">{houseUnits1}</div> {home1Data.style} <br/>\r\n\r\n                    {home1Data.year_built} <div className=\"thin\">Year Built</div> \r\n              </div>\r\n\r\n              \r\n              <Accordion >\r\n                <Accordion.Item eventKey=\"0\" style={{borderColor:'#bbb',borderWidth:'1px'}}>\r\n                  <Accordion.Button style={{ backgroundColor:`${dark ? '#222' : 'white'}`,color:`${dark ? 'white' : 'black'}` }}><u>Description:</u></Accordion.Button>\r\n                  <Accordion.Body >\r\n                    <div className=\"compareBasicBoxes text-left thicc scrolling\">\r\n                      <div className=\"thin\">{home1Data.description}</div>\r\n                    </div>\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              </Accordion>\r\n              \r\n              \r\n              <div className=\"compareBasicBoxes text-left thicc \">\r\n                <Accordion >\r\n                  <Accordion.Item eventKey=\"0\" style={{borderColor:'#bbb',borderWidth:'1px'}}>\r\n                    <Accordion.Button style={{ backgroundColor:`${dark ? '#222' : 'white'}`,color:`${dark ? 'white' : 'black'}` }}><u>Details:</u></Accordion.Button>\r\n                    <Accordion.Body >\r\n                      <div className=\"thin feat-grid\">\r\n                        { \r\n                          home1feats.map((e,ind) => \r\n                          {\r\n                            return (\r\n                              <div key={`featCat-${ind}`} className=\"featBoxes\" >\r\n                                <div className=\"mid\">{e.category} </div>\r\n                                <ul>\r\n                                  {\r\n                                    e.text.map((f,index) =>\r\n                                    {\r\n                                      return (\r\n                                        <li key={`featList-${index}`}>\r\n                                          {f}\r\n                                        </li>\r\n                                      )\r\n                                    })\r\n                                  }\r\n                                </ul>\r\n                              </div>\r\n                            )\r\n                          })\r\n                        }\r\n                      </div>\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"compareTopBox\">  \r\n            { (() => \r\n              {\r\n                if(choiceResult == '')\r\n                {\r\n                  return(\r\n                    <>\r\n                      <h2> B </h2>\r\n                    </>\r\n                  );\r\n                }\r\n                else\r\n                {\r\n                  return(\r\n                    <>\r\n                      <h2> <span style={{color:\"#00DD00\",fontWeight:\"800\"}}>${Comma(String(housePrice2).replace(/\\D/g,''))} </span> </h2>\r\n                    </>\r\n                  );\r\n                }\r\n              })()\r\n            } \r\n\r\n            <div className=\"compareBasic-grid\">\r\n              <div className=\"compareBasicBoxes\">\r\n                <Carousel images={home2pics} style={{ height: 400, backgroundColor:'transparent' }} hasMediaButton={false} hasIndexBoard={false} />\r\n              </div>\r\n\r\n              <div className=\"compareBasicBoxes text-left thicc \" >\r\n                <hr style={{ borderTop:`1px solid ${dark ? 'white' : 'black'}`}}/>\r\n                    {/*houseLine2*/} {houseCity2}, {houseState2}, {houseZip2} <br/>\r\n                    \r\n                    {home2Data.beds} <div className=\"thin\">Beds</div> {home2Data.baths} <div className=\"thin\">Baths</div>&nbsp; \r\n                    {houseSize2} <div className=\"thin\">{houseUnits2}</div> {home2Data.style} <br/>\r\n\r\n                    {home2Data.year_built} <div className=\"thin\">Year Built</div>\r\n              </div>\r\n\r\n              <Accordion >\r\n                <Accordion.Item eventKey=\"0\" style={{borderColor:'#bbb',borderWidth:'1px'}}>\r\n                  <Accordion.Button style={{ backgroundColor:`${dark ? '#222' : 'white'}`,color:`${dark ? 'white' : 'black'}` }}><u>Description:</u></Accordion.Button>\r\n                  <Accordion.Body >\r\n                    <div className=\"compareBasicBoxes text-left thicc scrolling\">\r\n                      <div className=\"thin\">{home2Data.description}</div>\r\n                    </div>\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              </Accordion>\r\n              \r\n              <div className=\"compareBasicBoxes text-left thicc \">\r\n                <Accordion >\r\n                  <Accordion.Item eventKey=\"0\" style={{borderColor:'#bbb',borderWidth:'1px'}}>\r\n                    <Accordion.Button style={{ backgroundColor:`${dark ? '#222' : 'white'}`,color:`${dark ? 'white' : 'black'}` }}><u>Details:</u></Accordion.Button>\r\n                    <Accordion.Body >\r\n                      <div className=\"thin feat-grid\">\r\n                        { \r\n                          home2feats.map((e,ind) => \r\n                          {\r\n                            return (\r\n                              <div key={`featCat-${ind}`} className=\"featBoxes\" >\r\n                                <div className=\"mid\">{e.category} </div>\r\n                                <ul>\r\n                                  {\r\n                                    e.text.map((f,index) =>\r\n                                    {\r\n                                      return (\r\n                                        <li key={`featList-${index}`}>\r\n                                          {f}\r\n                                        </li>\r\n                                      )\r\n                                    })\r\n                                  }\r\n                                </ul>\r\n                              </div>\r\n                            )\r\n                          })\r\n                        }\r\n                      </div>\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </PageLayout>\r\n  )\r\n\r\n}"],"sourceRoot":""}