{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.promise.finally.js","webpack:///./src/pages/UpdateProfile.js"],"names":["$export","core","global","speciesConstructor","promiseResolve","P","R","onFinally","C","this","Promise","isFunction","then","x","e","UpdateProfile","emailRef","useRef","passwordRef","passwordConfirmRef","currentUser","loggedUser","useState","error","setError","loading","setLoading","title","className","style","maxWidth","borderColor","borderWidth","Body","variant","onSubmit","preventDefault","current","value","promises","email","push","updateEmail","updatePassword","all","navigate","catch","message","finally","Group","id","Label","Control","type","ref","required","defaultValue","placeholder","disabled","to"],"mappings":"4FAEA,IAAIA,EAAU,EAAQ,QAClBC,EAAO,EAAQ,QACfC,EAAS,EAAQ,QACjBC,EAAqB,EAAQ,QAC7BC,EAAiB,EAAQ,QAE7BJ,EAAQA,EAAQK,EAAIL,EAAQM,EAAG,UAAW,CAAE,QAAW,SAAUC,GAC/D,IAAIC,EAAIL,EAAmBM,KAAMR,EAAKS,SAAWR,EAAOQ,SACpDC,EAAiC,mBAAbJ,EACxB,OAAOE,KAAKG,KACVD,EAAa,SAAUE,GACrB,OAAOT,EAAeI,EAAGD,KAAaK,MAAK,WAAc,OAAOC,MAC9DN,EACJI,EAAa,SAAUG,GACrB,OAAOV,EAAeI,EAAGD,KAAaK,MAAK,WAAc,MAAME,MAC7DP,O,kRCTO,SAASQ,IAEtB,IAAMC,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBACrBG,EAAcC,cAJtB,EAK4BC,mBAAS,IAA5BC,EALT,KAKgBC,EALhB,OAMgCF,oBAAS,GAAhCG,EANT,KAMkBC,EANlB,KA6CE,OACE,oCACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,YACX,kBAAC,IAAD,CAAWC,UAAU,oDACnB,yBAAKA,UAAU,mBAAmBC,MAAO,CAAEC,SAAU,UACnD,kBAAC,IAAD,CAAMD,MAAO,CAAEE,YAAY,OAAOC,YAAY,QAC5C,kBAAC,IAAKC,KAAN,KAEE,wBAAIL,UAAU,oBAAd,kBACCL,GAAS,kBAAC,IAAD,CAAOW,QAAQ,UAAUX,GAEnC,kBAAC,IAAD,CAAMY,SAhDlB,SAAsBrB,GAGpB,GADAA,EAAEsB,iBACElB,EAAYmB,QAAQC,QAAUnB,EAAmBkB,QAAQC,MAE3D,OAAOd,EAAS,0BAGlB,IAAMe,EAAW,GACjBb,GAAW,GACXF,EAAS,IAELR,EAASqB,QAAQC,QAAUlB,EAAYoB,OAEzCD,EAASE,KAAKC,YAAY1B,EAASqB,QAAQC,QAEzCpB,EAAYmB,QAAQC,OAEtBC,EAASE,KAAKE,YAAezB,EAAYmB,QAAQC,QAGnD5B,QAAQkC,IAAIL,GACT3B,MAAK,WAEJiC,mBAAS,iBAEVC,OAAM,SAAChC,GAENU,EAAS,6BAA4BV,GAAKA,EAAEiC,aAE7CC,SAAQ,WAEPtB,GAAW,QAiBH,kBAAC,IAAKuB,MAAN,CAAYC,GAAG,SACb,kBAAC,IAAKC,MAAN,cACA,kBAAC,IAAKC,QAAN,CACEC,KAAK,QACLC,IAAKtC,EACLuC,UAAQ,EACRC,aAAcpC,EAAYoB,SAG9B,kBAAC,IAAKS,MAAN,CAAYC,GAAG,YACb,kBAAC,IAAKC,MAAN,iBACA,kBAAC,IAAKC,QAAN,CACEC,KAAK,WACLC,IAAKpC,EACLuC,YAAY,kCAGhB,kBAAC,IAAKR,MAAN,CAAYC,GAAG,oBACb,kBAAC,IAAKC,MAAN,8BACA,kBAAC,IAAKC,QAAN,CACEC,KAAK,WACLC,IAAKnC,EACLsC,YAAY,kCAGhB,kBAAC,IAAD,CAAQC,SAAUjC,EAASG,UAAU,QAAQyB,KAAK,UAAlD,aAQN,yBAAKzB,UAAU,0BACb,kBAAC,OAAD,CAAM+B,GAAG,KAAT","file":"component---src-pages-update-profile-js-c679fb296c64e2aced52.js","sourcesContent":["// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","\r\nimport React, { useRef, useState , useContext} from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { loggedUser,updatePassword, updateEmail} from  \"../components/FirebaseAuth\"\r\nimport { Link, navigate } from \"gatsby\"\r\nimport { PageLayout } from \"../components\"\r\nimport { SEO } from \"../utils\"\r\n\r\nexport default function UpdateProfile() \r\n{\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef() \r\n  const passwordConfirmRef = useRef()\r\n  const currentUser = loggedUser()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n\r\n  function handleSubmit(e) \r\n  {\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) \r\n    {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n    \r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) \r\n    {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) \r\n    {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => \r\n      {\r\n        navigate(`/Dashboard`)\r\n      })\r\n      .catch((e) => \r\n      {\r\n        setError(`Failed to update account ${e && e.message}`)\r\n      })\r\n      .finally(() => \r\n      {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <PageLayout>\r\n      <SEO title=\"Sign Up\" />\r\n      <Container className=\"d-flex align-items-center justify-content-center\" >\r\n        <div className=\"w-100 text-color\" style={{ maxWidth: \"400px\" }}>\r\n          <Card style={{ borderColor:\"grey\",borderWidth:\"3px\" }}>\r\n            <Card.Body>\r\n\r\n              <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group id=\"email\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    ref={emailRef}\r\n                    required\r\n                    defaultValue={currentUser.email}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group id=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    ref={passwordRef}\r\n                    placeholder=\"Leave blank to keep the same\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group id=\"password-confirm\">\r\n                  <Form.Label>Password Confirmation</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    ref={passwordConfirmRef}\r\n                    placeholder=\"Leave blank to keep the same\"\r\n                  />\r\n                </Form.Group>\r\n                <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                  Update\r\n                </Button>\r\n              </Form>\r\n\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <div className=\"w-100 text-center mt-2\">\r\n            <Link to=\"/\">Cancel</Link>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </PageLayout>\r\n    </>\r\n  )\r\n}"],"sourceRoot":""}