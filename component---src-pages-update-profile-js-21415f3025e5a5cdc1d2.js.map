{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.promise.finally.js","webpack:///./src/pages/UpdateProfile.js"],"names":["$export","core","global","speciesConstructor","promiseResolve","P","R","onFinally","C","this","Promise","isFunction","then","x","e","UpdateProfile","nameRef","useRef","emailRef","passwordRef","passwordConfirmRef","currentUser","loggedUser","useState","error","setError","loading","setLoading","title","className","style","maxWidth","borderColor","borderWidth","Body","variant","onSubmit","preventDefault","current","value","promises","push","updateProfile","email","updateEmail","updatePassword","all","a","profileInfo","firebase","firestore","collection","doc","String","uid","get","exists","previousData","data","console","log","catch","displayName","set","neededData","localStorage","setItem","JSON","stringify","navigate","message","finally","Group","id","Label","Control","type","ref","required","defaultValue","placeholder","disabled","to"],"mappings":"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","file":"component---src-pages-update-profile-js-21415f3025e5a5cdc1d2.js","sourcesContent":["// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","\r\nimport React, { useRef, useState , useContext} from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { loggedUser,updatePassword, updateEmail,updateProfile} from  \"../components/FirebaseAuth\"\r\nimport { Link, navigate } from \"gatsby\"\r\nimport { PageLayout } from \"../components\"\r\nimport { SEO } from \"../utils\"\r\n\r\nimport firebase from \"../components/firebase\"\r\n\r\nexport default function UpdateProfile() \r\n{\r\n  const nameRef = useRef()\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef() \r\n  const passwordConfirmRef = useRef()\r\n  const currentUser = loggedUser()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n\r\n  function handleSubmit(e) \r\n  {\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) \r\n    {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n    \r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (currentUser)\r\n    {\r\n      \r\n      if (nameRef.current.value) \r\n      {\r\n        promises.push(updateProfile(nameRef.current.value))\r\n      }\r\n      if (emailRef.current.value !== currentUser.email) \r\n      {\r\n        promises.push(updateEmail(emailRef.current.value))\r\n      }\r\n      if (passwordRef.current.value) \r\n      {\r\n        promises.push(updatePassword(passwordRef.current.value))\r\n      }\r\n    \r\n      Promise.all(promises)\r\n      .then(async () => \r\n      {\r\n        let profileInfo = loggedUser()\r\n        \r\n        let previousData\r\n        //console.log(\"RUNNING Users FIREBASE CALL\")\r\n        await firebase.firestore().collection('Users').doc(String(profileInfo.uid)).get()\r\n        .then((doc) => {\r\n          if (doc.exists) \r\n          {\r\n              //console.log(\"Document data:\", doc.data());\r\n              //doc.data()\r\n              previousData = doc.data()\r\n          } \r\n          else \r\n          {\r\n              // doc.data() will be undefined in this case\r\n              console.log(\"No such user!\");\r\n          }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting user:\", error);\r\n        });\r\n\r\n        previousData[\"displayName\"] =[0, String(profileInfo.displayName),String(profileInfo.email)]\r\n\r\n        firebase.firestore().collection('Users').doc(String(profileInfo.uid)).set(previousData)\r\n\r\n        let neededData = {\"email\":profileInfo.email,\"displayName\":profileInfo.displayName,\"uid\":profileInfo.uid}\r\n        //console.log(\"profile is\",neededData)\r\n        localStorage.setItem('profileData', JSON.stringify(neededData) )\r\n        navigate(`/Profile`)\r\n      })\r\n      .catch((e) => \r\n      {\r\n        setError(`Failed to update account ${e && e.message}`)\r\n      })\r\n      .finally(() => \r\n      {\r\n        setLoading(false)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <PageLayout>\r\n      <SEO title=\"Sign Up\" />\r\n      <Container className=\"d-flex align-items-center justify-content-center\" >\r\n        <div className=\"w-100 text-color\" style={{ maxWidth: \"400px\" }}>\r\n          <Card style={{ borderColor:\"grey\",borderWidth:\"3px\" }}>\r\n            <Card.Body>\r\n\r\n              <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group id=\"name\">\r\n                  <Form.Label>Display Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    ref={nameRef}\r\n                    required\r\n                    defaultValue={currentUser ? currentUser.displayName : \"\"}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group id=\"email\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    ref={emailRef}\r\n                    required\r\n                    defaultValue={currentUser ? currentUser.email : \"\"}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group id=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    ref={passwordRef}\r\n                    placeholder=\"Leave blank to keep the same\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group id=\"password-confirm\">\r\n                  <Form.Label>Password Confirmation</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    ref={passwordConfirmRef}\r\n                    placeholder=\"Leave blank to keep the same\"\r\n                  />\r\n                </Form.Group>\r\n                <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                  Update\r\n                </Button>\r\n              </Form>\r\n\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <div className=\"w-100 text-center mt-2\">\r\n            <Link to=\"/Profile\">Cancel</Link>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </PageLayout>\r\n    </>\r\n  )\r\n}"],"sourceRoot":""}